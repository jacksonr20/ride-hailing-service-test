var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddRelationBetweenDriversAndCars1678187764454.html",[0,0.098,1,3.005]],["body/classes/AddRelationBetweenDriversAndCars1678187764454.html",[0,0.104,1,5.162,2,0.964,3,0.166,4,0.147,5,0.129,6,5.751,7,3.56,8,1.719,9,1.938,10,0.204,11,0.53,12,1.058,13,1.19,14,2.134,15,1.54,16,1.719,17,1.649,18,0.399,19,0.016,20,0.572,21,1.004,22,1.004,23,0.824,24,4.113,25,1.719,26,2.337,27,4.113,28,1.24,29,0.767,30,1.19,31,1.495,32,1.719,33,4.113,34,0.372,35,0.688,36,0.166,37,1.495,38,2.396,39,1.988,40,5.162,41,2.221,42,4.421,43,1.282,44,1.585,45,1.734,46,2.124,47,5.513,48,2.006,49,1.517,50,2.006,51,3.56,52,2.006,53,1.818,54,1.908,55,2.006,56,2.325,57,1.282,58,0.011,59,0.011]],["title/classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html",[0,0.098,60,3.005]],["body/classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html",[0,0.104,2,0.964,3,0.166,4,0.147,5,0.129,8,1.719,9,1.938,10,0.204,11,0.53,12,1.058,13,1.19,14,2.134,15,1.54,16,1.719,17,1.649,18,0.399,19,0.016,20,0.572,21,1.004,22,1.004,23,0.824,25,1.719,26,2.337,28,1.24,29,0.767,30,1.19,31,1.495,32,1.719,34,0.372,35,0.688,36,0.166,37,1.495,38,2.396,39,1.988,41,2.221,43,1.282,44,1.585,45,1.734,46,2.124,48,2.006,49,1.517,50,2.006,52,2.006,53,1.818,54,1.908,55,2.006,56,2.325,57,1.282,58,0.011,59,0.011,60,5.162,61,5.751,62,3.56,63,4.113,64,4.113,65,4.113,66,5.751,67,4.832,68,5.513,69,3.56]],["title/classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html",[0,0.098,70,3.005]],["body/classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html",[0,0.083,2,0.775,3,0.133,4,0.118,5,0.103,8,1.477,9,1.726,10,0.164,11,0.455,12,0.978,13,1.023,14,1.993,15,1.438,16,1.477,17,1.417,18,0.497,19,0.015,20,0.46,21,0.807,22,0.807,23,0.734,25,1.477,26,2.227,28,1.066,29,0.659,30,1.023,31,1.361,32,1.477,34,0.299,35,0.553,36,0.133,37,1.733,38,2.857,39,2.169,41,1.332,45,2.959,56,1.394,57,2.227,58,0.009,59,0.009,70,4.699,71,5.234,72,2.861,73,3.305,74,3.305,75,3.305,76,3.643,77,5.537,78,2.861,79,2.568,80,2.568,81,3.979,82,4.1,83,5.234,84,3.117,85,3.305,86,3.305,87,2.861,88,3.681,89,2.73,90,2.436,91,3.681,92,3.305,93,2.847,94,6.047,95,2.311,96,2.73,97,3.4,98,2.805,99,2.436,100,2.436,101,3.643,102,2.861,103,3.305,104,3.305]],["title/classes/AlterPaymentsTableToAddTransactionId1678308519422.html",[0,0.098,105,3.005]],["body/classes/AlterPaymentsTableToAddTransactionId1678308519422.html",[0,0.096,2,0.894,3,0.154,4,0.136,5,0.119,8,1.633,9,1.865,10,0.189,11,0.504,12,1.031,13,1.131,14,2.086,15,1.506,16,1.633,17,1.567,18,0.474,19,0.015,20,0.531,21,0.931,22,0.931,23,0.793,25,1.633,26,2.301,28,1.179,29,0.729,30,1.131,31,1.449,32,1.633,34,0.345,35,0.638,36,0.154,37,1.637,38,2.803,39,2.177,41,1.537,45,2.941,56,1.609,57,2.227,58,0.01,59,0.01,81,3.447,95,2.556,96,3.02,97,3.674,98,2.988,99,2.694,100,2.694,101,3.937,105,5.004,106,5.575,107,3.302,108,3.815,109,3.815,110,3.815,111,4.535,112,2.343,113,2.51,114,1.609]],["title/classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html",[0,0.098,115,3.005]],["body/classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html",[0,0.064,2,0.594,3,0.102,4,0.091,5,0.079,8,1.213,9,1.476,10,0.126,11,0.374,12,0.875,13,0.84,14,1.808,15,1.305,16,1.213,17,1.164,18,0.304,19,0.015,20,0.353,21,0.619,22,0.619,23,0.627,25,1.213,26,2.076,28,0.875,29,0.541,30,0.84,31,1.195,32,1.213,34,0.23,35,0.424,36,0.102,37,1.747,38,2.939,39,2.323,41,2.893,43,1.655,44,2.329,45,2.549,46,2.889,48,2.949,49,2.23,50,2.949,52,2.949,53,2.346,54,2.804,55,3.168,56,3.028,57,1.884,58,0.008,59,0.008,84,2.56,95,2.949,96,2.729,98,3.539,99,2.73,100,2.73,115,4.125,116,4.596,117,2.194,118,2.535,119,2.535,120,2.535,121,3.367,122,3.367,123,3.367,124,4.098,125,3.367,126,3.367,127,4.596,128,3.367,129,2.73,130,4.596,131,3.367,132,3.367,133,3.977,134,3.367,135,3.367]],["title/classes/AlterRequestTableToHandleGeometryFields1678285496704.html",[0,0.098,136,3.005]],["body/classes/AlterRequestTableToHandleGeometryFields1678285496704.html",[0,0.105,2,0.971,3,0.167,4,0.148,5,0.13,8,1.727,9,1.946,10,0.205,11,0.533,12,1.061,13,1.196,14,2.138,15,1.543,16,1.727,17,1.658,18,0.468,19,0.016,20,0.576,21,1.012,22,1.012,23,0.827,25,1.727,26,2.341,28,1.247,29,0.771,30,1.196,31,1.499,32,1.727,34,0.375,35,0.693,36,0.167,37,1.499,38,2.568,39,1.994,45,2.81,57,2.077,58,0.011,59,0.011,97,3.403,98,3.091,99,2.849,100,2.849,101,3.646,136,5.178,137,5.768,138,3.587,139,4.144,140,4.144,141,4.144]],["title/classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html",[0,0.098,142,3.005]],["body/classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html",[0,0.083,2,0.769,3,0.132,4,0.117,5,0.102,8,1.468,9,1.718,10,0.163,11,0.453,12,0.975,13,1.017,14,1.987,15,1.434,16,1.468,17,1.409,18,0.354,19,0.015,20,0.456,21,0.8,22,0.8,23,0.73,25,1.468,26,2.223,28,1.06,29,0.655,30,1.017,31,1.356,32,1.468,34,0.297,35,0.548,36,0.132,37,1.715,38,2.9,39,2.28,41,2.821,43,1.468,44,1.815,45,1.986,46,2.698,48,2.298,49,1.737,50,2.298,52,2.298,53,2.081,54,2.185,55,2.298,56,2.953,57,1.878,58,0.009,59,0.009,97,2.892,98,3.535,99,2.422,100,2.422,114,1.986,127,5.215,128,4.077,129,2.422,130,5.215,131,4.077,132,4.077,133,3.099,134,4.077,142,4.681,143,5.215,144,2.838,145,3.279,146,3.279,147,3.279]],["title/classes/AlterRequestTableToRemoveSurge1678280557690.html",[0,0.098,148,3.005]],["body/classes/AlterRequestTableToRemoveSurge1678280557690.html",[0,0.111,2,1.026,3,0.176,4,0.156,5,0.137,8,1.791,9,1.999,10,0.217,11,0.552,12,1.08,13,1.241,14,2.172,15,1.567,16,1.791,17,1.719,18,0.412,19,0.016,20,0.609,21,1.069,22,1.069,23,0.85,25,1.791,26,2.366,28,1.293,29,0.799,30,1.241,31,1.532,32,1.791,34,0.396,35,0.732,36,0.176,37,1.293,38,2.214,39,1.719,41,1.764,56,1.846,57,1.365,58,0.011,59,0.011,98,2.665,114,1.846,148,5.291,149,5.895,150,3.789,151,4.378,152,4.378,153,4.378,154,4.973,155,3.112]],["title/classes/AlterTripsTableToFixRelationIssues1678223295357.html",[0,0.098,156,3.005]],["body/classes/AlterTripsTableToFixRelationIssues1678223295357.html",[0,0.088,2,0.818,3,0.14,4,0.125,5,0.109,8,1.535,9,1.778,10,0.173,11,0.473,12,0.998,13,1.063,14,2.029,15,1.464,16,1.535,17,1.473,18,0.366,19,0.015,20,0.485,21,0.852,22,0.852,23,0.756,25,1.535,26,2.256,28,1.108,29,0.685,30,1.063,31,1.394,32,1.535,34,0.316,35,0.583,36,0.14,37,1.685,38,2.826,39,2.24,41,2.732,43,1.535,44,1.897,45,2.076,46,2.742,48,2.401,49,1.816,50,2.401,52,2.401,53,2.176,54,2.284,55,2.401,56,2.859,57,1.535,58,0.01,59,0.01,81,4.462,95,3.308,129,2.531,156,4.814,157,5.363,158,3.02,159,3.489,160,3.489,161,3.489,162,4.261,163,4.261,164,5.363,165,5.363,166,4.923,167,4.923,168,3.489,169,3.02]],["title/classes/AlterTripsTableToHandleGeolocationFields1678290428231.html",[0,0.098,170,3.005]],["body/classes/AlterTripsTableToHandleGeolocationFields1678290428231.html",[0,0.089,2,0.827,3,0.142,4,0.126,5,0.11,8,1.546,9,1.789,10,0.175,11,0.477,12,1.002,13,1.071,14,2.036,15,1.469,16,1.546,17,1.484,18,0.449,19,0.015,20,0.49,21,0.861,22,0.861,23,0.76,25,1.546,26,2.261,28,1.116,29,0.69,30,1.071,31,1.401,32,1.546,34,0.319,35,0.59,36,0.142,37,1.688,38,2.864,39,2.244,41,2.312,43,1.099,44,1.359,45,2.766,46,1.911,48,1.72,49,1.301,50,1.72,52,1.72,54,1.636,55,2.42,56,2.419,57,2.224,58,0.01,59,0.01,84,3.264,95,3.481,96,3.922,97,3.523,98,2.888,99,2.55,100,2.55,101,3.264,124,4.966,133,2.321,135,4.293,170,4.837,171,5.389,172,3.052,173,3.527,174,3.527,175,3.527]],["title/classes/AlterTripsTableToHandlePayments1678221796470.html",[0,0.098,176,3.005]],["body/classes/AlterTripsTableToHandlePayments1678221796470.html",[0,0.082,2,0.758,3,0.13,4,0.115,5,0.101,8,1.453,9,1.705,10,0.16,11,0.448,12,0.969,13,1.007,14,1.978,15,1.428,16,1.453,17,1.395,18,0.407,19,0.015,20,0.45,21,1.461,22,0.789,23,0.725,25,1.453,26,2.215,28,1.049,29,0.649,30,1.007,31,1.347,32,1.453,34,0.293,35,0.541,36,0.13,37,1.676,38,2.626,39,2.186,41,2.412,43,1.705,44,2.107,45,1.966,46,2.547,48,2.275,49,2.017,50,2.275,52,2.275,53,2.061,54,2.163,55,2.275,56,2.524,57,1.705,58,0.009,59,0.009,76,2.128,81,4.351,83,4.734,84,2.128,88,2.512,89,1.864,90,1.662,93,2.397,95,3.096,102,2.799,114,2.676,129,1.662,155,3.887,162,4.036,163,2.799,164,4.734,169,2.799,176,4.651,177,5.181,178,2.799,179,3.233,180,3.233,181,3.233,182,1.577,183,1.453,184,1.757,185,1.662,186,3.253,187,2.534,188,1.662,189,1.662,190,2.972,191,1.985,192,4.036,193,3.233,194,1.757,195,5.181,196,2.799,197,2.799,198,4.036,199,2.799]],["title/modules/ApiModule.html",[200,1.709,201,2.545]],["body/modules/ApiModule.html",[0,0.137,3,0.218,4,0.193,5,0.169,19,0.016,34,0.594,36,0.218,58,0.013,59,0.013,200,2.902,201,5.041,202,2.78,203,3.568,204,4.68,205,4.68,206,5.041,207,4.032,208,3.32,209,3.32,210,5.407,211,4.032,212,2.083,213,5.407]],["title/interfaces/AppConfig.html",[214,1.067,215,2.75]],["body/interfaces/AppConfig.html",[3,0.198,4,0.176,5,0.154,10,0.244,11,0.595,18,0.471,19,0.016,34,0.561,36,0.198,58,0.012,59,0.012,214,1.356,215,4.402,216,1.814,217,4.257,218,3.822,219,5.057,220,4.72,221,4.681,222,5.058,223,5.058,224,5.057,225,2.028,226,4.919]],["title/modules/AppModule.html",[200,1.709,227,2.75]],["body/modules/AppModule.html",[0,0.118,3,0.189,4,0.168,5,0.147,19,0.016,34,0.654,36,0.189,58,0.012,59,0.012,200,2.656,201,4.866,202,3.09,203,3.266,207,3.691,208,2.881,209,2.881,211,3.691,212,1.808,219,3.335,227,5.578,228,4.061,229,4.061,230,4.866,231,4.866,232,4.866,233,4.692,234,4.061,235,4.061,236,4.061,237,3.646,238,2.881,239,3.646]],["title/classes/Base.html",[0,0.098,240,1.887]],["body/classes/Base.html",[0,0.148,2,1.06,3,0.182,4,0.162,5,0.141,10,0.224,11,0.564,12,0.995,18,0.443,19,0.016,20,0.816,23,0.914,29,0.959,34,0.531,35,0.756,36,0.182,58,0.012,59,0.012,183,2.031,185,3.018,188,3.018,189,2.326,240,2.863,241,3.915,242,5.64,243,5.64,244,5.64,245,4.497,246,2.908,247,4.523,248,4.523,249,4.523,250,4.523,251,4.523,252,5.87,253,4.523,254,4.523,255,3.383,256,2.475,257,4.523,258,4.523,259,5.87,260,5.87,261,5.87,262,4.173,263,2.976]],["title/entities/Car.html",[264,1.367,265,2.545]],["body/entities/Car.html",[0,0.075,3,0.12,4,0.107,5,0.093,10,0.148,11,0.423,12,0.798,18,0.496,19,0.016,20,0.985,23,0.881,29,0.894,34,0.556,35,0.499,36,0.12,42,3.127,53,2.309,57,2.004,58,0.009,59,0.009,95,2.548,225,2.041,240,2.146,246,2.803,255,3.706,256,2.877,264,1.055,265,2.895,266,1.259,267,2.584,268,5.319,269,5.319,270,3.231,271,5.224,272,5.319,273,5.319,274,2.998,275,3.494,276,3.437,277,2.535,278,2.985,279,4.57,280,3.948,281,3.418,282,2.985,283,2.985,284,4.399,285,4.479,286,2.584,287,2.985,288,3.418,289,4.399,290,3.808,291,4.989,292,3.808,293,2.985,294,2.985,295,2.711,296,2.319,297,3.808,298,3.127,299,2.985,300,3.808,301,2.985,302,3.136,303,1.259,304,3.418,305,3.418,306,3.418,307,1.964,308,2.584,309,2.122,310,2.985,311,1.72,312,2.476,313,2.423]],["title/modules/ConfigModule.html",[200,1.709,230,2.545]],["body/modules/ConfigModule.html",[0,0.084,3,0.134,4,0.119,5,0.104,15,1.027,19,0.016,34,0.657,36,0.134,58,0.009,59,0.009,200,2.103,202,1.71,203,2.586,207,2.922,208,2.042,209,2.042,211,3.411,212,1.281,215,3.382,216,1.227,220,3.411,221,2.188,222,3.131,230,4.963,239,2.584,256,2.343,314,2.878,315,2.878,316,3.326,317,4.118,318,4.758,319,2.878,320,5.34,321,3.326,322,2.878,323,2.878,324,2.584,325,3.326,326,4.758,327,2.878,328,3.326,329,2.584,330,4.118,331,2.878,332,3.326,333,4.118,334,3.326,335,3.326,336,3.326,337,3.326,338,3.326,339,3.326,340,2.878,341,2.878,342,3.326,343,3.326,344,3.326,345,3.326,346,2.878,347,3.326,348,3.326,349,3.326,350,7.487,351,3.326,352,3.326,353,3.326,354,3.326,355,3.326,356,3.326,357,3.326,358,3.326,359,3.326,360,3.326,361,3.326,362,2.878,363,2.878,364,2.878,365,2.878,366,3.326,367,6.064,368,3.326,369,3.326,370,3.326,371,3.326,372,3.326,373,3.326,374,3.326,375,3.326,376,3.326,377,3.326,378,3.326,379,3.326,380,2.878,381,3.326,382,3.326,383,3.326,384,4.118,385,2.321,386,4.118,387,4.118,388,3.326,389,2.006,390,4.758,391,3.326,392,4.118,393,4.118,394,3.326,395,3.326,396,3.326]],["title/classes/CreateCarsTable1678187456870.html",[0,0.098,397,3.005]],["body/classes/CreateCarsTable1678187456870.html",[0,0.102,2,0.947,3,0.163,4,0.144,5,0.126,8,1.698,9,1.921,10,0.2,11,0.524,12,1.052,13,1.176,14,2.123,15,1.532,16,1.698,17,1.63,18,0.396,19,0.016,20,0.562,21,1.611,22,0.987,23,0.817,25,1.698,26,2.329,28,1.226,29,0.758,30,1.176,31,1.484,32,1.698,34,0.366,35,0.676,36,0.163,37,1.226,39,1.63,40,4.234,43,1.26,44,1.557,46,1.557,49,1.491,58,0.011,59,0.011,93,2.078,112,3.785,114,2.782,182,1.972,183,1.698,184,2.196,185,2.078,186,3.35,187,2.961,188,2.078,189,2.078,194,2.196,268,3.498,269,3.498,272,3.498,273,3.498,277,2.33,292,3.498,300,3.498,397,5.126,398,5.71,399,3.498,400,4.042,401,4.042,402,4.042,403,5.449,404,3.498,405,4.042]],["title/classes/CreateDriversTable1678187115666.html",[0,0.098,406,3.005]],["body/classes/CreateDriversTable1678187115666.html",[0,0.098,2,0.913,3,0.157,4,0.139,5,0.122,8,1.657,9,1.886,10,0.193,11,0.511,12,1.039,13,1.148,14,2.1,15,1.516,16,1.657,17,1.59,18,0.388,19,0.015,20,0.542,21,1.66,22,0.951,23,0.802,25,1.657,26,2.311,28,1.196,29,0.739,30,1.148,31,1.462,32,1.657,34,0.353,35,0.652,36,0.157,37,1.196,39,1.59,43,1.215,44,1.502,46,2.048,49,1.437,58,0.01,59,0.01,93,2.004,112,4.176,113,2.564,114,2.868,129,2.004,182,1.901,183,1.657,184,2.118,185,2.004,186,3.531,187,2.889,188,2.004,189,2.004,194,2.118,277,2.246,313,1.808,404,3.373,406,5.049,407,5.625,408,3.373,409,3.897,410,3.897,411,3.897,412,4.601,413,3.028,414,4.13,415,3.028,416,3.779,417,3.028,418,3.373,419,2.564,420,3.373,421,3.373,422,3.373,423,2.77,424,3.897,425,3.897]],["title/classes/CreateLocationsTable1678182431069.html",[0,0.098,426,3.005]],["body/classes/CreateLocationsTable1678182431069.html",[0,0.103,2,0.957,3,0.164,4,0.146,5,0.128,8,1.71,9,1.931,10,0.202,11,0.527,12,1.056,13,1.184,14,2.129,15,1.536,16,1.71,17,1.641,18,0.398,19,0.016,20,0.568,21,1.617,22,0.997,23,0.821,25,1.71,26,2.334,28,1.234,29,0.763,30,1.184,31,1.49,32,1.71,34,0.37,35,0.682,36,0.164,37,1.234,39,1.641,43,1.272,44,1.573,46,1.573,49,1.506,58,0.011,59,0.011,93,2.099,112,3.804,113,3.609,114,2.793,182,1.991,183,1.71,184,2.218,185,2.099,186,3.367,187,2.981,188,2.099,189,2.099,194,2.218,414,3.172,426,5.147,427,5.733,428,3.533,429,4.082,430,4.082,431,4.082,432,2.82,433,2.686,434,2.686,435,3.533,436,4.082]],["title/classes/CreatePaymentMethodsTable1678185095471.html",[0,0.098,437,3.005]],["body/classes/CreatePaymentMethodsTable1678185095471.html",[0,0.098,2,0.909,3,0.156,4,0.138,5,0.121,8,1.652,9,1.881,10,0.192,11,0.509,12,1.037,13,1.144,14,2.097,15,1.513,16,1.652,17,1.585,18,0.461,19,0.015,20,0.539,21,1.583,22,0.947,23,0.8,25,1.652,26,2.309,28,1.192,29,0.737,30,1.144,31,1.459,32,1.652,34,0.351,35,0.648,36,0.156,37,1.577,39,1.585,43,1.209,44,1.494,46,1.494,49,1.431,58,0.01,59,0.01,66,4.586,76,3.486,78,3.357,79,3.014,80,3.014,93,3.103,112,2.382,113,2.552,114,2.545,182,1.892,183,1.652,184,2.108,185,1.994,186,3.28,187,2.879,188,1.994,189,1.994,194,2.108,245,2.382,437,5.039,438,5.614,439,3.357,440,3.879,441,3.879,442,3.879,443,6.035,444,6.035,445,3.879,446,3.357,447,3.357,448,3.357,449,3.879,450,3.879,451,3.879,452,3.879]],["title/classes/CreateRequestsTable1678216032691.html",[0,0.098,453,3.005]],["body/classes/CreateRequestsTable1678216032691.html",[0,0.083,2,0.767,3,0.132,4,0.117,5,0.102,8,1.466,9,1.716,10,0.162,11,0.452,12,0.974,13,1.015,14,1.986,15,1.433,16,1.466,17,1.407,18,0.409,19,0.015,20,0.455,21,1.557,22,0.799,23,0.729,25,1.466,26,2.222,28,1.058,29,0.654,30,1.015,31,1.354,32,1.466,34,0.296,35,0.547,36,0.132,37,1.628,38,2.121,39,2.094,41,2.218,43,1.876,44,2.319,45,2.322,46,2.746,48,2.686,49,2.22,50,2.686,52,2.686,53,2.433,54,2.554,55,2.686,56,2.322,58,0.009,59,0.009,67,3.654,69,2.832,76,2.153,90,1.682,93,2.418,98,3.246,99,2.831,100,2.831,114,2.689,121,4.071,122,4.071,125,2.832,126,2.832,129,2.418,133,3.095,154,2.832,155,3.343,182,1.596,183,1.466,184,1.778,185,1.682,186,2.992,187,2.556,188,1.682,189,1.682,194,1.778,453,4.677,454,5.21,455,2.832,456,3.272,457,3.272,458,3.272,459,5.506,460,3.272,461,2.542,462,2.832,463,2.832,464,3.272,465,4.703]],["title/classes/CreateRidersTable1678182352019.html",[0,0.098,466,3.005]],["body/classes/CreateRidersTable1678182352019.html",[0,0.101,2,0.936,3,0.161,4,0.143,5,0.125,8,1.684,9,1.909,10,0.198,11,0.519,12,1.08,13,1.167,14,2.115,15,1.526,16,1.684,17,1.617,18,0.393,19,0.016,20,0.555,21,1.602,22,0.975,23,0.812,25,1.684,26,2.323,28,1.216,29,0.752,30,1.167,31,1.477,32,1.684,34,0.361,35,0.667,36,0.161,37,1.216,39,1.617,43,1.244,44,1.538,46,2.082,49,1.473,58,0.011,59,0.011,93,2.053,112,4.03,113,2.627,114,2.768,129,2.053,182,1.948,183,1.684,184,2.17,185,2.053,186,3.329,187,2.937,188,2.053,189,2.053,194,2.17,277,2.301,414,4.199,415,3.102,416,3.841,417,3.102,418,3.456,419,2.627,466,5.1,467,5.681,468,3.456,469,3.992,470,3.992,471,3.992,472,4.677,473,3.992,474,3.992]],["title/classes/CreateTripsTable1678218041445.html",[0,0.098,475,3.005]],["body/classes/CreateTripsTable1678218041445.html",[0,0.077,2,0.718,3,0.123,4,0.109,5,0.096,8,1.398,9,1.653,10,0.152,11,0.431,12,0.949,13,0.968,14,1.941,15,1.401,16,1.398,17,1.341,18,0.399,19,0.015,20,0.426,21,1.516,22,0.748,23,0.703,25,1.398,26,2.186,28,1.009,29,0.624,30,0.968,31,1.313,32,1.398,34,0.277,35,0.512,36,0.123,37,1.644,38,2.249,39,2.132,41,2.351,42,3.187,43,1.936,44,2.393,45,2.461,46,2.783,48,2.847,49,2.291,50,2.847,51,2.652,52,2.847,53,1.354,54,2.707,55,3.27,56,2.461,58,0.009,59,0.009,76,2.016,90,1.575,93,2.305,95,3.476,96,3.057,114,2.619,123,3.881,129,2.305,133,2.016,155,2.178,182,1.494,183,1.398,184,1.665,185,1.575,186,3.172,187,2.437,188,1.575,189,1.575,190,1.665,194,1.665,196,2.652,197,2.652,277,2.584,475,4.535,476,5.052,477,2.652,478,3.063,479,3.063,480,3.063,481,5.303,482,3.063,483,3.881,484,2.652,485,2.652,486,2.652,487,2.652,488,4.59,489,3.881,490,3.063,491,3.063,492,3.063,493,4.484,494,3.063,495,4.484,496,4.484,497,3.063]],["title/interfaces/DatabaseConfig.html",[214,1.067,224,2.75]],["body/interfaces/DatabaseConfig.html",[3,0.2,4,0.177,5,0.155,10,0.246,11,0.599,18,0.482,19,0.015,20,1.1,36,0.2,58,0.012,59,0.012,214,1.369,216,1.831,218,3.856,219,5.074,221,4.697,224,4.427,225,2.036,423,4.838,498,4.296,499,5.546,500,5.546,501,6.178,502,5.546]],["title/modules/DatabaseModule.html",[200,1.709,231,2.545]],["body/modules/DatabaseModule.html",[0,0.13,3,0.207,4,0.183,5,0.16,19,0.016,34,0.626,36,0.207,58,0.013,59,0.013,200,2.811,202,2.64,203,3.457,207,3.906,208,3.153,209,3.153,211,3.153,212,1.979,231,5.203,236,4.445,317,5.506,384,4.445,503,4.445,504,4.445,505,5.135,506,4.445,507,2.96,508,4.943,509,5.135]],["title/interfaces/DistanceToKilometers.html",[214,1.067,510,2.375]],["body/interfaces/DistanceToKilometers.html",[3,0.226,4,0.2,5,0.175,10,0.278,11,0.646,18,0.36,19,0.015,36,0.27,58,0.013,59,0.013,214,1.852,216,2.07,225,2.228,510,4.123,511,4.36,512,4.36,513,4.292,514,3.446,515,3.234]],["title/entities/Driver.html",[264,1.367,270,1.794]],["body/entities/Driver.html",[0,0.084,3,0.134,4,0.119,5,0.104,10,0.165,11,0.458,12,0.85,18,0.481,19,0.016,20,0.844,21,1.163,23,0.851,29,0.929,34,0.581,35,0.557,36,0.134,40,4.322,57,1.892,58,0.009,59,0.009,95,2.713,245,4.101,246,2.708,255,4.053,256,3.131,264,1.177,265,4.395,266,1.405,270,3.262,274,2.713,275,3.63,276,3.135,279,3.387,280,2.926,281,3.702,295,2.816,296,3.702,298,4.314,302,2.961,303,1.405,306,4.322,309,2.369,311,1.921,312,2.241,313,2.979,420,4.124,421,5.558,422,4.124,423,4.748,516,2.884,517,5.562,518,5.562,519,4.765,520,3.332,521,3.332,522,4.765,523,3.332,524,4.765,525,3.332,526,3.332,527,4.124,528,3.332,529,2.884,530,1.836,531,3.332,532,3.332]],["title/injectables/DriverService.html",[533,1.794,534,2.375]],["body/injectables/DriverService.html",[0,0.104,3,0.166,4,0.148,5,0.129,10,0.205,12,0.845,13,1.194,15,1.542,18,0.355,19,0.016,20,0.867,23,0.826,28,1.245,29,0.769,30,1.194,31,1.498,34,0.603,35,0.691,36,0.166,37,1.245,58,0.011,59,0.011,183,1.724,212,1.593,270,3.219,385,2.699,389,2.333,412,4.788,507,2.383,533,2.566,534,3.397,535,2.538,536,3.578,537,6.657,538,4.298,539,3.397,540,4.134,541,4.732,542,4.134,543,5.532,544,4.134,545,4.298,546,4.134,547,2.939,548,2.939,549,2.383,550,4.134,551,2.246,552,2.125,553,4.134,554,4.134,555,3.397,556,3.041,557,4.134,558,3.578,559,2.72,560,2.72,561,3.212,562,4.134,563,4.134,564,4.134,565,3.212,566,2.939,567,2.939]],["title/classes/DropPaymentMethodTableAndRelations1678294718551.html",[0,0.098,568,3.005]],["body/classes/DropPaymentMethodTableAndRelations1678294718551.html",[0,0.091,2,0.849,3,0.146,4,0.129,5,0.113,8,1.575,9,1.814,10,0.179,11,0.486,12,1.012,13,1.091,14,2.053,15,1.482,16,1.575,17,1.512,18,0.468,19,0.015,20,0.504,21,0.884,22,0.884,23,0.771,25,1.575,26,2.275,28,1.137,29,0.703,30,1.091,31,1.417,32,1.575,34,0.328,35,0.605,36,0.146,37,1.663,38,2.812,39,2.211,41,2.035,43,1.129,44,1.395,45,2.969,46,1.947,48,1.766,49,1.335,50,1.766,52,1.766,53,1.6,54,1.679,55,1.766,56,2.13,57,2.195,58,0.01,59,0.01,81,4.144,95,2.465,96,2.912,97,3.574,98,2.921,99,2.598,100,2.598,101,3.829,192,5.037,198,4.373,199,3.134,568,4.893,569,5.451,570,3.134,571,3.621,572,3.621,573,3.621]],["title/interfaces/DurationToMinutes.html",[214,1.067,514,2.375]],["body/interfaces/DurationToMinutes.html",[3,0.226,4,0.2,5,0.175,10,0.278,11,0.646,18,0.36,19,0.015,36,0.27,58,0.013,59,0.013,214,1.852,216,2.07,225,2.228,510,3.446,511,4.36,512,4.36,513,3.234,514,4.123,515,4.292]],["title/classes/FinishRideDto.html",[0,0.098,574,2.545]],["body/classes/FinishRideDto.html",[0,0.133,2,0.713,3,0.122,4,0.109,5,0.095,10,0.151,11,0.429,18,0.468,19,0.016,20,0.809,23,0.771,29,0.809,34,0.527,36,0.122,43,1.39,58,0.009,59,0.009,183,1.813,191,4.297,225,2.128,246,2.452,256,1.88,262,3.753,263,2.001,274,2.837,275,3.727,295,2.452,302,3.021,303,1.282,312,2.343,313,2.068,419,4.513,432,2.293,530,2.741,552,3.751,574,2.934,575,5.36,576,2.161,577,3.474,578,4.103,579,4.57,580,3.827,581,3.17,582,2.632,583,3.041,584,3.517,585,5.034,586,4.459,587,5.186,588,4.459,589,4.519,590,5.029,591,3.041,592,3.465,593,3.465,594,3.041,595,3.753,596,3.041,597,3.465,598,3.465,599,3.465,600,3.465,601,3.465,602,2.632,603,3.465,604,3.041,605,3.465,606,3.465,607,4.103,608,2.362,609,2.362,610,2.362,611,3.465,612,1.41,613,3.041,614,1.753,615,2.362,616,4.459,617,3.041]],["title/interfaces/GeneratePaymentReference.html",[214,1.067,618,2.75]],["body/interfaces/GeneratePaymentReference.html",[3,0.2,4,0.177,5,0.155,10,0.246,11,0.599,18,0.472,19,0.015,20,1.044,29,1.071,36,0.2,58,0.012,59,0.012,183,2.225,190,3.879,191,4.383,214,1.369,216,1.831,225,2.245,423,4.838,618,4.427,619,4.296,620,2.552,621,4.296,622,6.178,623,5.074]],["title/interfaces/GenerateTransaction.html",[214,1.067,624,2.545]],["body/interfaces/GenerateTransaction.html",[3,0.197,4,0.175,5,0.153,10,0.242,11,0.593,18,0.48,19,0.016,20,1.085,29,0.858,36,0.197,58,0.012,59,0.012,214,1.701,216,1.803,225,2.124,624,4.06,625,3.799,626,3.799,627,5.516,628,5.516,629,4.172,630,6.144,631,5.046,632,3.475,633,4.232,634,3.799,635,3.475]],["title/interfaces/GetDirection.html",[214,1.067,636,2.75]],["body/interfaces/GetDirection.html",[3,0.224,4,0.199,5,0.174,10,0.276,11,0.643,18,0.429,19,0.015,36,0.224,58,0.013,59,0.013,214,1.537,216,2.056,225,2.308,513,4.283,515,4.283,636,4.754,637,4.824,638,4.824]],["title/controllers/HealthController.html",[639,2.545,640,2.75]],["body/controllers/HealthController.html",[0,0.129,3,0.205,4,0.182,5,0.159,10,0.253,13,1.368,19,0.016,23,0.676,30,1.102,34,0.624,36,0.205,58,0.012,59,0.012,212,1.966,237,4.924,238,3.133,246,2.152,303,2.152,389,2.152,551,2.773,639,3.358,640,4.505,641,4.417,642,4.417,643,5.601,644,5.103,645,5.103,646,4.417,647,6.337,648,6.337,649,6.337,650,3.965,651,5.103,652,5.103,653,4.417,654,5.103,655,5.103,656,5.103]],["title/modules/HealthModule.html",[200,1.709,232,2.545]],["body/modules/HealthModule.html",[0,0.138,3,0.22,4,0.195,5,0.171,19,0.016,34,0.668,36,0.22,58,0.013,59,0.013,200,2.919,202,2.808,211,3.354,212,2.104,232,4.347,238,4.361,323,5.718,324,4.244,640,5.049,650,4.244,657,5.462,658,6.606]],["title/interfaces/Http.html",[214,1.067,220,2.375]],["body/interfaces/Http.html",[3,0.225,4,0.2,5,0.175,10,0.277,11,0.644,18,0.43,19,0.015,36,0.225,58,0.013,59,0.013,214,1.542,216,2.063,220,4.115,225,2.31,386,6.438,387,6.438,659,4.841]],["title/entities/Location.html",[264,1.367,432,1.989]],["body/entities/Location.html",[0,0.091,3,0.144,4,0.128,5,0.112,10,0.178,11,0.483,12,0.767,18,0.474,19,0.016,20,0.952,23,0.907,29,0.698,34,0.598,35,0.6,36,0.144,57,1.956,58,0.01,59,0.01,240,2.45,246,2.885,255,2.894,256,2.117,264,1.774,266,1.513,274,2.826,279,4.864,280,2.204,295,2.885,302,3.06,303,1.513,307,2.361,309,2.551,311,2.068,312,2.333,432,3.685,433,4.128,434,4.128,435,4.346,577,3.811,612,3.459,660,3.106,661,5.792,662,5.792,663,4.5,664,4.5,665,5.021,666,3.589,667,3.589,668,3.589,669,3.589,670,3.589,671,4.346,672,3.589,673,4.346,674,3.589,675,3.902,676,3.589,677,4.346,678,3.589,679,4.46,680,2.788,681,2.788]],["title/classes/LocationDto.html",[0,0.098,580,2.545]],["body/classes/LocationDto.html",[0,0.142,2,0.663,3,0.114,4,0.101,5,0.088,10,0.14,11,0.406,18,0.466,19,0.016,20,0.877,23,0.671,34,0.458,36,0.17,43,0.882,58,0.008,59,0.008,183,1.318,225,2.092,246,2.134,256,2.534,262,3.005,263,1.862,274,2.469,275,3.857,280,1.738,302,3.188,303,1.193,312,2.54,313,1.313,432,2.887,433,4.781,434,4.781,530,2.164,552,3.696,576,2.011,580,4.149,581,2.011,584,3.551,587,5.329,589,4.363,590,5.433,592,4.899,597,2.199,598,2.199,599,2.199,600,2.199,601,2.199,603,2.199,605,3.933,606,3.933,607,3.933,608,2.199,609,2.199,610,3.933,611,3.933,614,1.631,615,2.199,663,3.933,675,4.363,681,4.363,682,4.363,683,3.66,684,4.228,685,4.228,686,4.228,687,2.83,688,4.86,689,2.83,690,3.66,691,2.83,692,4.86,693,2.83,694,3.66,695,2.83,696,4.363,697,2.83,698,4.381,699,2.449,700,2.449,701,2.449,702,1.738,703,1.738,704,2.449,705,1.738,706,2.199]],["title/classes/MapBox.html",[0,0.098,707,2.75]],["body/classes/MapBox.html",[0,0.097,2,0.905,3,0.155,4,0.138,5,0.121,10,0.191,12,0.59,13,1.14,15,1.3,18,0.248,19,0.016,20,1.015,23,0.511,28,0.869,29,0.537,30,0.833,31,1.456,34,0.545,36,0.155,37,0.869,58,0.01,59,0.01,89,2.225,216,1.424,312,1.555,385,2.937,389,2.729,433,4.259,434,4.259,510,2.37,513,3.731,514,2.37,515,3.731,555,2.37,560,2.54,595,3.754,636,4.279,703,3.243,705,3.975,707,4.279,708,4.571,709,3.341,710,6.473,711,5.281,712,3.86,713,5.281,714,5.281,715,5.281,716,6.473,717,6.473,718,4.103,719,3.86,720,2.999,721,4.571,722,3.341,723,3.341,724,3.341,725,3.341,726,3.86,727,3.86,728,3.86,729,3.86,730,3.341,731,3.86,732,3.86,733,3.86,734,3.86,735,2.999,736,3.86]],["title/entities/Payment.html",[264,1.367,620,1.989]],["body/entities/Payment.html",[0,0.078,3,0.125,4,0.111,5,0.097,10,0.154,11,0.435,12,0.816,18,0.47,19,0.016,20,0.63,23,0.864,29,0.817,34,0.565,35,0.519,36,0.125,57,2.032,58,0.009,59,0.009,82,3.918,90,3.211,111,3.918,183,1.411,190,3.192,191,3.834,225,1.757,240,2.208,246,2.749,255,3.385,256,2.633,264,1.097,266,1.909,274,3.046,275,3.543,276,2.043,295,3.167,302,3.18,303,1.309,307,2.043,309,2.207,311,1.789,312,2.516,313,2.479,448,3.918,584,3.192,593,4.563,620,3.02,623,3.798,629,3.543,664,2.412,679,3.218,737,2.687,738,5.344,739,3.104,740,5.083,741,5.083,742,5.083,743,4.175,744,3.104,745,2.412,746,5.207,747,3.104,748,3.104,749,5.23,750,2.412,751,3.104,752,3.104,753,4.527,754,4.527,755,3.918,756,3.918,757,3.104,758,3.104,759,4.527,760,3.104,761,2.412,762,2.687,763,3.104,764,3.104,765,3.104]],["title/classes/PaymentGateway.html",[0,0.098,766,2.75]],["body/classes/PaymentGateway.html",[0,0.075,2,0.693,3,0.119,4,0.106,5,0.092,10,0.147,11,0.42,12,0.452,13,0.943,15,1.5,18,0.334,19,0.016,21,0.722,22,0.722,23,0.849,28,0.666,29,0.411,30,1.122,31,1.442,34,0.47,36,0.119,37,1.291,58,0.009,59,0.009,89,3.694,212,1.14,216,1.091,223,3.776,225,0.885,291,2.56,385,2.8,389,2.191,539,3.191,551,3.483,555,3.191,556,2.987,559,1.946,560,3.776,561,2.298,620,1.521,624,3.776,631,2.103,632,3.694,635,3.106,718,4.757,723,4.497,724,2.56,725,2.56,730,4.497,735,4.037,746,2.103,766,3.106,767,5.151,768,2.298,769,4.967,770,4.37,771,5.739,772,4.37,773,4.37,774,2.958,775,4.37,776,2.958,777,2.103,778,2.958,779,2.958,780,2.56,781,2.56,782,2.56,783,2.56,784,3.782,785,3.106,786,2.958,787,2.958,788,2.958,789,2.958,790,2.958,791,2.958,792,2.958,793,2.958,794,2.958,795,2.958,796,2.958,797,5.196,798,4.979,799,4.979,800,2.958,801,4.37,802,4.497,803,5.196,804,4.497,805,2.958,806,2.958,807,2.958,808,2.958,809,2.56,810,2.958,811,2.958,812,2.958,813,2.958,814,2.958,815,2.958,816,2.958,817,4.37,818,2.958,819,5.196,820,4.37,821,2.958,822,2.958,823,2.958,824,2.958,825,2.958,826,2.56,827,2.56,828,2.958,829,2.958,830,2.958,831,2.958,832,2.958,833,2.958,834,2.103]],["title/interfaces/PaymentMethod.html",[214,1.067,629,2.102]],["body/interfaces/PaymentMethod.html",[3,0.204,4,0.181,5,0.158,10,0.251,11,0.607,18,0.491,19,0.016,20,1.049,36,0.204,58,0.012,59,0.012,214,1.741,216,1.871,225,2.152,624,3.337,625,3.94,626,3.94,627,3.94,628,3.94,629,3.909,630,4.389,631,3.605,632,4.886,633,5.949,634,5.589,635,5.113]],["title/injectables/PaymentService.html",[533,1.794,835,2.375]],["body/injectables/PaymentService.html",[0,0.102,3,0.163,4,0.145,5,0.127,10,0.201,12,0.834,13,1.178,15,1.333,18,0.35,19,0.016,23,0.723,28,1.228,29,0.759,30,0.875,31,1.228,34,0.657,35,0.677,36,0.163,37,0.912,58,0.011,59,0.011,183,1.924,190,2.966,191,3.351,212,1.561,216,1.494,313,1.88,385,2.662,389,1.709,507,2.335,533,2.532,535,2.488,539,3.351,541,4.694,548,2.88,549,2.335,551,2.202,552,2.083,556,1.977,595,2.88,618,4.694,620,3.395,622,4.724,623,3.88,629,2.202,749,3.148,777,3.88,835,3.351,836,3.507,837,5.458,838,4.052,839,4.052,840,5.458,841,5.458,842,4.052,843,3.148,844,3.88,845,3.507,846,4.052,847,4.052,848,4.052,849,4.052,850,4.052,851,4.052,852,4.052,853,4.052,854,4.052,855,4.052]],["title/interfaces/RateLimiting.html",[214,1.067,222,2.545]],["body/interfaces/RateLimiting.html",[3,0.224,4,0.199,5,0.174,10,0.276,11,0.643,18,0.429,19,0.015,36,0.224,58,0.013,59,0.013,214,1.537,216,2.056,222,4.4,225,2.308,392,6.431,393,6.431,856,4.824,857,4.824]],["title/classes/RenameNameColumnInRidersTable1678186681233.html",[0,0.098,858,3.005]],["body/classes/RenameNameColumnInRidersTable1678186681233.html",[0,0.11,2,1.023,3,0.176,4,0.156,5,0.136,8,1.788,9,1.997,10,0.216,11,0.551,12,1.129,13,1.238,14,2.17,15,1.566,16,1.788,17,1.716,18,0.411,19,0.016,20,0.607,21,1.066,22,1.066,23,0.849,25,1.788,26,2.365,28,1.291,29,0.798,30,1.238,31,1.531,32,1.788,34,0.395,35,0.73,36,0.176,37,1.291,38,2.21,39,1.716,57,1.788,58,0.011,59,0.011,84,3.774,413,4.457,472,4.965,858,5.286,859,5.888,860,3.779,861,4.366,862,4.366,863,4.366]],["title/entities/Request.html",[264,1.367,612,1.794]],["body/entities/Request.html",[0,0.108,3,0.115,4,0.102,5,0.09,10,0.142,11,0.41,12,1.002,18,0.472,19,0.016,21,1.042,22,1.475,23,0.839,34,0.547,35,0.479,36,0.115,53,1.886,57,1.589,58,0.008,59,0.008,67,2.226,90,3.106,99,1.473,100,1.473,190,2.319,225,1.525,240,2.081,246,2.671,256,1.208,264,1.012,266,1.799,274,3.09,285,3.315,295,3.039,298,3.033,302,3.2,303,1.208,304,3.315,305,3.315,311,1.651,312,2.552,432,2.194,462,3.693,530,2.777,549,1.651,577,1.885,581,4.016,584,2.319,593,3.315,612,2.938,614,1.651,679,3.033,703,3.131,705,3.131,720,2.226,740,3.693,741,3.693,742,3.693,743,2.036,745,2.226,746,4.502,750,2.226,761,2.226,802,4.89,864,2.479,865,4.413,866,4.694,867,4.267,868,2.865,869,4.89,870,2.865,871,4.267,872,2.865,873,2.865,874,2.865,875,2.865,876,2.865,877,2.865,878,4.267,879,2.865,880,2.865,881,4.267,882,2.865,883,4.664,884,2.865,885,2.865,886,2.865,887,2.865,888,5.482,889,2.226,890,2.865,891,3.693,892,2.479,893,2.479,894,4.267,895,2.226,896,2.865,897,2.865,898,2.865,899,2.865]],["title/controllers/RequestController.html",[639,2.545,900,2.75]],["body/controllers/RequestController.html",[0,0.058,3,0.093,4,0.082,5,0.072,10,0.114,12,0.552,13,0.78,15,1.256,18,0.232,19,0.016,23,0.479,28,0.813,29,0.503,30,0.78,31,1.136,34,0.55,36,0.093,37,0.813,58,0.007,59,0.007,89,3.628,90,1.859,114,1.524,183,1.127,212,0.889,238,1.416,242,3.129,243,3.129,244,3.129,246,1.524,264,1.277,266,0.972,270,1.677,295,1.524,303,0.972,312,2.535,385,1.763,389,1.524,530,1.393,552,1.186,556,1.763,559,3.826,560,3.826,566,4.133,567,4.133,574,3.321,584,3.42,587,4.474,612,3.265,639,1.517,642,1.996,646,1.996,653,1.996,702,3.099,703,2.22,705,2.22,777,3.588,798,5.144,799,5.144,834,4.133,843,1.792,865,3.129,883,3.169,900,2.57,901,1.996,902,4.368,903,4.706,904,1.996,905,3.615,906,2.306,907,3.615,908,2.306,909,3.615,910,3.615,911,7.181,912,3.615,913,6.621,914,5.047,915,3.615,916,5.047,917,3.615,918,3.615,919,2.306,920,2.306,921,2.306,922,3.615,923,2.306,924,2.809,925,3.615,926,2.306,927,2.306,928,2.306,929,2.306,930,2.306,931,4.458,932,4.458,933,4.458,934,4.458,935,4.458,936,1.996,937,2.738,938,1.996,939,2.306,940,2.306,941,2.306,942,2.306,943,3.615,944,3.615,945,3.615,946,3.615,947,3.615,948,3.615,949,3.615,950,3.615,951,5.047,952,5.047,953,5.047,954,3.615,955,3.615,956,3.615,957,3.615,958,3.615,959,5.815,960,3.615,961,3.615,962,3.615,963,3.615,964,3.615,965,3.615,966,3.615,967,3.615,968,3.615,969,2.306,970,3.615,971,2.306,972,2.306,973,2.306]],["title/modules/RequestModule.html",[200,1.709,206,2.545]],["body/modules/RequestModule.html",[0,0.111,3,0.177,4,0.157,5,0.138,19,0.016,34,0.658,36,0.177,58,0.011,59,0.011,200,2.548,202,2.263,203,3.134,206,5.168,207,3.541,208,2.703,209,2.703,211,2.703,212,1.696,238,3.949,239,4.48,266,1.856,270,2.042,295,2.431,506,3.81,507,2.537,530,2.222,534,4.464,549,2.537,612,2.675,620,2.965,835,4.464,900,4.571,937,4.464,938,3.81,974,3.81,975,3.81,976,4.464,977,4.464,978,4.401,979,4.401]],["title/classes/RequestRideDto.html",[0,0.098,702,2.375]],["body/classes/RequestRideDto.html",[0,0.146,2,0.704,3,0.121,4,0.107,5,0.094,10,0.149,11,0.425,18,0.462,19,0.016,20,0.896,23,0.694,34,0.474,36,0.178,43,1.377,58,0.009,59,0.009,183,1.802,225,1.927,246,2.21,256,2.597,262,3.14,263,1.975,274,2.556,275,3.908,280,1.843,302,3.249,303,1.266,312,2.595,313,1.392,432,3.167,433,4.239,434,4.239,530,2.633,552,3.741,576,2.134,580,4.383,581,3.14,582,3.823,584,3.347,587,5.112,589,3.432,590,4.786,592,4.072,597,3.432,598,3.432,599,3.432,600,3.432,601,3.432,602,2.598,603,3.432,605,4.072,606,4.072,607,4.072,608,2.332,609,2.332,610,4.072,611,4.072,614,1.73,615,2.332,663,2.332,675,3.432,681,3.432,682,4.491,683,2.598,688,4.536,690,2.598,692,4.536,694,2.598,696,3.432,698,4.536,699,2.598,700,2.598,701,2.598,702,2.712,703,3.218,704,3.823,705,3.218,706,4.072,980,3.001,981,3.001,982,3.001]],["title/injectables/RequestService.html",[533,1.794,937,2.375]],["body/injectables/RequestService.html",[0,0.052,3,0.083,4,0.074,5,0.064,10,0.102,11,0.318,12,0.633,13,0.714,15,1.196,18,0.374,19,0.016,21,0.503,22,0.503,23,0.628,28,0.932,29,0.576,30,0.714,31,1.246,34,0.603,35,0.345,36,0.083,37,1.562,54,0.956,58,0.007,59,0.007,89,3.354,90,2.129,91,2.57,182,2.312,183,1.291,190,1.12,191,1.266,212,0.794,245,1.266,264,0.728,266,0.869,270,0.956,295,2.335,385,3.347,389,1.746,416,2.351,461,1.602,513,1.906,515,2.732,530,0.794,533,1.534,535,1.266,539,2.031,547,2.944,549,1.188,551,3.162,552,2.437,555,2.91,556,3.25,559,2.176,560,3.119,561,3.218,574,3.119,577,2.176,578,2.57,579,1.784,612,3.035,620,2.129,623,2.351,627,1.602,628,1.602,629,1.12,631,1.465,632,1.465,634,1.602,635,1.465,671,1.784,673,1.784,702,3.186,703,2.031,705,1.266,706,1.602,707,1.465,720,1.602,721,1.784,722,1.784,735,2.57,755,1.784,756,1.784,766,2.944,769,4.102,777,4.3,780,2.863,798,2.57,799,2.57,804,2.863,834,2.351,835,3.573,843,1.602,844,2.351,845,1.784,866,3.218,883,1.465,895,1.602,902,2.863,903,2.351,904,2.863,924,1.602,936,1.784,937,2.543,976,3.573,977,3.573,983,1.784,984,3.307,985,2.062,986,5.539,987,3.307,988,2.062,989,3.307,990,2.062,991,4.142,992,3.307,993,4.142,994,3.307,995,1.602,996,2.062,997,2.062,998,2.062,999,1.602,1000,2.062,1001,4.739,1002,2.062,1003,2.062,1004,2.062,1005,2.062,1006,2.062,1007,2.062,1008,2.062,1009,1.784,1010,2.062,1011,2.062,1012,3.307,1013,3.585,1014,3.307,1015,3.307,1016,2.062,1017,2.062,1018,3.307,1019,2.062,1020,2.062,1021,2.062,1022,2.062,1023,2.062,1024,2.062,1025,2.062,1026,2.062,1027,4.142,1028,3.307,1029,3.307,1030,2.062,1031,2.062,1032,2.062,1033,2.062,1034,4.142,1035,4.739,1036,2.062,1037,4.142,1038,3.307,1039,2.062,1040,2.062,1041,2.062,1042,2.062,1043,3.307,1044,2.062,1045,2.062,1046,2.062,1047,2.062,1048,2.062,1049,2.062,1050,2.062,1051,2.062]],["title/entities/Rider.html",[264,1.367,530,1.49]],["body/entities/Rider.html",[0,0.113,3,0.123,4,0.109,5,0.096,10,0.152,11,0.43,12,1.088,18,0.499,19,0.016,20,1.042,23,0.859,29,0.902,34,0.562,35,0.511,36,0.123,57,2.021,58,0.009,59,0.009,98,2.457,129,2.302,225,1.94,240,2.184,246,2.734,255,3.861,256,3.004,264,1.08,266,1.289,274,3.028,275,3.524,276,2.012,277,2.581,279,4.883,280,3.811,290,3.875,296,2.376,302,3.163,303,1.289,306,3.479,307,2.012,311,1.762,312,2.5,313,2.457,389,1.289,413,3.479,415,3.479,416,4.412,417,3.479,419,4.084,530,1.725,612,3.008,614,1.762,677,5.047,680,2.376,1009,3.875,1052,2.647,1053,5.297,1054,5.297,1055,5.297,1056,3.058,1057,4.477,1058,3.058,1059,4.477,1060,3.058,1061,4.477,1062,3.058,1063,4.477,1064,3.058,1065,3.058,1066,3.058,1067,3.058,1068,4.477,1069,3.058,1070,3.058,1071,3.058,1072,3.058]],["title/injectables/RiderService.html",[533,1.794,976,2.375]],["body/injectables/RiderService.html",[0,0.115,3,0.183,4,0.162,5,0.142,10,0.225,12,0.898,13,1.27,15,1.409,18,0.377,19,0.016,20,0.908,23,0.779,28,1.323,29,0.818,30,0.979,31,1.323,34,0.625,35,0.758,36,0.183,37,1.021,58,0.012,59,0.012,183,1.833,212,1.748,385,2.213,389,1.913,507,2.614,530,2.756,533,2.728,535,2.785,538,4.569,539,3.611,541,4.907,545,4.569,547,3.224,548,3.224,549,2.614,551,2.465,552,2.332,555,2.785,556,2.213,565,3.524,566,3.224,567,3.224,976,3.611,1073,3.926,1074,4.536,1075,4.536,1076,5.881,1077,4.536,1078,4.536,1079,4.536]],["title/interfaces/TokenizeCard.html",[214,1.067,223,2.545]],["body/interfaces/TokenizeCard.html",[3,0.205,4,0.182,5,0.159,10,0.253,11,0.609,18,0.476,19,0.015,20,0.959,36,0.205,58,0.012,59,0.012,214,1.407,216,1.882,223,4.17,225,2.405,809,6.239,1080,4.417,1081,4.417,1082,7.209,1083,7.209,1084,7.209]],["title/entities/Trip.html",[264,1.367,295,1.631]],["body/entities/Trip.html",[0,0.087,3,0.087,4,0.077,5,0.067,10,0.107,11,0.33,12,1.06,18,0.491,19,0.016,21,0.838,22,0.527,23,0.86,29,0.856,34,0.574,35,0.361,36,0.087,42,2.44,53,1.517,57,1.762,58,0.007,59,0.007,90,2.73,96,1.978,165,2.971,195,2.971,225,1.691,240,1.674,245,3.64,246,2.738,255,3.259,256,2.795,264,0.763,265,4.438,266,1.447,270,3.129,274,3.091,275,3.343,276,1.421,277,2.805,285,3.781,286,2.971,295,3.082,298,3.459,302,3.168,303,0.911,304,3.319,305,4.126,307,1.421,308,1.869,311,1.245,312,2.553,313,2.623,419,3.202,432,1.765,485,2.971,486,2.971,487,2.971,488,2.971,489,2.971,529,1.869,530,1.875,577,2.811,578,3.319,584,1.865,612,2.94,614,1.245,620,3.468,664,1.678,679,3.036,680,1.678,745,1.678,746,4.019,750,1.678,761,1.678,762,1.869,866,3.319,869,2.971,888,2.971,891,1.869,893,3.697,895,3.319,999,4.606,1085,1.869,1086,4.272,1087,3.432,1088,3.432,1089,2.16,1090,2.16,1091,2.16,1092,2.16,1093,2.16,1094,2.16,1095,4.866,1096,3.432,1097,2.16,1098,3.432,1099,4.866,1100,2.16,1101,3.432,1102,2.16,1103,2.16,1104,2.16,1105,2.16,1106,3.432,1107,2.16,1108,2.971,1109,2.16,1110,2.16,1111,2.667,1112,2.16,1113,2.16,1114,2.16,1115,2.16,1116,2.16,1117,2.16,1118,2.16,1119,2.16,1120,2.16]],["title/injectables/TripService.html",[533,1.794,977,2.375]],["body/injectables/TripService.html",[0,0.093,3,0.148,4,0.131,5,0.115,10,0.182,12,0.895,13,1.101,15,1.488,18,0.376,19,0.016,20,0.815,23,0.777,28,1.319,29,0.815,30,1.101,31,1.425,34,0.624,35,0.613,36,0.148,37,1.147,58,0.01,59,0.01,114,1.547,183,1.59,212,1.414,245,2.253,256,1.547,266,1.547,270,2.366,295,3.039,297,3.176,385,2.859,389,2.15,507,2.115,527,3.176,530,1.414,533,2.366,534,4.34,535,2.253,538,3.962,539,3.132,541,4.503,545,3.962,547,2.608,548,2.608,549,2.115,551,2.771,552,2.622,555,2.253,556,2.859,565,2.851,566,2.608,567,2.608,612,3.196,892,3.176,977,3.132,1013,4.414,1108,3.176,1121,3.176,1122,5.1,1123,3.669,1124,3.669,1125,5.1,1126,5.1,1127,3.669,1128,3.669,1129,3.669,1130,3.669,1131,3.669,1132,3.669,1133,3.669,1134,3.669,1135,5.1]],["title/coverage.html",[1136,4.109]],["body/coverage.html",[0,0.193,1,1.922,5,0.077,6,2.141,7,2.141,18,0.159,19,0.016,39,0.74,58,0.008,59,0.008,60,1.922,61,2.141,62,2.141,70,1.922,71,2.141,72,2.141,105,1.922,106,2.141,107,2.141,115,1.922,116,2.141,117,2.141,136,1.922,137,2.141,138,2.141,142,1.922,143,2.141,144,2.141,148,1.922,149,2.141,150,2.141,156,1.922,157,2.141,158,2.141,170,1.922,171,2.141,172,2.141,176,1.922,177,2.141,178,2.141,214,1.895,215,1.759,217,2.141,218,2.966,220,1.519,222,1.628,223,1.628,224,1.759,240,1.207,241,2.141,264,2.204,265,1.628,267,2.141,270,1.148,281,1.922,295,1.043,320,1.922,397,1.922,398,2.141,399,2.141,406,1.922,407,2.141,408,2.141,426,1.922,427,2.141,428,2.141,432,1.272,437,1.922,438,2.141,439,2.141,453,1.922,454,2.141,455,2.141,466,1.922,467,2.141,468,2.141,475,1.922,476,2.141,477,2.141,498,2.141,508,1.922,510,2.344,511,2.966,512,2.966,514,2.344,516,2.141,530,0.953,533,2.627,534,1.519,536,2.141,556,1.207,568,1.922,569,2.141,570,2.141,574,1.628,575,2.141,576,3.314,580,1.628,595,5.703,612,1.148,618,1.759,619,2.141,620,1.963,621,2.141,624,1.628,625,2.966,626,2.966,629,1.344,636,1.759,637,2.141,638,2.141,639,2.512,640,1.759,641,2.141,659,2.141,660,2.141,682,2.966,702,1.519,707,1.759,708,2.141,709,2.141,737,2.141,766,1.759,767,1.922,768,1.922,835,1.519,836,2.141,844,1.759,856,2.141,857,2.141,858,1.922,859,2.141,860,2.141,864,2.141,889,1.922,900,1.759,901,2.141,937,1.519,976,1.519,977,1.519,983,2.141,995,1.922,1052,2.141,1073,2.141,1080,2.141,1081,2.141,1085,2.141,1121,2.141,1136,1.922,1137,2.141,1138,2.474,1139,2.474,1140,2.141,1141,2.141,1142,6.238,1143,7.214,1144,4.072,1145,4.662,1146,5.241,1147,7.632,1148,5.985,1149,2.474,1150,3.818,1151,3.818,1152,2.474,1153,2.474,1154,3.304,1155,2.141,1156,2.474,1157,2.141,1158,2.474]],["title/dependencies.html",[203,2.53,1159,2.792]],["body/dependencies.html",[0,0.153,19,0.016,35,0.794,43,1.48,58,0.012,59,0.012,203,2.58,212,1.829,220,2.915,263,3.124,303,2.002,319,4.109,322,4.109,324,3.688,327,4.109,329,3.688,330,5.771,333,4.109,380,4.109,507,2.736,614,2.736,650,3.688,718,3.688,1160,4.747,1161,4.747,1162,4.747,1163,4.747,1164,4.747,1165,4.747,1166,4.747,1167,7.023,1168,4.747,1169,6.055,1170,4.747,1171,4.747,1172,4.747,1173,4.747,1174,4.747,1175,4.747,1176,4.747,1177,4.747,1178,4.747,1179,4.747,1180,4.747,1181,4.747,1182,4.747,1183,4.747,1184,4.747,1185,4.747,1186,4.747,1187,4.747,1188,4.747,1189,4.747,1190,4.747,1191,4.747]],["title/miscellaneous/enumerations.html",[1192,1.981,1193,4.029]],["body/miscellaneous/enumerations.html",[10,0.209,19,0.016,22,1.95,58,0.011,59,0.011,79,4.357,80,4.357,87,4.854,88,4.357,89,3.232,240,2.058,446,4.854,447,4.854,461,4.357,463,4.854,483,4.854,484,4.854,513,2.432,515,2.432,629,3.047,749,4.357,767,3.278,768,4.357,781,4.854,782,3.652,783,3.652,784,4.854,785,3.986,883,3.986,999,4.357,1144,3.278,1192,2.591,1193,3.652,1194,5.608,1195,4.219,1196,5.608,1197,5.608,1198,3.652,1199,6.299,1200,5.608,1201,7.184,1202,4.219,1203,4.219,1204,4.219,1205,5.608,1206,4.219,1207,4.219,1208,4.219,1209,5.608,1210,5.608,1211,5.608,1212,4.219,1213,4.219,1214,4.854]],["title/miscellaneous/functions.html",[1192,1.981,1215,4.029]],["body/miscellaneous/functions.html",[10,0.302,19,0.014,58,0.014,59,0.014,1155,5.274,1157,6.437,1192,3.742,1215,5.274,1216,6.093]],["title/index.html",[10,0.16,1111,2.506,1217,2.792]],["body/index.html",[4,0.111,5,0.142,12,0.475,14,0.93,17,1.356,19,0.016,29,0.433,41,1.253,49,1.147,58,0.009,59,0.009,91,2.416,98,1.443,182,1.517,221,2.046,234,5.646,235,3.924,270,1.443,288,2.416,312,1.253,331,2.692,341,3.924,346,2.692,362,2.692,363,2.692,364,2.692,365,2.692,389,1.311,499,2.416,500,2.416,501,2.692,502,2.416,530,1.198,551,1.69,556,1.517,559,2.046,584,2.464,643,3.522,785,2.211,834,2.211,903,3.802,924,2.416,1111,2.416,1136,2.416,1137,3.924,1214,2.692,1217,2.692,1218,4.63,1219,2.692,1220,2.692,1221,2.692,1222,3.11,1223,4.533,1224,3.11,1225,3.11,1226,3.11,1227,6.249,1228,3.11,1229,4.533,1230,4.533,1231,4.533,1232,3.11,1233,3.11,1234,3.11,1235,3.11,1236,3.11,1237,3.11,1238,3.11,1239,3.11,1240,4.533,1241,3.11,1242,3.11,1243,4.533,1244,3.11,1245,3.11,1246,3.11,1247,7.039,1248,3.11,1249,6.902,1250,3.11,1251,3.11,1252,4.63,1253,4.156,1254,3.11,1255,3.11,1256,3.11,1257,3.11,1258,4.533,1259,3.11,1260,3.11,1261,4.533,1262,2.416,1263,3.11,1264,3.11,1265,3.11,1266,3.11,1267,3.11,1268,3.11,1269,5.349,1270,3.11,1271,3.11,1272,3.11,1273,6.902,1274,3.11,1275,3.11,1276,4.533,1277,3.11,1278,3.11,1279,3.11,1280,3.11,1281,4.533,1282,3.11,1283,3.11,1284,3.11,1285,4.533,1286,3.11,1287,3.11,1288,3.11,1289,3.11,1290,3.11,1291,3.11,1292,3.11,1293,3.11,1294,3.11,1295,5.349,1296,3.11,1297,3.11,1298,3.11,1299,3.11,1300,3.11,1301,3.11,1302,3.11,1303,4.533,1304,3.11,1305,3.11,1306,3.11,1307,3.11,1308,3.11,1309,3.11,1310,3.11,1311,5.349,1312,3.11,1313,4.533,1314,3.11,1315,3.11,1316,3.11,1317,3.11,1318,3.11,1319,3.11,1320,3.11,1321,3.11,1322,3.11,1323,3.924,1324,4.533,1325,4.533,1326,3.11,1327,3.11,1328,3.11,1329,3.11,1330,3.11,1331,3.11,1332,3.11,1333,3.11,1334,3.11,1335,3.11,1336,3.11,1337,2.692,1338,2.692,1339,2.692,1340,3.11,1341,3.11]],["title/modules.html",[202,2.719]],["body/modules.html",[19,0.013,58,0.013,59,0.013,201,3.705,202,2.895,206,3.705,227,4.003,230,3.705,231,3.705,232,3.705,558,4.874,1323,6.596,1342,7.62,1343,7.62,1344,7.734,1345,5.631]],["title/overview.html",[1346,4.578]],["body/overview.html",[2,1.054,19,0.016,58,0.012,59,0.012,201,4.694,202,2.313,203,3.179,204,3.894,205,3.894,206,5.159,207,3.591,208,2.762,209,2.762,216,1.659,227,5.472,228,3.894,229,3.894,230,4.967,231,4.967,232,4.277,238,2.762,266,1.897,314,3.894,315,3.894,503,3.894,504,3.894,534,3.991,535,2.762,585,3.894,696,3.495,743,3.198,835,3.991,937,3.991,974,3.894,975,3.894,976,3.991,977,3.991,1346,3.894,1347,4.498,1348,4.498,1349,4.498]],["title/properties.html",[11,0.447,1159,2.792]],["body/properties.html",[11,0.513,19,0.016,35,0.892,58,0.013,59,0.013,237,4.146,288,4.146,312,2.15,329,4.146,643,4.146,785,3.793,903,4.63,1218,6.337,1219,4.619,1220,6.086,1221,4.619,1252,4.619,1253,4.146,1337,4.619,1338,4.619,1339,4.619,1350,5.337,1351,5.337,1352,5.337,1353,5.337,1354,5.337,1355,5.337,1356,5.337,1357,5.337,1358,5.337,1359,6.514,1360,5.337,1361,5.337,1362,5.337,1363,5.337]],["title/miscellaneous/variables.html",[1192,1.981,1262,3.617]],["body/miscellaneous/variables.html",[10,0.201,18,0.351,19,0.016,20,0.76,21,1.773,22,1.773,43,1.266,58,0.011,59,0.011,190,2.207,219,2.887,221,2.673,225,2.209,266,2.305,313,1.884,320,4.801,340,5.349,385,2.667,389,1.713,499,3.156,500,3.156,502,3.156,508,4.248,510,3.357,513,3.151,514,3.357,515,3.151,556,2.667,743,2.887,826,4.732,827,3.516,844,3.886,889,4.248,995,4.248,1140,3.516,1141,4.732,1144,3.156,1154,3.516,1192,2.494,1198,5.722,1253,3.156,1262,3.156,1364,5.467,1365,4.062,1366,5.467,1367,4.062,1368,5.467,1369,4.062,1370,4.062,1371,4.062,1372,4.062,1373,4.062,1374,4.062,1375,4.062,1376,4.062,1377,4.062,1378,4.062,1379,4.062,1380,4.062,1381,4.062,1382,4.062,1383,4.062,1384,4.062,1385,4.062,1386,4.062,1387,4.062,1388,5.467,1389,4.062,1390,5.467,1391,4.062,1392,4.062]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":595,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/MapBox.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["0'})@max(10",{"_index":591,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["0.0.1",{"_index":1350,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":952,"title":{},"body":{"controllers/RequestController.html":{}}}],["08t19:35:32.441z",{"_index":953,"title":{},"body":{"controllers/RequestController.html":{}}}],["1",{"_index":1041,"title":{},"body":{"injectables/RequestService.html":{}}}],["1.3.4",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":593,"title":{},"body":{"classes/FinishRideDto.html":{},"entities/Payment.html":{},"entities/Request.html":{}}}],["10.1.0",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":291,"title":{},"body":{"entities/Car.html":{},"classes/PaymentGateway.html":{}}}],["1000",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1000).tofixed(1",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":1349,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1254,"title":{},"body":{"index.html":{}}}],["150",{"_index":677,"title":{},"body":{"entities/Location.html":{},"entities/Rider.html":{}}}],["17.8.3",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["18.14.0",{"_index":1246,"title":{},"body":{"index.html":{}}}],["180",{"_index":692,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["180'})@max(180",{"_index":691,"title":{},"body":{"classes/LocationDto.html":{}}}],["2",{"_index":743,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2023",{"_index":951,"title":{},"body":{"controllers/RequestController.html":{}}}],["23.540,00",{"_index":950,"title":{},"body":{"controllers/RequestController.html":{}}}],["23.6573",{"_index":683,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["250",{"_index":1063,"title":{},"body":{"entities/Rider.html":{}}}],["26",{"_index":1348,"title":{},"body":{"overview.html":{}}}],["2})@transform",{"_index":873,"title":{},"body":{"entities/Request.html":{}}}],["3",{"_index":1289,"title":{},"body":{"index.html":{}}}],["3.1.2",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["31a46e86ee63",{"_index":958,"title":{},"body":{"controllers/RequestController.html":{}}}],["3500",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4.0.0",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":960,"title":{},"body":{"controllers/RequestController.html":{}}}],["401821",{"_index":694,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["404",{"_index":964,"title":{},"body":{"controllers/RequestController.html":{}}}],["41baddbdae8f",{"_index":601,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["432e",{"_index":599,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["4d05",{"_index":956,"title":{},"body":{"controllers/RequestController.html":{}}}],["5",{"_index":585,"title":{},"body":{"classes/FinishRideDto.html":{},"overview.html":{}}}],["50",{"_index":281,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"coverage.html":{}}}],["500",{"_index":966,"title":{},"body":{"controllers/RequestController.html":{}}}],["6",{"_index":696,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"overview.html":{}}}],["6.158212",{"_index":945,"title":{},"body":{"controllers/RequestController.html":{}}}],["6.2.0",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["6.2567865",{"_index":947,"title":{},"body":{"controllers/RequestController.html":{}}}],["6.9.0",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["60).tofixed(1",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1347,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["75.590211",{"_index":946,"title":{},"body":{"controllers/RequestController.html":{}}}],["75.604705",{"_index":944,"title":{},"body":{"controllers/RequestController.html":{}}}],["77.6573",{"_index":690,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["8.3.3",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["9.6.0",{"_index":1248,"title":{},"body":{"index.html":{}}}],["90",{"_index":688,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["90'})@max(90",{"_index":687,"title":{},"body":{"classes/LocationDto.html":{}}}],["94ad",{"_index":598,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["9db1",{"_index":600,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["_req",{"_index":375,"title":{},"body":{"modules/ConfigModule.html":{}}}],["_res",{"_index":376,"title":{},"body":{"modules/ConfigModule.html":{}}}],["a378f7e1",{"_index":597,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["above",{"_index":1281,"title":{},"body":{"index.html":{}}}],["acceptance",{"_index":801,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["acceptance_token",{"_index":823,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["acceptancetoken",{"_index":820,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["accepted",{"_index":461,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["access",{"_index":1293,"title":{},"body":{"index.html":{}}}],["access_token",{"_index":728,"title":{},"body":{"classes/MapBox.html":{}}}],["action",{"_index":55,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["add",{"_index":41,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"index.html":{}}}],["addrelationbetweendriversandcars.ts",{"_index":7,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"coverage.html":{}}}],["addrelationbetweendriversandcars.ts:13",{"_index":27,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}}}],["addrelationbetweendriversandcars.ts:4",{"_index":24,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}}}],["addrelationbetweendriversandcars.ts:6",{"_index":33,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}}}],["addrelationbetweendriversandcars1678187764454",{"_index":1,"title":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"coverage.html":{}}}],["addrelationbetweenridersandpaymentmethods.ts",{"_index":62,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"coverage.html":{}}}],["addrelationbetweenridersandpaymentmethods.ts:13",{"_index":64,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}}}],["addrelationbetweenridersandpaymentmethods.ts:4",{"_index":63,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}}}],["addrelationbetweenridersandpaymentmethods.ts:6",{"_index":65,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}}}],["addrelationbetweenridersandpaymentmethods1678185298028",{"_index":60,"title":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"coverage.html":{}}}],["aea4",{"_index":955,"title":{},"body":{"controllers/RequestController.html":{}}}],["again",{"_index":834,"title":{},"body":{"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"index.html":{}}}],["alter",{"_index":45,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse.ts",{"_index":72,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"coverage.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse.ts:18",{"_index":74,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse.ts:4",{"_index":73,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse.ts:6",{"_index":75,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse1678295934312",{"_index":70,"title":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"coverage.html":{}}}],["alterpaymentstabletoaddtransactionid.ts",{"_index":107,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"coverage.html":{}}}],["alterpaymentstabletoaddtransactionid.ts:13",{"_index":109,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{}}}],["alterpaymentstabletoaddtransactionid.ts:4",{"_index":108,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{}}}],["alterpaymentstabletoaddtransactionid.ts:6",{"_index":110,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{}}}],["alterpaymentstabletoaddtransactionid1678308519422",{"_index":105,"title":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{}},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"coverage.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename.ts",{"_index":117,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"coverage.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename.ts:30",{"_index":119,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename.ts:4",{"_index":118,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename.ts:6",{"_index":120,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename1678223649061",{"_index":115,"title":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{}},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"coverage.html":{}}}],["alterrequesttabletohandlegeometryfields.ts",{"_index":138,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"coverage.html":{}}}],["alterrequesttabletohandlegeometryfields.ts:11",{"_index":140,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{}}}],["alterrequesttabletohandlegeometryfields.ts:4",{"_index":139,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{}}}],["alterrequesttabletohandlegeometryfields.ts:6",{"_index":141,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{}}}],["alterrequesttabletohandlegeometryfields1678285496704",{"_index":136,"title":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{}},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"coverage.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation.ts",{"_index":144,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"coverage.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation.ts:17",{"_index":146,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation.ts:4",{"_index":145,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation.ts:6",{"_index":147,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation1678276720338",{"_index":142,"title":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"coverage.html":{}}}],["alterrequesttabletoremovesurge.ts",{"_index":150,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"coverage.html":{}}}],["alterrequesttabletoremovesurge.ts:10",{"_index":152,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{}}}],["alterrequesttabletoremovesurge.ts:4",{"_index":151,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{}}}],["alterrequesttabletoremovesurge.ts:6",{"_index":153,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{}}}],["alterrequesttabletoremovesurge1678280557690",{"_index":148,"title":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{}},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"coverage.html":{}}}],["altertripstabletofixrelationissues.ts",{"_index":158,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"coverage.html":{}}}],["altertripstabletofixrelationissues.ts:17",{"_index":160,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["altertripstabletofixrelationissues.ts:4",{"_index":159,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["altertripstabletofixrelationissues.ts:6",{"_index":161,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["altertripstabletofixrelationissues1678223295357",{"_index":156,"title":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"coverage.html":{}}}],["altertripstabletohandlegeolocationfields.ts",{"_index":172,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"coverage.html":{}}}],["altertripstabletohandlegeolocationfields.ts:15",{"_index":174,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["altertripstabletohandlegeolocationfields.ts:4",{"_index":173,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["altertripstabletohandlegeolocationfields.ts:6",{"_index":175,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["altertripstabletohandlegeolocationfields1678290428231",{"_index":170,"title":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"coverage.html":{}}}],["altertripstabletohandlepayments.ts",{"_index":178,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"coverage.html":{}}}],["altertripstabletohandlepayments.ts:21",{"_index":180,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["altertripstabletohandlepayments.ts:4",{"_index":179,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["altertripstabletohandlepayments.ts:6",{"_index":181,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["altertripstabletohandlepayments1678221796470",{"_index":176,"title":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"coverage.html":{}}}],["amazing",{"_index":1329,"title":{},"body":{"index.html":{}}}],["american_express",{"_index":447,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"miscellaneous/enumerations.html":{}}}],["amount_in_cents",{"_index":824,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["amountincents",{"_index":627,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["api",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["api/**/entities",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/commons",{"_index":762,"title":{},"body":{"entities/Payment.html":{},"entities/Trip.html":{}}}],["api/libs/interfaces",{"_index":226,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["api/request/entities",{"_index":680,"title":{},"body":{"entities/Location.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["apibadrequestresponse",{"_index":933,"title":{},"body":{"controllers/RequestController.html":{}}}],["apicreatedresponse",{"_index":932,"title":{},"body":{"controllers/RequestController.html":{}}}],["apiinternalservererrorresponse",{"_index":935,"title":{},"body":{"controllers/RequestController.html":{}}}],["apimodule",{"_index":201,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apinotfoundresponse",{"_index":934,"title":{},"body":{"controllers/RequestController.html":{}}}],["apioperation",{"_index":931,"title":{},"body":{"controllers/RequestController.html":{}}}],["apiproperty",{"_index":302,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["apiproperty({description",{"_index":274,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["apitags",{"_index":646,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RequestController.html":{}}}],["apitags('health",{"_index":651,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('request",{"_index":940,"title":{},"body":{"controllers/RequestController.html":{}}}],["app",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app.config",{"_index":334,"title":{},"body":{"modules/ConfigModule.html":{}}}],["app_guard",{"_index":318,"title":{},"body":{"modules/ConfigModule.html":{}}}],["appconfig",{"_index":215,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["application/json",{"_index":793,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["appmodule",{"_index":227,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":87,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"miscellaneous/enumerations.html":{}}}],["async",{"_index":15,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["author",{"_index":1337,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":789,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["automatically",{"_index":1022,"title":{},"body":{"injectables/RequestService.html":{}}}],["available",{"_index":558,"title":{},"body":{"injectables/DriverService.html":{},"modules.html":{}}}],["await",{"_index":37,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["axios",{"_index":718,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"dependencies.html":{}}}],["axios.create",{"_index":724,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{}}}],["axiosinstance",{"_index":723,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{}}}],["axiosinstance.get(`${pickuplocation};${dropofflocation",{"_index":731,"title":{},"body":{"classes/MapBox.html":{}}}],["b584",{"_index":957,"title":{},"body":{"controllers/RequestController.html":{}}}],["backers",{"_index":1330,"title":{},"body":{"index.html":{}}}],["bad",{"_index":963,"title":{},"body":{"controllers/RequestController.html":{}}}],["banned",{"_index":522,"title":{},"body":{"entities/Driver.html":{}}}],["base",{"_index":240,"title":{"classes/Base.html":{}},"body":{"classes/Base.html":{},"entities/Car.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["base.entity",{"_index":307,"title":{},"body":{"entities/Car.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["baseurl",{"_index":725,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{}}}],["bearer",{"_index":790,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["between",{"_index":713,"title":{},"body":{"classes/MapBox.html":{}}}],["body",{"_index":927,"title":{},"body":{"controllers/RequestController.html":{}}}],["boolean",{"_index":423,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"interfaces/DatabaseConfig.html":{},"entities/Driver.html":{},"interfaces/GeneratePaymentReference.html":{}}}],["bootstrap",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["box.interface.ts",{"_index":638,"title":{},"body":{"interfaces/GetDirection.html":{},"coverage.html":{}}}],["box.lib.ts",{"_index":709,"title":{},"body":{"classes/MapBox.html":{},"coverage.html":{}}}],["box.lib.ts:16",{"_index":712,"title":{},"body":{"classes/MapBox.html":{}}}],["browse",{"_index":1344,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1342,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1361,"title":{},"body":{"properties.html":{}}}],["build",{"_index":1284,"title":{},"body":{"index.html":{}}}],["built",{"_index":1222,"title":{},"body":{"index.html":{}}}],["cache",{"_index":337,"title":{},"body":{"modules/ConfigModule.html":{}}}],["calculatefare",{"_index":995,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatefare(distance",{"_index":1012,"title":{},"body":{"injectables/RequestService.html":{}}}],["cannot_create_token",{"_index":818,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["capacity",{"_index":268,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["car",{"_index":265,"title":{"entities/Car.html":{}},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Trip.html":{},"coverage.html":{}}}],["car.driver",{"_index":519,"title":{},"body":{"entities/Driver.html":{}}}],["car.entity",{"_index":529,"title":{},"body":{"entities/Driver.html":{},"entities/Trip.html":{}}}],["car.trips",{"_index":1118,"title":{},"body":{"entities/Trip.html":{}}}],["car.trips)@joincolumn({name",{"_index":1090,"title":{},"body":{"entities/Trip.html":{}}}],["car_id",{"_index":489,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["card",{"_index":632,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["card.interface.ts",{"_index":1081,"title":{},"body":{"interfaces/TokenizeCard.html":{},"coverage.html":{}}}],["card_expiration_date",{"_index":451,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["card_holder",{"_index":815,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["card_holder_name",{"_index":449,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["card_type",{"_index":450,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["cardholder",{"_index":1082,"title":{},"body":{"interfaces/TokenizeCard.html":{}}}],["cards",{"_index":782,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{}}}],["cardtype",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cars",{"_index":40,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/CreateCarsTable1678187456870.html":{},"entities/Driver.html":{}}}],["cars\"(\"id",{"_index":497,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["car})@manytoone(undefined",{"_index":1089,"title":{},"body":{"entities/Trip.html":{}}}],["cascade",{"_index":53,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"entities/Car.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["cascade'})@joincolumn({name",{"_index":286,"title":{},"body":{"entities/Car.html":{},"entities/Trip.html":{}}}],["cash",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch",{"_index":735,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["change",{"_index":1023,"title":{},"body":{"injectables/RequestService.html":{}}}],["character",{"_index":112,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRidersTable1678182352019.html":{}}}],["charge",{"_index":910,"title":{},"body":{"controllers/RequestController.html":{}}}],["check",{"_index":643,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"properties.html":{}}}],["class",{"_index":0,"title":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"classes/RequestRideDto.html":{}},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"modules/DatabaseModule.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"classes/RequestRideDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":928,"title":{},"body":{"controllers/RequestController.html":{}}}],["clone",{"_index":1260,"title":{},"body":{"index.html":{}}}],["cluster_apimodule",{"_index":204,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_imports",{"_index":205,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":314,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":315,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":503,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":504,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_requestmodule",{"_index":974,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_providers",{"_index":975,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["co",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":681,"title":{},"body":{"entities/Location.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["code'})@column({length",{"_index":676,"title":{},"body":{"entities/Location.html":{}}}],["color",{"_index":269,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["column",{"_index":57,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"entities/Car.html":{},"entities/Driver.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Location.html":{},"entities/Payment.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["column('geometry",{"_index":891,"title":{},"body":{"entities/Request.html":{},"entities/Trip.html":{}}}],["comma",{"_index":717,"title":{},"body":{"classes/MapBox.html":{}}}],["command",{"_index":1317,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1288,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1354,"title":{},"body":{"properties.html":{}}}],["commons",{"_index":720,"title":{},"body":{"classes/MapBox.html":{},"entities/Request.html":{},"injectables/RequestService.html":{}}}],["commons/enums",{"_index":843,"title":{},"body":{"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["commons/helpers",{"_index":845,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/RequestService.html":{}}}],["complete",{"_index":1088,"title":{},"body":{"entities/Trip.html":{}}}],["completed",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["compodocpending",{"_index":1319,"title":{},"body":{"index.html":{}}}],["compose",{"_index":1286,"title":{},"body":{"index.html":{}}}],["config",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["config.interface.ts",{"_index":218,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["configmodule",{"_index":230,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":320,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database_host",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_name",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_password",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_port",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_username",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('http",{"_index":388,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get('ratelimiting",{"_index":394,"title":{},"body":{"modules/ConfigModule.html":{}}}],["connection",{"_index":1308,"title":{},"body":{"index.html":{}}}],["connection_options",{"_index":508,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":385,"title":{},"body":{"modules/ConfigModule.html":{},"injectables/DriverService.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":46,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["constructor",{"_index":539,"title":{},"body":{"injectables/DriverService.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["constructor(datasource",{"_index":985,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(driverrepository",{"_index":540,"title":{},"body":{"injectables/DriverService.html":{}}}],["constructor(paymentrepository",{"_index":838,"title":{},"body":{"injectables/PaymentService.html":{}}}],["constructor(private",{"_index":653,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RequestController.html":{}}}],["constructor(riderrepository",{"_index":1074,"title":{},"body":{"injectables/RiderService.html":{}}}],["constructor(triprepository",{"_index":1123,"title":{},"body":{"injectables/TripService.html":{}}}],["containers",{"_index":1285,"title":{},"body":{"index.html":{}}}],["content",{"_index":792,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["context",{"_index":377,"title":{},"body":{"modules/ConfigModule.html":{}}}],["controller",{"_index":639,"title":{"controllers/HealthController.html":{},"controllers/RequestController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/RequestController.html":{},"coverage.html":{}}}],["controller('health",{"_index":652,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('request",{"_index":941,"title":{},"body":{"controllers/RequestController.html":{}}}],["controllers",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"overview.html":{}}}],["coordinates",{"_index":1001,"title":{},"body":{"injectables/RequestService.html":{}}}],["cop",{"_index":827,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/variables.html":{}}}],["copy",{"_index":1226,"title":{},"body":{"index.html":{}}}],["coreconfigmodule",{"_index":321,"title":{},"body":{"modules/ConfigModule.html":{}}}],["coreconfigmodule.forroot",{"_index":335,"title":{},"body":{"modules/ConfigModule.html":{}}}],["coverage",{"_index":1136,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cp",{"_index":1263,"title":{},"body":{"index.html":{}}}],["create",{"_index":182,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/RequestService.html":{},"index.html":{}}}],["createcarstable.ts",{"_index":399,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{},"coverage.html":{}}}],["createcarstable.ts:12",{"_index":401,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["createcarstable.ts:4",{"_index":400,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["createcarstable.ts:6",{"_index":402,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["createcarstable1678187456870",{"_index":397,"title":{"classes/CreateCarsTable1678187456870.html":{}},"body":{"classes/CreateCarsTable1678187456870.html":{},"coverage.html":{}}}],["created",{"_index":924,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"index.html":{}}}],["created_at",{"_index":185,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["createdat",{"_index":242,"title":{},"body":{"classes/Base.html":{},"controllers/RequestController.html":{}}}],["createdatecolumn",{"_index":259,"title":{},"body":{"classes/Base.html":{}}}],["createdatecolumn({name",{"_index":247,"title":{},"body":{"classes/Base.html":{}}}],["createdriverstable.ts",{"_index":408,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"coverage.html":{}}}],["createdriverstable.ts:12",{"_index":410,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["createdriverstable.ts:4",{"_index":409,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["createdriverstable.ts:6",{"_index":411,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["createdriverstable1678187115666",{"_index":406,"title":{"classes/CreateDriversTable1678187115666.html":{}},"body":{"classes/CreateDriversTable1678187115666.html":{},"coverage.html":{}}}],["createlocationstable.ts",{"_index":428,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"coverage.html":{}}}],["createlocationstable.ts:12",{"_index":430,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{}}}],["createlocationstable.ts:4",{"_index":429,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{}}}],["createlocationstable.ts:6",{"_index":431,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{}}}],["createlocationstable1678182431069",{"_index":426,"title":{"classes/CreateLocationsTable1678182431069.html":{}},"body":{"classes/CreateLocationsTable1678182431069.html":{},"coverage.html":{}}}],["createnewtransaction",{"_index":770,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["createnewtransaction(payload",{"_index":775,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["createpaymentmethodstable.ts",{"_index":439,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"coverage.html":{}}}],["createpaymentmethodstable.ts:14",{"_index":441,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["createpaymentmethodstable.ts:4",{"_index":440,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["createpaymentmethodstable.ts:6",{"_index":442,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["createpaymentmethodstable1678185095471",{"_index":437,"title":{"classes/CreatePaymentMethodsTable1678185095471.html":{}},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"coverage.html":{}}}],["createrequeststable.ts",{"_index":455,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"coverage.html":{}}}],["createrequeststable.ts:22",{"_index":457,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["createrequeststable.ts:4",{"_index":456,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["createrequeststable.ts:6",{"_index":458,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["createrequeststable1678216032691",{"_index":453,"title":{"classes/CreateRequestsTable1678216032691.html":{}},"body":{"classes/CreateRequestsTable1678216032691.html":{},"coverage.html":{}}}],["createriderstable.ts",{"_index":468,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{},"coverage.html":{}}}],["createriderstable.ts:12",{"_index":470,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["createriderstable.ts:4",{"_index":469,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["createriderstable.ts:6",{"_index":471,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["createriderstable1678182352019",{"_index":466,"title":{"classes/CreateRidersTable1678182352019.html":{}},"body":{"classes/CreateRidersTable1678182352019.html":{},"coverage.html":{}}}],["createtripstable.ts",{"_index":477,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"coverage.html":{}}}],["createtripstable.ts:25",{"_index":479,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["createtripstable.ts:4",{"_index":478,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["createtripstable.ts:6",{"_index":480,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["createtripstable1678218041445",{"_index":475,"title":{"classes/CreateTripsTable1678218041445.html":{}},"body":{"classes/CreateTripsTable1678218041445.html":{},"coverage.html":{}}}],["creating",{"_index":561,"title":{},"body":{"injectables/DriverService.html":{},"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["creation",{"_index":1322,"title":{},"body":{"index.html":{}}}],["credit_card",{"_index":79,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"miscellaneous/enumerations.html":{}}}],["currency",{"_index":826,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/variables.html":{}}}],["currenttrip",{"_index":1029,"title":{},"body":{"injectables/RequestService.html":{}}}],["currenttrip.id",{"_index":1051,"title":{},"body":{"injectables/RequestService.html":{}}}],["currenttrip.request",{"_index":1031,"title":{},"body":{"injectables/RequestService.html":{}}}],["customer_email",{"_index":828,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["customeremail",{"_index":628,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["customprops",{"_index":374,"title":{},"body":{"modules/ConfigModule.html":{}}}],["cvc",{"_index":809,"title":{},"body":{"classes/PaymentGateway.html":{},"interfaces/TokenizeCard.html":{}}}],["d",{"_index":1287,"title":{},"body":{"index.html":{}}}],["database",{"_index":219,"title":{},"body":{"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["database/entities",{"_index":549,"title":{},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"entities/Request.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["database/entities/trip.entity",{"_index":939,"title":{},"body":{"controllers/RequestController.html":{}}}],["database_host",{"_index":351,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_name",{"_index":349,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_password",{"_index":352,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_port",{"_index":353,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_ssl",{"_index":355,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_username",{"_index":357,"title":{},"body":{"modules/ConfigModule.html":{}}}],["databaseconfig",{"_index":224,"title":{"interfaces/DatabaseConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["databasemodule",{"_index":231,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["datasource",{"_index":986,"title":{},"body":{"injectables/RequestService.html":{}}}],["date",{"_index":245,"title":{},"body":{"classes/Base.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"entities/Driver.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["date})@column({type",{"_index":1112,"title":{},"body":{"entities/Trip.html":{}}}],["db",{"_index":654,"title":{},"body":{"controllers/HealthController.html":{}}}],["declined",{"_index":88,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"miscellaneous/enumerations.html":{}}}],["decorators",{"_index":246,"title":{},"body":{"classes/Base.html":{},"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/PaymentGateway.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["delete",{"_index":52,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["deleted_at",{"_index":189,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["deleted_at'})@isoptional",{"_index":250,"title":{},"body":{"classes/Base.html":{}}}],["deletedat",{"_index":243,"title":{},"body":{"classes/Base.html":{},"controllers/RequestController.html":{}}}],["deletedatecolumn",{"_index":261,"title":{},"body":{"classes/Base.html":{}}}],["deletedatecolumn({name",{"_index":249,"title":{},"body":{"classes/Base.html":{}}}],["dependencies",{"_index":203,"title":{"dependencies.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1237,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1235,"title":{},"body":{"index.html":{}}}],["description",{"_index":312,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"index.html":{},"properties.html":{}}}],["detailed",{"_index":1318,"title":{},"body":{"index.html":{}}}],["details",{"_index":802,"title":{},"body":{"classes/PaymentGateway.html":{},"entities/Request.html":{}}}],["development",{"_index":1231,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1259,"title":{},"body":{"index.html":{}}}],["distance",{"_index":513,"title":{},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GetDirection.html":{},"classes/MapBox.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["distancefare",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distanceinmeters",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distancetokilometers",{"_index":510,"title":{"interfaces/DistanceToKilometers.html":{}},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"classes/MapBox.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["distancetokilometers(number(distance",{"_index":733,"title":{},"body":{"classes/MapBox.html":{}}}],["dni",{"_index":421,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"entities/Driver.html":{}}}],["docker",{"_index":1249,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1137,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":949,"title":{},"body":{"controllers/RequestController.html":{}}}],["down",{"_index":16,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["down(queryrunner",{"_index":25,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["driver",{"_index":270,"title":{"entities/Driver.html":{}},"body":{"entities/Car.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"index.html":{}}}],["driver.cars",{"_index":284,"title":{},"body":{"entities/Car.html":{}}}],["driver.cars?.[0",{"_index":1132,"title":{},"body":{"injectables/TripService.html":{}}}],["driver.entity",{"_index":308,"title":{},"body":{"entities/Car.html":{},"entities/Trip.html":{}}}],["driver.service",{"_index":1129,"title":{},"body":{"injectables/TripService.html":{}}}],["driver.trips",{"_index":1117,"title":{},"body":{"entities/Trip.html":{}}}],["driver.trips)@joincolumn({name",{"_index":1093,"title":{},"body":{"entities/Trip.html":{}}}],["driver_id",{"_index":42,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"entities/Car.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["driver_rating",{"_index":487,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["driverrating",{"_index":1086,"title":{},"body":{"entities/Trip.html":{}}}],["driverrepository",{"_index":543,"title":{},"body":{"injectables/DriverService.html":{}}}],["drivers",{"_index":412,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"injectables/DriverService.html":{}}}],["drivers\"(\"id",{"_index":51,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["drivers.length",{"_index":554,"title":{},"body":{"injectables/DriverService.html":{}}}],["drivers[0",{"_index":563,"title":{},"body":{"injectables/DriverService.html":{}}}],["driverservice",{"_index":534,"title":{"injectables/DriverService.html":{}},"body":{"injectables/DriverService.html":{},"modules/RequestModule.html":{},"injectables/TripService.html":{},"coverage.html":{},"overview.html":{}}}],["driver})@manytoone(undefined",{"_index":1092,"title":{},"body":{"entities/Trip.html":{}}}],["drop",{"_index":56,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["dropoff",{"_index":704,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["dropoff_location",{"_index":100,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Request.html":{}}}],["dropoff_location'})@transform",{"_index":868,"title":{},"body":{"entities/Request.html":{}}}],["dropoff_location_id",{"_index":130,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["dropofflocation",{"_index":705,"title":{},"body":{"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{}}}],["dropofflocation.latitude",{"_index":1004,"title":{},"body":{"injectables/RequestService.html":{}}}],["dropofflocation.longitude",{"_index":1005,"title":{},"body":{"injectables/RequestService.html":{}}}],["dropofflocation.longitude},${dropofflocation.latitude",{"_index":1008,"title":{},"body":{"injectables/RequestService.html":{}}}],["droppaymentmethodtableandrelations.ts",{"_index":570,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"coverage.html":{}}}],["droppaymentmethodtableandrelations.ts:14",{"_index":572,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["droppaymentmethodtableandrelations.ts:4",{"_index":571,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["droppaymentmethodtableandrelations.ts:6",{"_index":573,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["droppaymentmethodtableandrelations1678294718551",{"_index":568,"title":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"coverage.html":{}}}],["dto",{"_index":936,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["duration",{"_index":515,"title":{},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GetDirection.html":{},"classes/MapBox.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["durationfare",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["durationinseconds",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["durationtominutes",{"_index":514,"title":{"interfaces/DurationToMinutes.html":{}},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"classes/MapBox.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["durationtominutes(number(duration",{"_index":734,"title":{},"body":{"classes/MapBox.html":{}}}],["e2e",{"_index":1314,"title":{},"body":{"index.html":{}}}],["eager",{"_index":298,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["email",{"_index":416,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{}}}],["end_time",{"_index":195,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"entities/Trip.html":{}}}],["ended",{"_index":1098,"title":{},"body":{"entities/Trip.html":{}}}],["endpoints",{"_index":1304,"title":{},"body":{"index.html":{}}}],["endtime",{"_index":895,"title":{},"body":{"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["entities",{"_index":266,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":264,"title":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"entities/Rider.html":{},"entities/Trip.html":{}},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"coverage.html":{}}}],["entity('cars",{"_index":310,"title":{},"body":{"entities/Car.html":{}}}],["entity('drivers",{"_index":532,"title":{},"body":{"entities/Driver.html":{}}}],["entity('payments",{"_index":763,"title":{},"body":{"entities/Payment.html":{}}}],["entity('requests",{"_index":890,"title":{},"body":{"entities/Request.html":{}}}],["entity('riders",{"_index":1069,"title":{},"body":{"entities/Rider.html":{}}}],["entity('trips",{"_index":1116,"title":{},"body":{"entities/Trip.html":{}}}],["entity.{js,ts",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":746,"title":{},"body":{"entities/Payment.html":{},"classes/PaymentGateway.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["enum('approved",{"_index":102,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["enum('cash",{"_index":78,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["enum('completed",{"_index":482,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["enum('pending",{"_index":86,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["enum('visa",{"_index":445,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["enum('waiting",{"_index":460,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["enumerations",{"_index":1193,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":761,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["env",{"_index":341,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["env*once",{"_index":1265,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":1264,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":339,"title":{},"body":{"modules/ConfigModule.html":{}}}],["environment",{"_index":1261,"title":{},"body":{"index.html":{}}}],["equal",{"_index":590,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["error",{"_index":89,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["error?.response?.data?.message",{"_index":803,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["eslint",{"_index":1352,"title":{},"body":{"properties.html":{}}}],["establish",{"_index":1306,"title":{},"body":{"index.html":{}}}],["estimated",{"_index":871,"title":{},"body":{"entities/Request.html":{}}}],["estimated_fare",{"_index":462,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"entities/Request.html":{}}}],["estimatedfare",{"_index":865,"title":{},"body":{"entities/Request.html":{},"controllers/RequestController.html":{}}}],["example",{"_index":584,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"entities/Trip.html":{},"index.html":{}}}],["execute",{"_index":1303,"title":{},"body":{"index.html":{}}}],["existing",{"_index":1046,"title":{},"body":{"injectables/RequestService.html":{}}}],["exists",{"_index":567,"title":{},"body":{"injectables/DriverService.html":{},"controllers/RequestController.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["exp_month",{"_index":811,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["exp_year",{"_index":813,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["expmonth",{"_index":1083,"title":{},"body":{"interfaces/TokenizeCard.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["exports",{"_index":317,"title":{},"body":{"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{}}}],["expose",{"_index":1068,"title":{},"body":{"entities/Rider.html":{}}}],["express",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["expyear",{"_index":1084,"title":{},"body":{"interfaces/TokenizeCard.html":{}}}],["extends",{"_index":311,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["external",{"_index":753,"title":{},"body":{"entities/Payment.html":{}}}],["false",{"_index":313,"title":{},"body":{"entities/Car.html":{},"classes/CreateDriversTable1678187115666.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"miscellaneous/variables.html":{}}}],["false})@column('geometry",{"_index":1102,"title":{},"body":{"entities/Trip.html":{}}}],["false})@column({length",{"_index":1062,"title":{},"body":{"entities/Rider.html":{}}}],["false})@column({name",{"_index":525,"title":{},"body":{"entities/Driver.html":{}}}],["false})@column({nullable",{"_index":1065,"title":{},"body":{"entities/Rider.html":{}}}],["false})@column({type",{"_index":276,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Payment.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["false})@isnumber",{"_index":586,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["false})@isoptional()@length(2",{"_index":695,"title":{},"body":{"classes/LocationDto.html":{}}}],["fare",{"_index":190,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/GeneratePaymentReference.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"miscellaneous/variables.html":{}}}],["fare'})@column({type",{"_index":739,"title":{},"body":{"entities/Payment.html":{}}}],["fastify",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["fastify/compress",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["fastify/helmet",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["fastify/static",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["fdef43a2",{"_index":954,"title":{},"body":{"controllers/RequestController.html":{}}}],["fees",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fees.base",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fees.distance",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fees.duration",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"index.html":{}}}],["final",{"_index":1101,"title":{},"body":{"entities/Trip.html":{}}}],["final_location",{"_index":96,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Trip.html":{}}}],["final_location_id",{"_index":124,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["finallocation",{"_index":577,"title":{},"body":{"classes/FinishRideDto.html":{},"entities/Location.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["finallocation.latitude",{"_index":1048,"title":{},"body":{"injectables/RequestService.html":{}}}],["finallocation.longitude",{"_index":1049,"title":{},"body":{"injectables/RequestService.html":{}}}],["finallocation.longitude},${finallocation.latitude",{"_index":1033,"title":{},"body":{"injectables/RequestService.html":{}}}],["finish",{"_index":907,"title":{},"body":{"controllers/RequestController.html":{}}}],["finished",{"_index":909,"title":{},"body":{"controllers/RequestController.html":{}}}],["finishride",{"_index":902,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["finishride(@body",{"_index":972,"title":{},"body":{"controllers/RequestController.html":{}}}],["finishride(payload",{"_index":904,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["finishridedto",{"_index":574,"title":{"classes/FinishRideDto.html":{}},"body":{"classes/FinishRideDto.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["first",{"_index":1057,"title":{},"body":{"entities/Rider.html":{}}}],["first_name",{"_index":413,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Rider.html":{}}}],["firstname",{"_index":1053,"title":{},"body":{"entities/Rider.html":{}}}],["fk_04caa31b8581b77d274c1180c0c",{"_index":132,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["fk_12fd861c33c885f01b9a7da7d93",{"_index":198,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["fk_1403195e3b80cf083352758adb0",{"_index":47,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}}}],["fk_213969006cff7948380b9595044",{"_index":123,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["fk_44d36110fb38f45c2f15c946ddb",{"_index":495,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["fk_6c5633e5a6d5635831cbc96bef6",{"_index":121,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["fk_79746ad153ee98938ff06104438",{"_index":167,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["fk_839c2a9fd7fb004440b548b59f1",{"_index":135,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["fk_9610d35d5d21db627101427b7e5",{"_index":134,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["fk_a796178a3fa8c222d6bb8b65c54",{"_index":122,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["fk_bd02a6beaa5c282445abc4b3507",{"_index":162,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["fk_cc669ad722640e54bb5c56972c6",{"_index":68,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}}}],["fk_db5f71a072c7bfefc58670b358e",{"_index":465,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["fk_dfea9f5c01666a915e9eb1aca5b",{"_index":496,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["fk_f8ab7c11057c69afa8746f79245",{"_index":493,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["following",{"_index":1269,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":48,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["format(fare",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":965,"title":{},"body":{"controllers/RequestController.html":{}}}],["framework",{"_index":1224,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":1070,"title":{},"body":{"entities/Rider.html":{}}}],["function",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1215,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":756,"title":{},"body":{"entities/Payment.html":{},"injectables/RequestService.html":{}}}],["gateway.lib.ts",{"_index":768,"title":{},"body":{"classes/PaymentGateway.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["gateway.lib.ts:13",{"_index":774,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway.lib.ts:14",{"_index":772,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway.lib.ts:26",{"_index":778,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway.lib.ts:38",{"_index":779,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway.lib.ts:56",{"_index":776,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway_acceptance_token",{"_index":365,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["gateway_base_url",{"_index":362,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["gateway_public_key",{"_index":364,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["gateway_secret_key",{"_index":363,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["gatewayendpoints",{"_index":781,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{}}}],["generate",{"_index":922,"title":{},"body":{"controllers/RequestController.html":{}}}],["generateacceptancetoken",{"_index":771,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["generatebasetrip",{"_index":1122,"title":{},"body":{"injectables/TripService.html":{}}}],["generatebasetrip(incomingrequest",{"_index":1126,"title":{},"body":{"injectables/TripService.html":{}}}],["generated",{"_index":754,"title":{},"body":{"entities/Payment.html":{}}}],["generatepayment",{"_index":837,"title":{},"body":{"injectables/PaymentService.html":{}}}],["generatepayment(payload",{"_index":841,"title":{},"body":{"injectables/PaymentService.html":{}}}],["generatepaymentreference",{"_index":618,"title":{"interfaces/GeneratePaymentReference.html":{}},"body":{"interfaces/GeneratePaymentReference.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["generatetransaction",{"_index":624,"title":{"interfaces/GenerateTransaction.html":{}},"body":{"interfaces/GenerateTransaction.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"coverage.html":{}}}],["generateuuid",{"_index":844,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generating",{"_index":805,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["generation",{"_index":800,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["geometry",{"_index":97,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["geometry(geometry,0",{"_index":101,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["get()@healthcheck",{"_index":644,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdirection",{"_index":636,"title":{"interfaces/GetDirection.html":{}},"body":{"interfaces/GetDirection.html":{},"classes/MapBox.html":{},"coverage.html":{}}}],["getdirection(pickuplocation",{"_index":711,"title":{},"body":{"classes/MapBox.html":{}}}],["getfirstdriver",{"_index":537,"title":{},"body":{"injectables/DriverService.html":{}}}],["getonebyidorfail",{"_index":538,"title":{},"body":{"injectables/DriverService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["getonebyidorfail(id",{"_index":545,"title":{},"body":{"injectables/DriverService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["getting",{"_index":1217,"title":{"index.html":{}},"body":{"index.html":{}}}],["given",{"_index":991,"title":{},"body":{"injectables/RequestService.html":{}}}],["gmail",{"_index":1340,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1345,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":589,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["grow",{"_index":1326,"title":{},"body":{"index.html":{}}}],["hailing",{"_index":1218,"title":{},"body":{"index.html":{},"properties.html":{}}}],["headers",{"_index":788,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["health",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"properties.html":{}}}],["healthcheck",{"_index":649,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":647,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":640,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":232,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["helper.interface.ts",{"_index":512,"title":{},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"coverage.html":{}}}],["here",{"_index":1334,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":1358,"title":{},"body":{"properties.html":{}}}],["host",{"_index":499,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":220,"title":{"interfaces/Http.html":{}},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"interfaces/Http.html":{},"coverage.html":{},"dependencies.html":{}}}],["http://localhost/5432",{"_index":1310,"title":{},"body":{"index.html":{}}}],["http://localhost/6543",{"_index":1305,"title":{},"body":{"index.html":{}}}],["http://localhost:/api",{"_index":1299,"title":{},"body":{"index.html":{}}}],["httpmodule",{"_index":323,"title":{},"body":{"modules/ConfigModule.html":{},"modules/HealthModule.html":{}}}],["httpmodule.registerasync",{"_index":383,"title":{},"body":{"modules/ConfigModule.html":{}}}],["https://github.com/jacksonr20/ride",{"_index":1359,"title":{},"body":{"properties.html":{}}}],["httpstatuscode",{"_index":719,"title":{},"body":{"classes/MapBox.html":{}}}],["httpstatuscode.unauthorized",{"_index":736,"title":{},"body":{"classes/MapBox.html":{}}}],["husky",{"_index":1353,"title":{},"body":{"properties.html":{}}}],["id",{"_index":183,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["identifier",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"modules/DatabaseModule.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["important",{"_index":1266,"title":{},"body":{"index.html":{}}}],["imports",{"_index":211,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{}}}],["in_progress",{"_index":483,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":1016,"title":{},"body":{"injectables/RequestService.html":{}}}],["incomingrequest",{"_index":1013,"title":{},"body":{"injectables/RequestService.html":{},"injectables/TripService.html":{}}}],["incomingrequest.id",{"_index":1025,"title":{},"body":{"injectables/RequestService.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"interfaces/AppConfig.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["inject",{"_index":390,"title":{},"body":{"modules/ConfigModule.html":{}}}],["injectable",{"_index":533,"title":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["injectables",{"_index":535,"title":{},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"overview.html":{}}}],["injectrepository",{"_index":548,"title":{},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["injectrepository(driver",{"_index":550,"title":{},"body":{"injectables/DriverService.html":{}}}],["injectrepository(payment",{"_index":846,"title":{},"body":{"injectables/PaymentService.html":{}}}],["injectrepository(rider",{"_index":1078,"title":{},"body":{"injectables/RiderService.html":{}}}],["injectrepository(trip",{"_index":1130,"title":{},"body":{"injectables/TripService.html":{}}}],["input",{"_index":914,"title":{},"body":{"controllers/RequestController.html":{}}}],["install",{"_index":1243,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1271,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1279,"title":{},"body":{"index.html":{}}}],["installments",{"_index":634,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["installrunning",{"_index":1272,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1027,"title":{},"body":{"injectables/RequestService.html":{}}}],["instead",{"_index":1257,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":1225,"title":{},"body":{"index.html":{}}}],["integer",{"_index":300,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["interface",{"_index":214,"title":{"interfaces/AppConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"interfaces/PaymentMethod.html":{},"interfaces/RateLimiting.html":{},"interfaces/TokenizeCard.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"interfaces/PaymentMethod.html":{},"interfaces/RateLimiting.html":{},"interfaces/TokenizeCard.html":{},"coverage.html":{}}}],["interfaces",{"_index":216,"title":{},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"interfaces/TokenizeCard.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":780,"title":{},"body":{"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["internalservererrorexception('something",{"_index":804,"title":{},"body":{"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["intl.numberformat('es",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_transaction_id",{"_index":833,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["is_banned",{"_index":422,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"entities/Driver.html":{}}}],["isbanned",{"_index":517,"title":{},"body":{"entities/Driver.html":{}}}],["isdefined",{"_index":605,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isglobal",{"_index":336,"title":{},"body":{"modules/ConfigModule.html":{}}}],["isnotempty",{"_index":698,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isnotemptyobject",{"_index":606,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isnumber",{"_index":607,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isoptional",{"_index":262,"title":{},"body":{"classes/Base.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isuuid",{"_index":608,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isuuid('4",{"_index":615,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["it's",{"_index":1018,"title":{},"body":{"injectables/RequestService.html":{}}}],["jackson",{"_index":1338,"title":{},"body":{"index.html":{},"properties.html":{}}}],["jackson.rodriguezf@gmail.com",{"_index":1341,"title":{},"body":{"index.html":{}}}],["john",{"_index":948,"title":{},"body":{"controllers/RequestController.html":{}}}],["joi",{"_index":333,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["joi.boolean().default(false",{"_index":356,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.number().default(3000",{"_index":348,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.number().default(5432",{"_index":354,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.number().required",{"_index":367,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.object",{"_index":343,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.string().required",{"_index":350,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.string().valid('development",{"_index":345,"title":{},"body":{"modules/ConfigModule.html":{}}}],["join",{"_index":331,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":340,"title":{},"body":{"modules/ConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":305,"title":{},"body":{"entities/Car.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["joined",{"_index":524,"title":{},"body":{"entities/Driver.html":{}}}],["joined_date",{"_index":420,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"entities/Driver.html":{}}}],["joineddate",{"_index":518,"title":{},"body":{"entities/Driver.html":{}}}],["js,ts",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":49,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"index.html":{}}}],["keywords",{"_index":1351,"title":{},"body":{"properties.html":{}}}],["last",{"_index":1059,"title":{},"body":{"entities/Rider.html":{}}}],["last_name",{"_index":415,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"entities/Rider.html":{}}}],["lastname",{"_index":1054,"title":{},"body":{"entities/Rider.html":{}}}],["latest",{"_index":1250,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":433,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"classes/RequestRideDto.html":{}}}],["latitude'})@column({type",{"_index":667,"title":{},"body":{"entities/Location.html":{}}}],["length",{"_index":280,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{}}}],["length(2",{"_index":701,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["less",{"_index":592,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["libs",{"_index":1000,"title":{},"body":{"injectables/RequestService.html":{}}}],["license",{"_index":288,"title":{},"body":{"entities/Car.html":{},"index.html":{},"properties.html":{}}}],["license_plate",{"_index":292,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["licensed",{"_index":1325,"title":{},"body":{"index.html":{}}}],["licenseplate",{"_index":271,"title":{},"body":{"entities/Car.html":{}}}],["limit",{"_index":393,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/RateLimiting.html":{}}}],["limiting",{"_index":1357,"title":{},"body":{"properties.html":{}}}],["limiting.interface.ts",{"_index":857,"title":{},"body":{"interfaces/RateLimiting.html":{},"coverage.html":{}}}],["link",{"_index":1300,"title":{},"body":{"index.html":{}}}],["lint",{"_index":1355,"title":{},"body":{"properties.html":{}}}],["live",{"_index":1238,"title":{},"body":{"index.html":{}}}],["load",{"_index":338,"title":{},"body":{"modules/ConfigModule.html":{}}}],["local",{"_index":1229,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":1301,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1256,"title":{},"body":{"index.html":{}}}],["location",{"_index":432,"title":{"entities/Location.html":{}},"body":{"classes/CreateLocationsTable1678182431069.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Trip.html":{},"coverage.html":{}}}],["location\"(\"id",{"_index":133,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["location'})@column('geometry",{"_index":867,"title":{},"body":{"entities/Request.html":{}}}],["locationdto",{"_index":580,"title":{"classes/LocationDto.html":{}},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"coverage.html":{}}}],["logger",{"_index":769,"title":{},"body":{"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["logger(paymentgateway.name",{"_index":773,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["logger(requestservice.name",{"_index":994,"title":{},"body":{"injectables/RequestService.html":{}}}],["loggermodule",{"_index":328,"title":{},"body":{"modules/ConfigModule.html":{}}}],["loggermodule.forroot",{"_index":372,"title":{},"body":{"modules/ConfigModule.html":{}}}],["longitude",{"_index":434,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"classes/RequestRideDto.html":{}}}],["longitude'})@column({type",{"_index":669,"title":{},"body":{"entities/Location.html":{}}}],["look",{"_index":1298,"title":{},"body":{"index.html":{}}}],["looking",{"_index":566,"title":{},"body":{"injectables/DriverService.html":{},"controllers/RequestController.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["lte",{"_index":1251,"title":{},"body":{"index.html":{}}}],["machine",{"_index":1230,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1015,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.save",{"_index":1044,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.save(relatedtrip",{"_index":1021,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.save(request",{"_index":1017,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.update(request",{"_index":1024,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.update(trip",{"_index":1050,"title":{},"body":{"injectables/RequestService.html":{}}}],["manytoone",{"_index":304,"title":{},"body":{"entities/Car.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["manytoone(undefined",{"_index":283,"title":{},"body":{"entities/Car.html":{}}}],["map_box_access_token",{"_index":359,"title":{},"body":{"modules/ConfigModule.html":{}}}],["map_box_base_url",{"_index":358,"title":{},"body":{"modules/ConfigModule.html":{}}}],["mapbox",{"_index":707,"title":{"classes/MapBox.html":{}},"body":{"classes/MapBox.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["mapbox.getdirection",{"_index":1006,"title":{},"body":{"injectables/RequestService.html":{}}}],["mapbox.getdirection(`${coordinates[1]},${coordinates[0",{"_index":1032,"title":{},"body":{"injectables/RequestService.html":{}}}],["mastercard",{"_index":446,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":609,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["max(10",{"_index":617,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["max(180",{"_index":700,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["max(90",{"_index":699,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["maxredirects",{"_index":387,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Http.html":{}}}],["memberof",{"_index":722,"title":{},"body":{"classes/MapBox.html":{},"injectables/RequestService.html":{}}}],["merchant",{"_index":806,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["merchants",{"_index":784,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{}}}],["message",{"_index":587,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{}}}],["metadata",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":448,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"entities/Payment.html":{}}}],["method.enum.ts",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"controllers/HealthController.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["migrationinterface",{"_index":9,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["migrations",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":610,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["min(0",{"_index":616,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["minimumfractiondigits",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1192,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1324,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1276,"title":{},"body":{"index.html":{}}}],["model",{"_index":272,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["module",{"_index":200,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{}}}],["modules",{"_index":202,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{},"modules.html":{},"overview.html":{}}}],["monetary",{"_index":1221,"title":{},"body":{"index.html":{},"properties.html":{}}}],["more",{"_index":1333,"title":{},"body":{"index.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Location.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"index.html":{}}}],["need",{"_index":1242,"title":{},"body":{"index.html":{}}}],["nequi",{"_index":633,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{}}}],["nest",{"_index":1223,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":329,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":324,"title":{},"body":{"modules/ConfigModule.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":212,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"injectables/DriverService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":322,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":319,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":303,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":650,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":327,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":507,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"modules/RequestModule.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"dependencies.html":{}}}],["new",{"_index":556,"title":{},"body":{"injectables/DriverService.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newride",{"_index":970,"title":{},"body":{"controllers/RequestController.html":{}}}],["no_token",{"_index":796,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["node",{"_index":1245,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":344,"title":{},"body":{"modules/ConfigModule.html":{}}}],["notes",{"_index":1236,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":547,"title":{},"body":{"injectables/DriverService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["notfoundexception('the",{"_index":565,"title":{},"body":{"injectables/DriverService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["notfoundexception('there",{"_index":557,"title":{},"body":{"injectables/DriverService.html":{}}}],["now",{"_index":187,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["npm",{"_index":1247,"title":{},"body":{"index.html":{}}}],["null",{"_index":114,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"controllers/RequestController.html":{},"injectables/TripService.html":{}}}],["nullable",{"_index":255,"title":{},"body":{"classes/Base.html":{},"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["number",{"_index":225,"title":{},"body":{"interfaces/AppConfig.html":{},"entities/Car.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"interfaces/RateLimiting.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"miscellaneous/variables.html":{}}}],["number'})@isnotempty({message",{"_index":685,"title":{},"body":{"classes/LocationDto.html":{}}}],["number'})@isoptional()@min(0",{"_index":588,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["number((distanceinmeters",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number((durationinseconds",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number})@column({nullable",{"_index":1096,"title":{},"body":{"entities/Trip.html":{}}}],["number})@column({type",{"_index":872,"title":{},"body":{"entities/Request.html":{}}}],["numeric",{"_index":740,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{}}}],["numeric(10,2",{"_index":155,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["object.keys(tripstatus",{"_index":1119,"title":{},"body":{"entities/Trip.html":{}}}],["object.values(paymentmethod",{"_index":765,"title":{},"body":{"entities/Payment.html":{}}}],["object.values(paymentstatus",{"_index":764,"title":{},"body":{"entities/Payment.html":{}}}],["object.values(requeststatus",{"_index":898,"title":{},"body":{"entities/Request.html":{}}}],["ondelete",{"_index":285,"title":{},"body":{"entities/Car.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["ones",{"_index":562,"title":{},"body":{"injectables/DriverService.html":{}}}],["onetomany",{"_index":306,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Rider.html":{}}}],["onetomany(undefined",{"_index":296,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Rider.html":{}}}],["onetoone",{"_index":679,"title":{},"body":{"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["onetoone(undefined",{"_index":664,"title":{},"body":{"entities/Location.html":{},"entities/Payment.html":{},"entities/Trip.html":{}}}],["open",{"_index":1295,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"entities/Location.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"index.html":{}}}],["options",{"_index":381,"title":{},"body":{"modules/ConfigModule.html":{}}}],["otherwise",{"_index":1282,"title":{},"body":{"index.html":{}}}],["out",{"_index":209,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"overview.html":{}}}],["overview",{"_index":1346,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1159,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":721,"title":{},"body":{"classes/MapBox.html":{},"injectables/RequestService.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["params",{"_index":727,"title":{},"body":{"classes/MapBox.html":{}}}],["partial",{"_index":1036,"title":{},"body":{"injectables/RequestService.html":{}}}],["password",{"_index":500,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":332,"title":{},"body":{"modules/ConfigModule.html":{}}}],["payload",{"_index":777,"title":{},"body":{"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["payload.amountincents",{"_index":825,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payload.customeremail",{"_index":829,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payload.paymentmethod",{"_index":832,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payload.reference",{"_index":830,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payment",{"_index":620,"title":{"entities/Payment.html":{}},"body":{"interfaces/GeneratePaymentReference.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"coverage.html":{}}}],["payment.entity",{"_index":1115,"title":{},"body":{"entities/Trip.html":{}}}],["payment.fare",{"_index":848,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.id",{"_index":847,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.paymentmethodtype",{"_index":852,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.service",{"_index":998,"title":{},"body":{"injectables/RequestService.html":{}}}],["payment.status",{"_index":850,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.tip",{"_index":849,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.transactionid",{"_index":854,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.trip",{"_index":1106,"title":{},"body":{"entities/Trip.html":{}}}],["payment_id",{"_index":165,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"entities/Trip.html":{}}}],["payment_method",{"_index":831,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payment_method_id",{"_index":192,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["payment_method_type",{"_index":82,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"entities/Payment.html":{}}}],["payment_methods",{"_index":66,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["payment_methods\"(\"id",{"_index":199,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["payment_pending",{"_index":484,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"miscellaneous/enumerations.html":{}}}],["payment_roll",{"_index":1267,"title":{},"body":{"index.html":{}}}],["paymentgateway",{"_index":766,"title":{"classes/PaymentGateway.html":{}},"body":{"classes/PaymentGateway.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["paymentgateway.createnewtransaction",{"_index":1040,"title":{},"body":{"injectables/RequestService.html":{}}}],["paymentgateway.tokenizecard",{"_index":1039,"title":{},"body":{"injectables/RequestService.html":{}}}],["paymentmethod",{"_index":629,"title":{"interfaces/PaymentMethod.html":{}},"body":{"interfaces/GenerateTransaction.html":{},"entities/Payment.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["paymentmethod.credit_card",{"_index":853,"title":{},"body":{"injectables/PaymentService.html":{}}}],["paymentmethodtype",{"_index":738,"title":{},"body":{"entities/Payment.html":{}}}],["paymentmethod})@column({type",{"_index":747,"title":{},"body":{"entities/Payment.html":{}}}],["paymentreference",{"_index":1043,"title":{},"body":{"injectables/RequestService.html":{}}}],["paymentrepository",{"_index":840,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payments",{"_index":81,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["payments\"(\"id",{"_index":168,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["payments_status_enum",{"_index":104,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["payments_status_enum_old",{"_index":85,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["paymentservice",{"_index":835,"title":{"injectables/PaymentService.html":{}},"body":{"injectables/PaymentService.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"coverage.html":{},"overview.html":{}}}],["paymentstatus",{"_index":749,"title":{},"body":{"entities/Payment.html":{},"injectables/PaymentService.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.pending",{"_index":851,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment})@onetoone(undefined",{"_index":1105,"title":{},"body":{"entities/Trip.html":{}}}],["pending",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":1095,"title":{},"body":{"entities/Trip.html":{}}}],["persist",{"_index":622,"title":{},"body":{"interfaces/GeneratePaymentReference.html":{},"injectables/PaymentService.html":{}}}],["pg",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["pgadmin_default_email",{"_index":360,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pgadmin_default_password",{"_index":361,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pgadminswagger",{"_index":1292,"title":{},"body":{"index.html":{}}}],["phone",{"_index":1061,"title":{},"body":{"entities/Rider.html":{}}}],["phone_number",{"_index":417,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"entities/Rider.html":{}}}],["phonenumber",{"_index":1055,"title":{},"body":{"entities/Rider.html":{}}}],["pickup",{"_index":581,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{}}}],["pickup_location",{"_index":99,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Request.html":{}}}],["pickup_location'})@transform",{"_index":875,"title":{},"body":{"entities/Request.html":{}}}],["pickup_location_id",{"_index":127,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["pickuplocation",{"_index":703,"title":{},"body":{"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{}}}],["pickuplocation.latitude",{"_index":1002,"title":{},"body":{"injectables/RequestService.html":{}}}],["pickuplocation.longitude",{"_index":1003,"title":{},"body":{"injectables/RequestService.html":{}}}],["pickuplocation.longitude},${pickuplocation.latitude",{"_index":1007,"title":{},"body":{"injectables/RequestService.html":{}}}],["pino",{"_index":330,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":373,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pk_0428f484e96f9e6a55955f29b5f",{"_index":464,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["pk_197ab7af18c93fbb0c9b28b4a59",{"_index":193,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["pk_34f9b8c6dfb4ac3559f7e2820d1",{"_index":452,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["pk_6c17e67f760677500c29d68e689",{"_index":474,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["pk_876d7bdba03c72251ec4c2dc827",{"_index":436,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{}}}],["pk_92ab3fb69e566d3eb0cae896047",{"_index":425,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["pk_f71c231dee9c05a9522f9e840f5",{"_index":492,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["pk_fc218aa84e79b477d55322271b6",{"_index":405,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["plate",{"_index":289,"title":{},"body":{"entities/Car.html":{}}}],["please",{"_index":559,"title":{},"body":{"injectables/DriverService.html":{},"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"index.html":{}}}],["point",{"_index":866,"title":{},"body":{"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["points",{"_index":715,"title":{},"body":{"classes/MapBox.html":{}}}],["port",{"_index":221,"title":{},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"interfaces/DatabaseConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ports",{"_index":1302,"title":{},"body":{"index.html":{}}}],["post",{"_index":929,"title":{},"body":{"controllers/RequestController.html":{}}}],["post('finish",{"_index":905,"title":{},"body":{"controllers/RequestController.html":{}}}],["post('ride",{"_index":942,"title":{},"body":{"controllers/RequestController.html":{}}}],["post('ride')@apioperation({summary",{"_index":921,"title":{},"body":{"controllers/RequestController.html":{}}}],["postgres",{"_index":1253,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["postres",{"_index":1309,"title":{},"body":{"index.html":{}}}],["precision",{"_index":741,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{}}}],["prefix",{"_index":642,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RequestController.html":{}}}],["pretty",{"_index":380,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["primary",{"_index":194,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["primarygeneratedcolumn",{"_index":258,"title":{},"body":{"classes/Base.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":252,"title":{},"body":{"classes/Base.html":{}}}],["private",{"_index":551,"title":{},"body":{"injectables/DriverService.html":{},"controllers/HealthController.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"index.html":{}}}],["process.env.gateway_base_url",{"_index":787,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.gateway_public_key",{"_index":791,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.map_box_access_token",{"_index":729,"title":{},"body":{"classes/MapBox.html":{}}}],["process.env.map_box_base_url",{"_index":726,"title":{},"body":{"classes/MapBox.html":{}}}],["process.env.tokenize_card_cvc",{"_index":810,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.tokenize_card_exp_month",{"_index":812,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.tokenize_card_exp_year",{"_index":814,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.tokenize_card_holder",{"_index":816,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.tokenize_card_number",{"_index":808,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["production",{"_index":346,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["project",{"_index":1227,"title":{},"body":{"index.html":{}}}],["promise",{"_index":31,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"interfaces/AppConfig.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"properties.html":{}}}],["provide",{"_index":395,"title":{},"body":{"modules/ConfigModule.html":{}}}],["providers",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{}}}],["pse",{"_index":80,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"miscellaneous/enumerations.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"index.html":{}}}],["public\".\"payment_methods_card_type_enum",{"_index":444,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["public\".\"payment_methods_method_enum",{"_index":443,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["public\".\"payments_payment_method_type_enum",{"_index":77,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["public\".\"payments_status_enum",{"_index":83,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["public\".\"payments_status_enum_old",{"_index":94,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["public\".\"requests_status_enum",{"_index":459,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["public\".\"trips_status_enum",{"_index":481,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["purposes",{"_index":1233,"title":{},"body":{"index.html":{}}}],["queryrunner",{"_index":26,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["queryrunner.query",{"_index":44,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["queryrunner.query(`alter",{"_index":38,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["queryrunner.query(`create",{"_index":76,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["queryrunner.query(`drop",{"_index":93,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["rate",{"_index":1356,"title":{},"body":{"properties.html":{}}}],["ratelimiting",{"_index":222,"title":{"interfaces/RateLimiting.html":{}},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"interfaces/RateLimiting.html":{},"coverage.html":{}}}],["rating",{"_index":419,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/FinishRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["read",{"_index":1332,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":552,"title":{},"body":{"injectables/DriverService.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["redirecturl",{"_index":630,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{}}}],["reference",{"_index":631,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["reference.interface.ts",{"_index":621,"title":{},"body":{"interfaces/GeneratePaymentReference.html":{},"coverage.html":{}}}],["referenceid",{"_index":1037,"title":{},"body":{"injectables/RequestService.html":{}}}],["references",{"_index":50,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["reflect",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["rel_213969006cff7948380b959504",{"_index":491,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["rel_6c5633e5a6d5635831cbc96bef",{"_index":125,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["rel_a796178a3fa8c222d6bb8b65c5",{"_index":126,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["rel_bd02a6beaa5c282445abc4b350",{"_index":163,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["rel_f8ab7c11057c69afa8746f7924",{"_index":490,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["related",{"_index":993,"title":{},"body":{"injectables/RequestService.html":{}}}],["relatedtrip",{"_index":1019,"title":{},"body":{"injectables/RequestService.html":{}}}],["relations",{"_index":1135,"title":{},"body":{"injectables/TripService.html":{}}}],["rename",{"_index":84,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["renamenamecolumninriderstable.ts",{"_index":860,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{},"coverage.html":{}}}],["renamenamecolumninriderstable.ts:10",{"_index":862,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["renamenamecolumninriderstable.ts:4",{"_index":861,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["renamenamecolumninriderstable.ts:6",{"_index":863,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["renamenamecolumninriderstable1678186681233",{"_index":858,"title":{"classes/RenameNameColumnInRidersTable1678186681233.html":{}},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{},"coverage.html":{}}}],["repository",{"_index":541,"title":{},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["request",{"_index":612,"title":{"entities/Request.html":{}},"body":{"classes/FinishRideDto.html":{},"entities/Location.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["request.dropofflocation",{"_index":671,"title":{},"body":{"entities/Location.html":{},"injectables/RequestService.html":{}}}],["request.estimatedfare",{"_index":1011,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.pickuplocation",{"_index":673,"title":{},"body":{"entities/Location.html":{},"injectables/RequestService.html":{}}}],["request.rider",{"_index":1009,"title":{},"body":{"injectables/RequestService.html":{},"entities/Rider.html":{}}}],["request.trip",{"_index":1108,"title":{},"body":{"entities/Trip.html":{},"injectables/TripService.html":{}}}],["request/request.module",{"_index":213,"title":{},"body":{"modules/ApiModule.html":{}}}],["request_id",{"_index":488,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["requestcontroller",{"_index":900,"title":{"controllers/RequestController.html":{}},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{},"coverage.html":{}}}],["requestdropofflocation",{"_index":661,"title":{},"body":{"entities/Location.html":{}}}],["requestmodule",{"_index":206,"title":{"modules/RequestModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/RequestModule.html":{},"modules.html":{},"overview.html":{}}}],["requestpickuplocation",{"_index":662,"title":{},"body":{"entities/Location.html":{}}}],["requestridedto",{"_index":702,"title":{"classes/RequestRideDto.html":{}},"body":{"classes/LocationDto.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requests",{"_index":98,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Rider.html":{},"index.html":{}}}],["requests\"(\"id",{"_index":494,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["requestservice",{"_index":937,"title":{"injectables/RequestService.html":{}},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"coverage.html":{},"overview.html":{}}}],["requeststatus",{"_index":883,"title":{},"body":{"entities/Request.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["requeststatus.accepted",{"_index":1026,"title":{},"body":{"injectables/RequestService.html":{}}}],["requeststatus.waiting",{"_index":899,"title":{},"body":{"entities/Request.html":{}}}],["required",{"_index":275,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["required'})@min(undefined",{"_index":686,"title":{},"body":{"classes/LocationDto.html":{}}}],["requirements",{"_index":1240,"title":{},"body":{"index.html":{}}}],["reset",{"_index":208,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"overview.html":{}}}],["resource",{"_index":916,"title":{},"body":{"controllers/RequestController.html":{}}}],["respectively",{"_index":1270,"title":{},"body":{"index.html":{}}}],["response",{"_index":730,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{}}}],["response?.data?.data?.id",{"_index":817,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["response?.data?.data?.presigned_acceptance?.acceptance_token",{"_index":795,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["response?.data?.routes?.[0",{"_index":732,"title":{},"body":{"classes/MapBox.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":389,"title":{},"body":{"modules/ConfigModule.html":{},"injectables/DriverService.html":{},"controllers/HealthController.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"controllers/HealthController.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["ride",{"_index":903,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"index.html":{},"properties.html":{}}}],["ride')@apioperation({summary",{"_index":906,"title":{},"body":{"controllers/RequestController.html":{}}}],["ride'})@apicreatedresponse({description",{"_index":908,"title":{},"body":{"controllers/RequestController.html":{}}}],["ride(@body",{"_index":969,"title":{},"body":{"controllers/RequestController.html":{}}}],["ride(payload",{"_index":920,"title":{},"body":{"controllers/RequestController.html":{}}}],["ride.dto",{"_index":613,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts",{"_index":576,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"coverage.html":{}}}],["ride.dto.ts:14",{"_index":604,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts:24",{"_index":583,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts:27",{"_index":689,"title":{},"body":{"classes/LocationDto.html":{}}}],["ride.dto.ts:45",{"_index":594,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts:50",{"_index":693,"title":{},"body":{"classes/LocationDto.html":{}}}],["ride.dto.ts:62",{"_index":697,"title":{},"body":{"classes/LocationDto.html":{}}}],["ride.dto.ts:63",{"_index":596,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts:74",{"_index":981,"title":{},"body":{"classes/RequestRideDto.html":{}}}],["ride.dto.ts:84",{"_index":980,"title":{},"body":{"classes/RequestRideDto.html":{}}}],["ride.dto.ts:93",{"_index":982,"title":{},"body":{"classes/RequestRideDto.html":{}}}],["ride_hailing_app",{"_index":1290,"title":{},"body":{"index.html":{}}}],["ride_hailing_database",{"_index":1291,"title":{},"body":{"index.html":{}}}],["ridepropertiestoupdate",{"_index":1035,"title":{},"body":{"injectables/RequestService.html":{}}}],["rider",{"_index":530,"title":{"entities/Rider.html":{}},"body":{"entities/Driver.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"index.html":{}}}],["rider.entity",{"_index":531,"title":{},"body":{"entities/Driver.html":{}}}],["rider.requests",{"_index":878,"title":{},"body":{"entities/Request.html":{}}}],["rider.service",{"_index":996,"title":{},"body":{"injectables/RequestService.html":{}}}],["rider_id",{"_index":67,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/CreateRequestsTable1678216032691.html":{},"entities/Request.html":{}}}],["rider_id'})@transform",{"_index":880,"title":{},"body":{"entities/Request.html":{}}}],["rider_rating",{"_index":486,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["riderid",{"_index":706,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{}}}],["riderrating",{"_index":578,"title":{},"body":{"classes/FinishRideDto.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["riderrepository",{"_index":1076,"title":{},"body":{"injectables/RiderService.html":{}}}],["riders",{"_index":472,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["riders\"(\"id",{"_index":69,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["riderservice",{"_index":976,"title":{"injectables/RiderService.html":{}},"body":{"modules/RequestModule.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"coverage.html":{},"overview.html":{}}}],["rider})@manytoone(undefined",{"_index":877,"title":{},"body":{"entities/Request.html":{}}}],["rodriguez",{"_index":1339,"title":{},"body":{"index.html":{},"properties.html":{}}}],["run",{"_index":1273,"title":{},"body":{"index.html":{}}}],["running",{"_index":1228,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":1042,"title":{},"body":{"injectables/RequestService.html":{}}}],["scale",{"_index":742,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{}}}],["schema",{"_index":911,"title":{},"body":{"controllers/RequestController.html":{}}}],["section",{"_index":1283,"title":{},"body":{"index.html":{}}}],["see",{"_index":1234,"title":{},"body":{"index.html":{}}}],["seeders",{"_index":1320,"title":{},"body":{"index.html":{}}}],["separated",{"_index":716,"title":{},"body":{"classes/MapBox.html":{}}}],["server",{"_index":967,"title":{},"body":{"controllers/RequestController.html":{}}}],["service",{"_index":1220,"title":{},"body":{"index.html":{},"properties.html":{}}}],["services",{"_index":938,"title":{},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{}}}],["setup",{"_index":1258,"title":{},"body":{"index.html":{}}}],["singleline",{"_index":382,"title":{},"body":{"modules/ConfigModule.html":{}}}],["skip",{"_index":1321,"title":{},"body":{"index.html":{}}}],["small",{"_index":1219,"title":{},"body":{"index.html":{},"properties.html":{}}}],["smallint",{"_index":277,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["software",{"_index":1244,"title":{},"body":{"index.html":{}}}],["something",{"_index":913,"title":{},"body":{"controllers/RequestController.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"index.html":{}}}],["specific",{"_index":961,"title":{},"body":{"controllers/RequestController.html":{}}}],["sponsors",{"_index":1328,"title":{},"body":{"index.html":{}}}],["src/.../card",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../generate",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../payment",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../request",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../trip",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../trip.helper.ts",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api.module.ts",{"_index":210,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/api/commons/enums/card",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/commons/enums/payment",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/commons/enums/request",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/commons/enums/trip",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/commons/helpers/generate",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/api/commons/helpers/trip.helper.ts",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/api/commons/interfaces/trip",{"_index":511,"title":{},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"coverage.html":{}}}],["src/api/libs/interfaces/generate",{"_index":625,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"coverage.html":{}}}],["src/api/libs/interfaces/map",{"_index":637,"title":{},"body":{"interfaces/GetDirection.html":{},"coverage.html":{}}}],["src/api/libs/interfaces/tokenize",{"_index":1080,"title":{},"body":{"interfaces/TokenizeCard.html":{},"coverage.html":{}}}],["src/api/libs/map",{"_index":708,"title":{},"body":{"classes/MapBox.html":{},"coverage.html":{}}}],["src/api/libs/payment",{"_index":767,"title":{},"body":{"classes/PaymentGateway.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/request/controllers/request.controller.ts",{"_index":901,"title":{},"body":{"controllers/RequestController.html":{},"coverage.html":{}}}],["src/api/request/controllers/request.controller.ts:123",{"_index":919,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/api/request/controllers/request.controller.ts:66",{"_index":926,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/api/request/dto/finish",{"_index":575,"title":{},"body":{"classes/FinishRideDto.html":{},"coverage.html":{}}}],["src/api/request/dto/request",{"_index":682,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"coverage.html":{}}}],["src/api/request/entities/request.entity.ts",{"_index":864,"title":{},"body":{"entities/Request.html":{},"coverage.html":{}}}],["src/api/request/entities/request.entity.ts:20",{"_index":876,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:29",{"_index":870,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:41",{"_index":887,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:50",{"_index":882,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:63",{"_index":874,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:75",{"_index":884,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/interfaces/generate",{"_index":619,"title":{},"body":{"interfaces/GeneratePaymentReference.html":{},"coverage.html":{}}}],["src/api/request/request.module.ts",{"_index":978,"title":{},"body":{"modules/RequestModule.html":{}}}],["src/api/request/services/driver.service.ts",{"_index":536,"title":{},"body":{"injectables/DriverService.html":{},"coverage.html":{}}}],["src/api/request/services/driver.service.ts:14",{"_index":544,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/api/request/services/driver.service.ts:24",{"_index":546,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/api/request/services/driver.service.ts:8",{"_index":542,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/api/request/services/payment.service.ts",{"_index":836,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/api/request/services/payment.service.ts:11",{"_index":839,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/api/request/services/payment.service.ts:17",{"_index":842,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/api/request/services/request.service.ts",{"_index":983,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/api/request/services/request.service.ts:19",{"_index":987,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/api/request/services/request.service.ts:35",{"_index":990,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/api/request/services/request.service.ts:81",{"_index":988,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/api/request/services/rider.service.ts",{"_index":1073,"title":{},"body":{"injectables/RiderService.html":{},"coverage.html":{}}}],["src/api/request/services/rider.service.ts:14",{"_index":1077,"title":{},"body":{"injectables/RiderService.html":{}}}],["src/api/request/services/rider.service.ts:8",{"_index":1075,"title":{},"body":{"injectables/RiderService.html":{}}}],["src/api/request/services/trip.service.ts",{"_index":1121,"title":{},"body":{"injectables/TripService.html":{},"coverage.html":{}}}],["src/api/request/services/trip.service.ts:10",{"_index":1124,"title":{},"body":{"injectables/TripService.html":{}}}],["src/api/request/services/trip.service.ts:17",{"_index":1127,"title":{},"body":{"injectables/TripService.html":{}}}],["src/api/request/services/trip.service.ts:29",{"_index":1128,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app.module.ts",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/config.module.ts",{"_index":316,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config/interfaces/app",{"_index":217,"title":{},"body":{"interfaces/AppConfig.html":{},"coverage.html":{}}}],["src/config/interfaces/database",{"_index":498,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["src/config/interfaces/http.interface.ts",{"_index":659,"title":{},"body":{"interfaces/Http.html":{},"coverage.html":{}}}],["src/config/interfaces/rate",{"_index":856,"title":{},"body":{"interfaces/RateLimiting.html":{},"coverage.html":{}}}],["src/database/config/typeorm.config.ts",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":505,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/entities/base.entity.ts",{"_index":241,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["src/database/entities/base.entity.ts:11",{"_index":248,"title":{},"body":{"classes/Base.html":{}}}],["src/database/entities/base.entity.ts:17",{"_index":257,"title":{},"body":{"classes/Base.html":{}}}],["src/database/entities/base.entity.ts:23",{"_index":251,"title":{},"body":{"classes/Base.html":{}}}],["src/database/entities/base.entity.ts:6",{"_index":253,"title":{},"body":{"classes/Base.html":{}}}],["src/database/entities/car.entity.ts",{"_index":267,"title":{},"body":{"entities/Car.html":{},"coverage.html":{}}}],["src/database/entities/car.entity.ts:19",{"_index":293,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:29",{"_index":294,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:40",{"_index":301,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:51",{"_index":278,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:63",{"_index":282,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:67",{"_index":287,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:70",{"_index":299,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/driver.entity.ts",{"_index":516,"title":{},"body":{"entities/Driver.html":{},"coverage.html":{}}}],["src/database/entities/driver.entity.ts:19",{"_index":526,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/driver.entity.ts:31",{"_index":521,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/driver.entity.ts:43",{"_index":523,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/driver.entity.ts:46",{"_index":520,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/driver.entity.ts:49",{"_index":528,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/location.entity.ts",{"_index":660,"title":{},"body":{"entities/Location.html":{},"coverage.html":{}}}],["src/database/entities/location.entity.ts:16",{"_index":668,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:24",{"_index":670,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:35",{"_index":678,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:38",{"_index":674,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:41",{"_index":672,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:44",{"_index":666,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/payment.entity.ts",{"_index":737,"title":{},"body":{"entities/Payment.html":{},"coverage.html":{}}}],["src/database/entities/payment.entity.ts:14",{"_index":760,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:24",{"_index":744,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:36",{"_index":752,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:47",{"_index":751,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:61",{"_index":748,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:70",{"_index":758,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/rider.entity.ts",{"_index":1052,"title":{},"body":{"entities/Rider.html":{},"coverage.html":{}}}],["src/database/entities/rider.entity.ts:19",{"_index":1058,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:32",{"_index":1060,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:42",{"_index":1056,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:55",{"_index":1064,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:66",{"_index":1066,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:69",{"_index":1067,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/trip.entity.ts",{"_index":1085,"title":{},"body":{"entities/Trip.html":{},"coverage.html":{}}}],["src/database/entities/trip.entity.ts:110",{"_index":1114,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:120",{"_index":1107,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:21",{"_index":1109,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:31",{"_index":1113,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:43",{"_index":1100,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:54",{"_index":1104,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:64",{"_index":1094,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:74",{"_index":1091,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:86",{"_index":1110,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:98",{"_index":1097,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/migrations/1678182352019",{"_index":467,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{},"coverage.html":{}}}],["src/database/migrations/1678182431069",{"_index":427,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"coverage.html":{}}}],["src/database/migrations/1678185095471",{"_index":438,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"coverage.html":{}}}],["src/database/migrations/1678185298028",{"_index":61,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"coverage.html":{}}}],["src/database/migrations/1678186681233",{"_index":859,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{},"coverage.html":{}}}],["src/database/migrations/1678187115666",{"_index":407,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"coverage.html":{}}}],["src/database/migrations/1678187456870",{"_index":398,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{},"coverage.html":{}}}],["src/database/migrations/1678187764454",{"_index":6,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"coverage.html":{}}}],["src/database/migrations/1678216032691",{"_index":454,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"coverage.html":{}}}],["src/database/migrations/1678218041445",{"_index":476,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"coverage.html":{}}}],["src/database/migrations/1678221796470",{"_index":177,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"coverage.html":{}}}],["src/database/migrations/1678223295357",{"_index":157,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"coverage.html":{}}}],["src/database/migrations/1678223649061",{"_index":116,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"coverage.html":{}}}],["src/database/migrations/1678276720338",{"_index":143,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"coverage.html":{}}}],["src/database/migrations/1678280557690",{"_index":149,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"coverage.html":{}}}],["src/database/migrations/1678285496704",{"_index":137,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"coverage.html":{}}}],["src/database/migrations/1678290428231",{"_index":171,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"coverage.html":{}}}],["src/database/migrations/1678294718551",{"_index":569,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"coverage.html":{}}}],["src/database/migrations/1678295934312",{"_index":71,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"coverage.html":{}}}],["src/database/migrations/1678308519422",{"_index":106,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"coverage.html":{}}}],["src/health/controllers/health.controller.ts",{"_index":641,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/controllers/health.controller.ts:12",{"_index":645,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":657,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ssl",{"_index":501,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"index.html":{}}}],["start",{"_index":1274,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1277,"title":{},"body":{"index.html":{}}}],["start:prodrunning",{"_index":1278,"title":{},"body":{"index.html":{}}}],["start_time",{"_index":485,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["started",{"_index":1111,"title":{"index.html":{}},"body":{"entities/Trip.html":{},"index.html":{}}}],["startride",{"_index":984,"title":{},"body":{"injectables/RequestService.html":{}}}],["startride(payload",{"_index":989,"title":{},"body":{"injectables/RequestService.html":{}}}],["starttime",{"_index":893,"title":{},"body":{"entities/Request.html":{},"entities/Trip.html":{}}}],["statements",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":710,"title":{},"body":{"classes/MapBox.html":{}}}],["status",{"_index":90,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["status\"::\"text\"::\"public\".\"payments_status_enum",{"_index":92,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["status\"::\"text\"::\"public\".\"payments_status_enum_old",{"_index":103,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["status.enum.ts",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":959,"title":{},"body":{"controllers/RequestController.html":{}}}],["stay",{"_index":1335,"title":{},"body":{"index.html":{}}}],["straight",{"_index":1307,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"interfaces/PaymentMethod.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["string})@column({type",{"_index":290,"title":{},"body":{"entities/Car.html":{},"entities/Rider.html":{}}}],["style",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfully",{"_index":925,"title":{},"body":{"controllers/RequestController.html":{}}}],["summary",{"_index":943,"title":{},"body":{"controllers/RequestController.html":{}}}],["support",{"_index":1323,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surge",{"_index":154,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["svg",{"_index":1343,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1294,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1239,"title":{},"body":{"index.html":{}}}],["tab",{"_index":1296,"title":{},"body":{"index.html":{}}}],["table",{"_index":39,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":379,"title":{},"body":{"modules/ConfigModule.html":{}}}],["terminusmodule",{"_index":658,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1311,"title":{},"body":{"index.html":{}}}],["test/#readme",{"_index":1360,"title":{},"body":{"properties.html":{}}}],["test/issues",{"_index":1362,"title":{},"body":{"properties.html":{}}}],["test:covcompodoc",{"_index":1316,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1315,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1232,"title":{},"body":{"index.html":{}}}],["testing').default('development",{"_index":347,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tests",{"_index":1313,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1327,"title":{},"body":{"index.html":{}}}],["that'll",{"_index":992,"title":{},"body":{"injectables/RequestService.html":{}}}],["things",{"_index":1241,"title":{},"body":{"index.html":{}}}],["this.axios",{"_index":786,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.axios.get(`${gatewayendpoints.merchants}/${process.env.gateway_public_key",{"_index":794,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.axios.post(gatewayendpoints.cards",{"_index":807,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.axios.post(gatewayendpoints.transactions",{"_index":822,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.datasource.transaction(async",{"_index":1014,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.db.pingcheck('database",{"_index":656,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.driverrepository.find",{"_index":553,"title":{},"body":{"injectables/DriverService.html":{}}}],["this.driverrepository.findone",{"_index":564,"title":{},"body":{"injectables/DriverService.html":{}}}],["this.driverservice.getfirstdriver",{"_index":1131,"title":{},"body":{"injectables/TripService.html":{}}}],["this.firstname",{"_index":1071,"title":{},"body":{"entities/Rider.html":{}}}],["this.generateacceptancetoken",{"_index":821,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.health.check",{"_index":655,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.lastname",{"_index":1072,"title":{},"body":{"entities/Rider.html":{}}}],["this.logger.error(`something",{"_index":797,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.logger.error(error",{"_index":1028,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.paymentrepository.save(payment",{"_index":855,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentservice.generatepayment",{"_index":1045,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestservice.finishride(payload",{"_index":973,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.startride(payload",{"_index":971,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.riderrepository.findone",{"_index":1079,"title":{},"body":{"injectables/RiderService.html":{}}}],["this.riderservice.getonebyidorfail(riderid",{"_index":1010,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.triprepository.findone",{"_index":1134,"title":{},"body":{"injectables/TripService.html":{}}}],["this.tripservice.generatebasetrip(incomingrequest",{"_index":1020,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.tripservice.getonebyidorfail(tripid",{"_index":1030,"title":{},"body":{"injectables/RequestService.html":{}}}],["throttlerguard",{"_index":326,"title":{},"body":{"modules/ConfigModule.html":{}}}],["throttlermodule",{"_index":325,"title":{},"body":{"modules/ConfigModule.html":{}}}],["throttlermodule.forrootasync",{"_index":391,"title":{},"body":{"modules/ConfigModule.html":{}}}],["throw",{"_index":555,"title":{},"body":{"injectables/DriverService.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["time",{"_index":196,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["timeout",{"_index":386,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Http.html":{}}}],["timestamp",{"_index":186,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["timestamptz",{"_index":1099,"title":{},"body":{"entities/Trip.html":{}}}],["tip",{"_index":191,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{}}}],["token",{"_index":635,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["tokenize_card_cvc",{"_index":368,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenize_card_exp_month",{"_index":369,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenize_card_exp_year",{"_index":370,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenize_card_holder",{"_index":371,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenize_card_number",{"_index":366,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenizecard",{"_index":223,"title":{"interfaces/TokenizeCard.html":{}},"body":{"interfaces/AppConfig.html":{},"classes/PaymentGateway.html":{},"interfaces/TokenizeCard.html":{},"coverage.html":{}}}],["tokenizedcard",{"_index":1038,"title":{},"body":{"injectables/RequestService.html":{}}}],["tokenizing",{"_index":819,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["tokens/cards",{"_index":783,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{}}}],["touch",{"_index":1336,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":755,"title":{},"body":{"entities/Payment.html":{},"injectables/RequestService.html":{}}}],["transaction.interface.ts",{"_index":626,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"coverage.html":{}}}],["transaction_id",{"_index":111,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"entities/Payment.html":{}}}],["transactionid",{"_index":623,"title":{},"body":{"interfaces/GeneratePaymentReference.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{}}}],["transactions",{"_index":785,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"properties.html":{}}}],["transform",{"_index":888,"title":{},"body":{"entities/Request.html":{},"entities/Trip.html":{}}}],["transformer",{"_index":614,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"dependencies.html":{}}}],["transformfaretocurrency",{"_index":889,"title":{},"body":{"entities/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformfaretocurrency(value",{"_index":897,"title":{},"body":{"entities/Request.html":{}}}],["transport",{"_index":378,"title":{},"body":{"modules/ConfigModule.html":{}}}],["trip",{"_index":295,"title":{"entities/Trip.html":{}},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["trip'})@apicreatedresponse({description",{"_index":923,"title":{},"body":{"controllers/RequestController.html":{}}}],["trip.car",{"_index":297,"title":{},"body":{"entities/Car.html":{},"injectables/TripService.html":{}}}],["trip.driver",{"_index":527,"title":{},"body":{"entities/Driver.html":{},"injectables/TripService.html":{}}}],["trip.entity",{"_index":309,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{}}}],["trip.finallocation",{"_index":665,"title":{},"body":{"entities/Location.html":{}}}],["trip.payment",{"_index":759,"title":{},"body":{"entities/Payment.html":{}}}],["trip.request",{"_index":892,"title":{},"body":{"entities/Request.html":{},"injectables/TripService.html":{}}}],["trip.request)@transform",{"_index":886,"title":{},"body":{"entities/Request.html":{}}}],["trip.service",{"_index":997,"title":{},"body":{"injectables/RequestService.html":{}}}],["trip.starttime",{"_index":1133,"title":{},"body":{"injectables/TripService.html":{}}}],["trip_id",{"_index":164,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["tripfinalfare",{"_index":1034,"title":{},"body":{"injectables/RequestService.html":{}}}],["tripid",{"_index":579,"title":{},"body":{"classes/FinishRideDto.html":{},"injectables/RequestService.html":{}}}],["triprepository",{"_index":1125,"title":{},"body":{"injectables/TripService.html":{}}}],["trips",{"_index":95,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"entities/Car.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["trips\"(\"id",{"_index":169,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["tripservice",{"_index":977,"title":{"injectables/TripService.html":{}},"body":{"modules/RequestModule.html":{},"injectables/RequestService.html":{},"injectables/TripService.html":{},"coverage.html":{},"overview.html":{}}}],["tripstatus",{"_index":999,"title":{},"body":{"injectables/RequestService.html":{},"entities/Trip.html":{},"miscellaneous/enumerations.html":{}}}],["tripstatus.completed",{"_index":1047,"title":{},"body":{"injectables/RequestService.html":{}}}],["tripstatus.in_progress",{"_index":1120,"title":{},"body":{"entities/Trip.html":{}}}],["trip})@onetoone(undefined",{"_index":885,"title":{},"body":{"entities/Request.html":{}}}],["true",{"_index":256,"title":{},"body":{"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["true})@column({name",{"_index":757,"title":{},"body":{"entities/Payment.html":{}}}],["true})@isnumber",{"_index":684,"title":{},"body":{"classes/LocationDto.html":{}}}],["true})@isuuid('4",{"_index":602,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/RequestRideDto.html":{}}}],["true})@joincolumn({name",{"_index":879,"title":{},"body":{"entities/Request.html":{}}}],["true})@transform",{"_index":1103,"title":{},"body":{"entities/Trip.html":{}}}],["true})@validatenested()@type(undefined)@isdefined()@isnotemptyobject",{"_index":582,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/RequestRideDto.html":{}}}],["try",{"_index":560,"title":{},"body":{"injectables/DriverService.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["ttl",{"_index":392,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/RateLimiting.html":{}}}],["two",{"_index":714,"title":{},"body":{"classes/MapBox.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"interfaces/AppConfig.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":35,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Location.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"dependencies.html":{},"properties.html":{}}}],["typeormhealthindicator",{"_index":648,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":506,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RequestModule.html":{}}}],["typeormmodule.forfeature([driver",{"_index":979,"title":{},"body":{"modules/RequestModule.html":{}}}],["typeormmodule.forrootasync",{"_index":509,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":745,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":912,"title":{},"body":{"controllers/RequestController.html":{}}}],["undefined})@apiinternalservererrorresponse({description",{"_index":917,"title":{},"body":{"controllers/RequestController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":915,"title":{},"body":{"controllers/RequestController.html":{}}}],["undefined})@column({type",{"_index":750,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["undefined})@useinterceptors(classserializerinterceptor",{"_index":918,"title":{},"body":{"controllers/RequestController.html":{}}}],["unique",{"_index":129,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Rider.html":{}}}],["unit",{"_index":1312,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1363,"title":{},"body":{"properties.html":{}}}],["up",{"_index":17,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"index.html":{}}}],["up(queryrunner",{"_index":32,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["update",{"_index":54,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"injectables/RequestService.html":{}}}],["updateat",{"_index":244,"title":{},"body":{"classes/Base.html":{},"controllers/RequestController.html":{}}}],["updated_at",{"_index":188,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["updatedatecolumn",{"_index":260,"title":{},"body":{"classes/Base.html":{}}}],["updatedatecolumn({name",{"_index":254,"title":{},"body":{"classes/Base.html":{}}}],["uq_04caa31b8581b77d274c1180c0c",{"_index":128,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["uq_79746ad153ee98938ff06104438",{"_index":166,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["uq_9610d35d5d21db627101427b7e5",{"_index":131,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["uq_d4cfc1aafe3a14622aee390edb2",{"_index":424,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["uq_ed6e8eb2542a3c7c1742f9c2b54",{"_index":473,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["url",{"_index":1297,"title":{},"body":{"index.html":{}}}],["use",{"_index":1255,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":396,"title":{},"body":{"modules/ConfigModule.html":{}}}],["used",{"_index":1087,"title":{},"body":{"entities/Trip.html":{}}}],["usefactory",{"_index":384,"title":{},"body":{"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{}}}],["useinterceptors",{"_index":930,"title":{},"body":{"controllers/RequestController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":968,"title":{},"body":{"controllers/RequestController.html":{}}}],["username",{"_index":502,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":91,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"injectables/RequestService.html":{},"index.html":{}}}],["uuid",{"_index":43,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["uuid.helper.ts",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uuid_generate_v4",{"_index":184,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["v",{"_index":1280,"title":{},"body":{"index.html":{}}}],["valid",{"_index":603,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["validatenested",{"_index":611,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["validation",{"_index":962,"title":{},"body":{"controllers/RequestController.html":{}}}],["validationschema",{"_index":342,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validator",{"_index":263,"title":{},"body":{"classes/Base.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"dependencies.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/PaymentGateway.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.coordinates",{"_index":869,"title":{},"body":{"entities/Request.html":{},"entities/Trip.html":{}}}],["value.fullname",{"_index":881,"title":{},"body":{"entities/Request.html":{}}}],["value?.finallocation?.coordinates",{"_index":896,"title":{},"body":{"entities/Request.html":{}}}],["value?.starttime",{"_index":894,"title":{},"body":{"entities/Request.html":{}}}],["varchar",{"_index":279,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Rider.html":{}}}],["variable",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1262,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":113,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRidersTable1678182352019.html":{}}}],["varying(100",{"_index":403,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["varying(150",{"_index":414,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreateRidersTable1678182352019.html":{}}}],["varying(250",{"_index":418,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{}}}],["varying(50",{"_index":404,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{}}}],["version",{"_index":1252,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visa",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["waiting",{"_index":463,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"miscellaneous/enumerations.html":{}}}],["watch",{"_index":1275,"title":{},"body":{"index.html":{}}}],["well",{"_index":1268,"title":{},"body":{"index.html":{}}}],["went",{"_index":798,"title":{},"body":{"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["wrong",{"_index":799,"title":{},"body":{"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["year",{"_index":273,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["you'd",{"_index":1331,"title":{},"body":{"index.html":{}}}],["zip",{"_index":675,"title":{},"body":{"entities/Location.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["zip_code",{"_index":435,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"entities/Location.html":{}}}],["zipcode",{"_index":663,"title":{},"body":{"entities/Location.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["zone",{"_index":197,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["zoom",{"_index":207,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddRelationBetweenDriversAndCars1678187764454.html":{"url":"classes/AddRelationBetweenDriversAndCars1678187764454.html","title":"class - AddRelationBetweenDriversAndCars1678187764454","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRelationBetweenDriversAndCars1678187764454\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddRelationBetweenDriversAndCars1678187764454'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddRelationBetweenDriversAndCars1678187764454 implements MigrationInterface {\n  name = 'AddRelationBetweenDriversAndCars1678187764454';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"cars\" ADD \"driver_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"cars\" ADD CONSTRAINT \"FK_1403195e3b80cf083352758adb0\" FOREIGN KEY (\"driver_id\") REFERENCES \"drivers\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"cars\" DROP CONSTRAINT \"FK_1403195e3b80cf083352758adb0\"`);\n    await queryRunner.query(`ALTER TABLE \"cars\" DROP COLUMN \"driver_id\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{"url":"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html","title":"class - AddRelationBetweenRidersAndPaymentMethods1678185298028","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRelationBetweenRidersAndPaymentMethods1678185298028\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddRelationBetweenRidersAndPaymentMethods1678185298028'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddRelationBetweenRidersAndPaymentMethods1678185298028 implements MigrationInterface {\n  name = 'AddRelationBetweenRidersAndPaymentMethods1678185298028';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payment_methods\" ADD \"rider_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"payment_methods\" ADD CONSTRAINT \"FK_cc669ad722640e54bb5c56972c6\" FOREIGN KEY (\"rider_id\") REFERENCES \"riders\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payment_methods\" DROP CONSTRAINT \"FK_cc669ad722640e54bb5c56972c6\"`);\n    await queryRunner.query(`ALTER TABLE \"payment_methods\" DROP COLUMN \"rider_id\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{"url":"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html","title":"class - AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312 implements MigrationInterface {\n  name = 'AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"payments_payment_method_type_enum\" AS ENUM('CASH', 'CREDIT_CARD', 'PSE')`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD \"payment_method_type\" \"public\".\"payments_payment_method_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"payments_status_enum\" RENAME TO \"payments_status_enum_old\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"payments_status_enum\" AS ENUM('PENDING', 'APPROVED', 'DECLINED', 'ERROR')`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE \"public\".\"payments_status_enum\" USING \"status\"::\"text\"::\"public\".\"payments_status_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payments_status_enum_old\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"payments_status_enum_old\" AS ENUM('APPROVED', 'DECLINED', 'ERROR')`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE \"public\".\"payments_status_enum_old\" USING \"status\"::\"text\"::\"public\".\"payments_status_enum_old\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payments_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"payments_status_enum_old\" RENAME TO \"payments_status_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP COLUMN \"payment_method_type\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payments_payment_method_type_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{"url":"classes/AlterPaymentsTableToAddTransactionId1678308519422.html","title":"class - AlterPaymentsTableToAddTransactionId1678308519422","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterPaymentsTableToAddTransactionId1678308519422\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterPaymentsTableToAddTransactionId1678308519422'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterPaymentsTableToAddTransactionId1678308519422 implements MigrationInterface {\n  name = 'AlterPaymentsTableToAddTransactionId1678308519422';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD \"transaction_id\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP COLUMN \"transaction_id\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{"url":"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html","title":"class - AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061 implements MigrationInterface {\n  name = 'AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_6c5633e5a6d5635831cbc96bef6\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_a796178a3fa8c222d6bb8b65c54\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_213969006cff7948380b9595044\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"final_location\" TO \"final_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"REL_6c5633e5a6d5635831cbc96bef\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"pickup_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"REL_a796178a3fa8c222d6bb8b65c5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"dropoff_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"pickup_location_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"UQ_04caa31b8581b77d274c1180c0c\" UNIQUE (\"pickup_location_id\")`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"dropoff_location_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"UQ_9610d35d5d21db627101427b7e5\" UNIQUE (\"dropoff_location_id\")`);\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_04caa31b8581b77d274c1180c0c\" FOREIGN KEY (\"pickup_location_id\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_9610d35d5d21db627101427b7e5\" FOREIGN KEY (\"dropoff_location_id\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_839c2a9fd7fb004440b548b59f1\" FOREIGN KEY (\"final_location_id\") REFERENCES \"location\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_839c2a9fd7fb004440b548b59f1\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_9610d35d5d21db627101427b7e5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_04caa31b8581b77d274c1180c0c\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"UQ_9610d35d5d21db627101427b7e5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"dropoff_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"UQ_04caa31b8581b77d274c1180c0c\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"pickup_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"dropoff_location\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"REL_a796178a3fa8c222d6bb8b65c5\" UNIQUE (\"dropoff_location\")`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"pickup_location\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"REL_6c5633e5a6d5635831cbc96bef\" UNIQUE (\"pickup_location\")`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"final_location_id\" TO \"final_location\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_213969006cff7948380b9595044\" FOREIGN KEY (\"final_location\") REFERENCES \"location\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_a796178a3fa8c222d6bb8b65c54\" FOREIGN KEY (\"dropoff_location\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_6c5633e5a6d5635831cbc96bef6\" FOREIGN KEY (\"pickup_location\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{"url":"classes/AlterRequestTableToHandleGeometryFields1678285496704.html","title":"class - AlterRequestTableToHandleGeometryFields1678285496704","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterRequestTableToHandleGeometryFields1678285496704\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterRequestTableToHandleGeometryFields1678285496704'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterRequestTableToHandleGeometryFields1678285496704 implements MigrationInterface {\n  name = 'AlterRequestTableToHandleGeometryFields1678285496704';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{"url":"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html","title":"class - AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338 implements MigrationInterface {\n  name = 'AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_9610d35d5d21db627101427b7e5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_04caa31b8581b77d274c1180c0c\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"UQ_9610d35d5d21db627101427b7e5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"dropoff_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"UQ_04caa31b8581b77d274c1180c0c\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"pickup_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"pickup_location\" geometry NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"dropoff_location\" geometry NOT NULL`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"dropoff_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"pickup_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"pickup_location_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"UQ_04caa31b8581b77d274c1180c0c\" UNIQUE (\"pickup_location_id\")`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"dropoff_location_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"UQ_9610d35d5d21db627101427b7e5\" UNIQUE (\"dropoff_location_id\")`);\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_04caa31b8581b77d274c1180c0c\" FOREIGN KEY (\"pickup_location_id\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_9610d35d5d21db627101427b7e5\" FOREIGN KEY (\"dropoff_location_id\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{"url":"classes/AlterRequestTableToRemoveSurge1678280557690.html","title":"class - AlterRequestTableToRemoveSurge1678280557690","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterRequestTableToRemoveSurge1678280557690\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterRequestTableToRemoveSurge1678280557690'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterRequestTableToRemoveSurge1678280557690 implements MigrationInterface {\n  name = 'AlterRequestTableToRemoveSurge1678280557690';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"surge\"`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"surge\" numeric(10,2) NOT NULL`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{"url":"classes/AlterTripsTableToFixRelationIssues1678223295357.html","title":"class - AlterTripsTableToFixRelationIssues1678223295357","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterTripsTableToFixRelationIssues1678223295357\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterTripsTableToFixRelationIssues1678223295357'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterTripsTableToFixRelationIssues1678223295357 implements MigrationInterface {\n  name = 'AlterTripsTableToFixRelationIssues1678223295357';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"FK_bd02a6beaa5c282445abc4b3507\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"REL_bd02a6beaa5c282445abc4b350\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP COLUMN \"trip_id\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"payment_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD CONSTRAINT \"UQ_79746ad153ee98938ff06104438\" UNIQUE (\"payment_id\")`);\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_79746ad153ee98938ff06104438\" FOREIGN KEY (\"payment_id\") REFERENCES \"payments\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_79746ad153ee98938ff06104438\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"UQ_79746ad153ee98938ff06104438\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"payment_id\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD \"trip_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD CONSTRAINT \"REL_bd02a6beaa5c282445abc4b350\" UNIQUE (\"trip_id\")`);\n    await queryRunner.query(\n      `ALTER TABLE \"payments\" ADD CONSTRAINT \"FK_bd02a6beaa5c282445abc4b3507\" FOREIGN KEY (\"trip_id\") REFERENCES \"trips\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{"url":"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html","title":"class - AlterTripsTableToHandleGeolocationFields1678290428231","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterTripsTableToHandleGeolocationFields1678290428231\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterTripsTableToHandleGeolocationFields1678290428231'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterTripsTableToHandleGeolocationFields1678290428231 implements MigrationInterface {\n  name = 'AlterTripsTableToHandleGeolocationFields1678290428231';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_839c2a9fd7fb004440b548b59f1\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"final_location_id\" TO \"final_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"final_location\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"final_location\" geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"final_location\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"final_location\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"final_location\" TO \"final_location_id\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_839c2a9fd7fb004440b548b59f1\" FOREIGN KEY (\"final_location_id\") REFERENCES \"location\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterTripsTableToHandlePayments1678221796470.html":{"url":"classes/AlterTripsTableToHandlePayments1678221796470.html","title":"class - AlterTripsTableToHandlePayments1678221796470","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterTripsTableToHandlePayments1678221796470\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterTripsTableToHandlePayments1678221796470'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterTripsTableToHandlePayments1678221796470 implements MigrationInterface {\n  name = 'AlterTripsTableToHandlePayments1678221796470';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"payments_status_enum\" AS ENUM('APPROVED', 'DECLINED', 'ERROR')`);\n    await queryRunner.query(\n      `CREATE TABLE \"payments\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"fare\" numeric(10,2) NOT NULL, \"tip\" numeric(10,2), \"status\" \"public\".\"payments_status_enum\" NOT NULL, \"trip_id\" uuid, \"payment_method_id\" uuid, CONSTRAINT \"REL_bd02a6beaa5c282445abc4b350\" UNIQUE (\"trip_id\"), CONSTRAINT \"PK_197ab7af18c93fbb0c9b28b4a59\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"fare\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"end_time\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(\n      `ALTER TABLE \"payments\" ADD CONSTRAINT \"FK_bd02a6beaa5c282445abc4b3507\" FOREIGN KEY (\"trip_id\") REFERENCES \"trips\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"payments\" ADD CONSTRAINT \"FK_12fd861c33c885f01b9a7da7d93\" FOREIGN KEY (\"payment_method_id\") REFERENCES \"payment_methods\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"FK_12fd861c33c885f01b9a7da7d93\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"FK_bd02a6beaa5c282445abc4b3507\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"end_time\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"end_time\" numeric(10,2) NOT NULL`);\n    await queryRunner.query(`DROP TABLE \"payments\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payments_status_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"end_time\" TO \"fare\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nRequestModule->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RequestModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RequestModule } from './request/request.module';\n\n@Module({\n  imports: [RequestModule],\n})\nexport class ApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/app-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            http\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            rateLimiting\n                                        \n                                \n                                \n                                        \n                                            tokenizeCard\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:         DatabaseConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        http\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        http:         Http\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Http\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rateLimiting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rateLimiting:         RateLimiting\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RateLimiting\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenizeCard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenizeCard:         TokenizeCard\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TokenizeCard\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DatabaseConfig, RateLimiting, Http } from './';\nimport { TokenizeCard } from './../../api/libs/interfaces';\n\nexport interface AppConfig {\n  port: number;\n  database: DatabaseConfig;\n  rateLimiting: RateLimiting;\n  http: Http;\n  tokenizeCard: TokenizeCard;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ApiModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            HealthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n// App Modules\nimport { ApiModule } from './api';\nimport { ConfigModule } from './config';\nimport { DatabaseModule } from './database';\nimport { HealthModule } from './health';\n\n@Module({\n  imports: [ConfigModule, DatabaseModule, HealthModule, ApiModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updateAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/base.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/base.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/base.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/base.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, DeleteDateColumn } from 'typeorm';\nimport { IsOptional } from 'class-validator';\n\nexport class Base {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn({\n    name: 'created_at',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({\n    name: 'updated_at',\n    nullable: true,\n  })\n  updateAt?: Date;\n\n  @DeleteDateColumn({\n    name: 'deleted_at',\n  })\n  @IsOptional()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Car.html":{"url":"entities/Car.html","title":"entity - Car","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Car\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/car.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                capacity\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                driver\n                            \n                            \n                                licensePlate\n                            \n                            \n                                model\n                            \n                            \n                                trips\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Capacity', type: Number, required: false})@Column({type: 'smallint', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color', type: String, required: false})@Column({type: 'varchar', length: 50, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        driver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Driver\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, driver => driver.cars, {onDelete: 'CASCADE'})@JoinColumn({name: 'driver_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        licensePlate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'License Plate', type: String})@Column({type: 'varchar', length: 100, name: 'license_plate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Model', type: String})@Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, trip => trip.car, {onDelete: 'CASCADE', eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Year', type: Number, required: false})@Column({type: 'integer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, ManyToOne, JoinColumn, OneToMany } from 'typeorm';\n\nimport { Base } from './base.entity';\nimport { Driver } from './driver.entity';\nimport { Trip } from './trip.entity';\n\n@Entity('cars')\nexport class Car extends Base {\n  @ApiProperty({\n    description: 'License Plate',\n    type: String,\n  })\n  @Column({\n    type: 'varchar',\n    length: 100,\n    name: 'license_plate',\n  })\n  licensePlate: string;\n\n  @ApiProperty({\n    description: 'Model',\n    type: String,\n  })\n  @Column({\n    type: 'varchar',\n    length: 100,\n  })\n  model: string;\n\n  @ApiProperty({\n    description: 'Year',\n    type: Number,\n    required: false,\n  })\n  @Column({\n    type: 'integer',\n    nullable: true,\n  })\n  year?: number;\n\n  @ApiProperty({\n    description: 'Capacity',\n    type: Number,\n    required: false,\n  })\n  @Column({\n    type: 'smallint',\n    nullable: true,\n  })\n  capacity?: number;\n\n  @ApiProperty({\n    description: 'Color',\n    type: String,\n    required: false,\n  })\n  @Column({\n    type: 'varchar',\n    length: 50,\n    nullable: true,\n  })\n  color?: string;\n\n  @ManyToOne(() => Driver, driver => driver.cars, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'driver_id' })\n  driver: Driver;\n\n  @OneToMany(() => Trip, trip => trip.car, { onDelete: 'CASCADE', eager: true })\n  trips: Trip[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigModule \n\nConfigModule \n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule  -->\n\nConfigModule->ConfigModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_GUARD } from '@nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigService, ConfigModule as CoreConfigModule } from '@nestjs/config';\nimport { HttpModule } from '@nestjs/axios';\nimport { ThrottlerModule, ThrottlerGuard } from '@nestjs/throttler';\nimport { LoggerModule } from 'nestjs-pino';\nimport { join } from 'path';\nimport * as Joi from 'joi';\n\nimport appConfig from './app.config';\nimport { Http, RateLimiting } from './interfaces';\n\n@Module({\n  imports: [\n    CoreConfigModule.forRoot({\n      isGlobal: true,\n      cache: true,\n      load: [appConfig],\n      envFilePath: join(__dirname, '../..', '.env'),\n      validationSchema: Joi.object({\n        NODE_ENV: Joi.string().valid('development', 'production', 'testing').default('development'),\n        PORT: Joi.number().default(3000),\n        DATABASE_NAME: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_PORT: Joi.number().default(5432),\n        DATABASE_SSL: Joi.boolean().default(false),\n        DATABASE_USERNAME: Joi.string().required(),\n        MAP_BOX_BASE_URL: Joi.string().required(),\n        MAP_BOX_ACCESS_TOKEN: Joi.string().required(),\n        PGADMIN_DEFAULT_EMAIL: Joi.string().required(),\n        PGADMIN_DEFAULT_PASSWORD: Joi.string().required(),\n        GATEWAY_BASE_URL: Joi.string().required(),\n        GATEWAY_SECRET_KEY: Joi.string().required(),\n        GATEWAY_PUBLIC_KEY: Joi.string().required(),\n        GATEWAY_ACCEPTANCE_TOKEN: Joi.string().required(),\n        TOKENIZE_CARD_NUMBER: Joi.number().required(),\n        TOKENIZE_CARD_CVC: Joi.number().required(),\n        TOKENIZE_CARD_EXP_MONTH: Joi.number().required(),\n        TOKENIZE_CARD_EXP_YEAR: Joi.number().required(),\n        TOKENIZE_CARD_HOLDER: Joi.string().required(),\n      }),\n    }),\n    LoggerModule.forRoot({\n      pinoHttp: {\n        customProps: (_req, _res) => ({\n          context: 'HTTP',\n        }),\n        transport: {\n          target: 'pino-pretty',\n          options: {\n            singleLine: true,\n          },\n        },\n      },\n    }),\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        const { timeout, maxRedirects } = configService.get('http') as Http;\n\n        return {\n          timeout,\n          maxRedirects,\n        };\n      },\n      inject: [ConfigService],\n    }),\n    ThrottlerModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        const { ttl, limit } = configService.get('rateLimiting') as RateLimiting;\n\n        return {\n          ttl,\n          limit,\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n  exports: [ConfigModule],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCarsTable1678187456870.html":{"url":"classes/CreateCarsTable1678187456870.html","title":"class - CreateCarsTable1678187456870","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCarsTable1678187456870\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678187456870-CreateCarsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateCarsTable1678187456870'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678187456870-CreateCarsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187456870-CreateCarsTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187456870-CreateCarsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateCarsTable1678187456870 implements MigrationInterface {\n  name = 'CreateCarsTable1678187456870';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"cars\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"license_plate\" character varying(100) NOT NULL, \"model\" character varying(100) NOT NULL, \"year\" integer, \"capacity\" smallint, \"color\" character varying(50), CONSTRAINT \"PK_fc218aa84e79b477d55322271b6\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"cars\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDriversTable1678187115666.html":{"url":"classes/CreateDriversTable1678187115666.html","title":"class - CreateDriversTable1678187115666","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDriversTable1678187115666\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678187115666-CreateDriversTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateDriversTable1678187115666'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678187115666-CreateDriversTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187115666-CreateDriversTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187115666-CreateDriversTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateDriversTable1678187115666 implements MigrationInterface {\n  name = 'CreateDriversTable1678187115666';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"drivers\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"first_name\" character varying(150) NOT NULL, \"last_name\" character varying(150), \"email\" character varying NOT NULL, \"phone_number\" character varying(250), \"rating\" smallint, \"joined_date\" TIMESTAMP, \"dni\" character varying(50), \"is_banned\" boolean NOT NULL DEFAULT false, CONSTRAINT \"UQ_d4cfc1aafe3a14622aee390edb2\" UNIQUE (\"email\"), CONSTRAINT \"PK_92ab3fb69e566d3eb0cae896047\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"drivers\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocationsTable1678182431069.html":{"url":"classes/CreateLocationsTable1678182431069.html","title":"class - CreateLocationsTable1678182431069","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocationsTable1678182431069\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678182431069-CreateLocationsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateLocationsTable1678182431069'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678182431069-CreateLocationsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678182431069-CreateLocationsTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678182431069-CreateLocationsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateLocationsTable1678182431069 implements MigrationInterface {\n  name = 'CreateLocationsTable1678182431069';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"location\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"latitude\" character varying NOT NULL, \"longitude\" character varying NOT NULL, \"zip_code\" character varying(150), CONSTRAINT \"PK_876d7bdba03c72251ec4c2dc827\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"location\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentMethodsTable1678185095471.html":{"url":"classes/CreatePaymentMethodsTable1678185095471.html","title":"class - CreatePaymentMethodsTable1678185095471","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentMethodsTable1678185095471\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreatePaymentMethodsTable1678185095471'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreatePaymentMethodsTable1678185095471 implements MigrationInterface {\n  name = 'CreatePaymentMethodsTable1678185095471';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"payment_methods_method_enum\" AS ENUM('CASH', 'CREDIT_CARD', 'PSE')`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"payment_methods_card_type_enum\" AS ENUM('VISA', 'MASTERCARD', 'AMERICAN_EXPRESS')`);\n    await queryRunner.query(\n      `CREATE TABLE \"payment_methods\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"method\" \"public\".\"payment_methods_method_enum\" NOT NULL, \"card_holder_name\" character varying, \"card_type\" \"public\".\"payment_methods_card_type_enum\", \"card_expiration_date\" date, CONSTRAINT \"PK_34f9b8c6dfb4ac3559f7e2820d1\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"payment_methods\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payment_methods_card_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payment_methods_method_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRequestsTable1678216032691.html":{"url":"classes/CreateRequestsTable1678216032691.html","title":"class - CreateRequestsTable1678216032691","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRequestsTable1678216032691\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678216032691-CreateRequestsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateRequestsTable1678216032691'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678216032691-CreateRequestsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678216032691-CreateRequestsTable.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678216032691-CreateRequestsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateRequestsTable1678216032691 implements MigrationInterface {\n  name = 'CreateRequestsTable1678216032691';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"requests_status_enum\" AS ENUM('WAITING', 'ACCEPTED')`);\n    await queryRunner.query(\n      `CREATE TABLE \"requests\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"estimated_fare\" numeric(10,2) NOT NULL, \"surge\" numeric(10,2) NOT NULL, \"status\" \"public\".\"requests_status_enum\" NOT NULL DEFAULT 'WAITING', \"pickup_location\" uuid, \"dropoff_location\" uuid, \"rider_id\" uuid, CONSTRAINT \"REL_6c5633e5a6d5635831cbc96bef\" UNIQUE (\"pickup_location\"), CONSTRAINT \"REL_a796178a3fa8c222d6bb8b65c5\" UNIQUE (\"dropoff_location\"), CONSTRAINT \"PK_0428f484e96f9e6a55955f29b5f\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_6c5633e5a6d5635831cbc96bef6\" FOREIGN KEY (\"pickup_location\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_a796178a3fa8c222d6bb8b65c54\" FOREIGN KEY (\"dropoff_location\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_db5f71a072c7bfefc58670b358e\" FOREIGN KEY (\"rider_id\") REFERENCES \"riders\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_db5f71a072c7bfefc58670b358e\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_a796178a3fa8c222d6bb8b65c54\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_6c5633e5a6d5635831cbc96bef6\"`);\n    await queryRunner.query(`DROP TABLE \"requests\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"requests_status_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRidersTable1678182352019.html":{"url":"classes/CreateRidersTable1678182352019.html","title":"class - CreateRidersTable1678182352019","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRidersTable1678182352019\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678182352019-CreateRidersTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateRidersTable1678182352019'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678182352019-CreateRidersTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678182352019-CreateRidersTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678182352019-CreateRidersTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateRidersTable1678182352019 implements MigrationInterface {\n  name = 'CreateRidersTable1678182352019';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"riders\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"name\" character varying(150) NOT NULL, \"last_name\" character varying(150), \"email\" character varying NOT NULL, \"phone_number\" character varying(250), \"rating\" smallint, CONSTRAINT \"UQ_ed6e8eb2542a3c7c1742f9c2b54\" UNIQUE (\"email\"), CONSTRAINT \"PK_6c17e67f760677500c29d68e689\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"riders\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTripsTable1678218041445.html":{"url":"classes/CreateTripsTable1678218041445.html","title":"class - CreateTripsTable1678218041445","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTripsTable1678218041445\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678218041445-CreateTripsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateTripsTable1678218041445'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678218041445-CreateTripsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678218041445-CreateTripsTable.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678218041445-CreateTripsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateTripsTable1678218041445 implements MigrationInterface {\n  name = 'CreateTripsTable1678218041445';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"trips_status_enum\" AS ENUM('COMPLETED', 'IN_PROGRESS', 'PAYMENT_PENDING')`);\n    await queryRunner.query(\n      `CREATE TABLE \"trips\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"start_time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"fare\" numeric(10,2) NOT NULL, \"rider_rating\" smallint, \"driver_rating\" smallint, \"status\" \"public\".\"trips_status_enum\" NOT NULL DEFAULT 'IN_PROGRESS', \"request_id\" uuid, \"final_location\" uuid, \"driver_id\" uuid, \"car_id\" uuid, CONSTRAINT \"REL_f8ab7c11057c69afa8746f7924\" UNIQUE (\"request_id\"), CONSTRAINT \"REL_213969006cff7948380b959504\" UNIQUE (\"final_location\"), CONSTRAINT \"PK_f71c231dee9c05a9522f9e840f5\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_f8ab7c11057c69afa8746f79245\" FOREIGN KEY (\"request_id\") REFERENCES \"requests\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_213969006cff7948380b9595044\" FOREIGN KEY (\"final_location\") REFERENCES \"location\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_44d36110fb38f45c2f15c946ddb\" FOREIGN KEY (\"driver_id\") REFERENCES \"drivers\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_dfea9f5c01666a915e9eb1aca5b\" FOREIGN KEY (\"car_id\") REFERENCES \"cars\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_dfea9f5c01666a915e9eb1aca5b\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_44d36110fb38f45c2f15c946ddb\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_213969006cff7948380b9595044\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_f8ab7c11057c69afa8746f79245\"`);\n    await queryRunner.query(`DROP TABLE \"trips\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"trips_status_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseConfig.html":{"url":"interfaces/DatabaseConfig.html","title":"interface - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/database-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            ssl\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ssl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ssl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DatabaseConfig {\n  database: string;\n  host: string;\n  password: string;\n  port: number;\n  ssl: boolean;\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nDatabaseModule \n\nDatabaseModule \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseModule  -->\n\nDatabaseModule->DatabaseModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { CONNECTION_OPTIONS } from './config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      useFactory: () => ({ ...CONNECTION_OPTIONS }),\n    }),\n  ],\n  exports: [DatabaseModule],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistanceToKilometers.html":{"url":"interfaces/DistanceToKilometers.html","title":"interface - DistanceToKilometers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DistanceToKilometers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/commons/interfaces/trip-helper.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            distance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DistanceToKilometers {\n  distance: number;\n}\n\nexport interface DurationToMinutes {\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Driver.html":{"url":"entities/Driver.html","title":"entity - Driver","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Driver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/driver.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cars\n                            \n                            \n                                    Optional\n                                dni\n                            \n                            \n                                    Optional\n                                isBanned\n                            \n                            \n                                    Optional\n                                joinedDate\n                            \n                            \n                                trips\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Car[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, car => car.driver, {nullable: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dni\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Driver DNI', type: String, required: false})@Column({type: 'varchar', length: 50, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isBanned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Driver Has Been Banned', type: Boolean, required: false})@Column({type: 'boolean', default: false, name: 'is_banned'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Driver Joined Date', type: Date, required: false})@Column({name: 'joined_date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, trip => trip.driver, {nullable: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, OneToMany } from 'typeorm';\n\nimport { Car } from './car.entity';\nimport { Rider } from './rider.entity';\nimport { Trip } from './trip.entity';\n\n@Entity('drivers')\nexport class Driver extends Rider {\n  @ApiProperty({\n    description: 'Driver Joined Date',\n    type: Date,\n    required: false,\n  })\n  @Column({\n    name: 'joined_date',\n    nullable: true,\n  })\n  joinedDate?: Date;\n\n  @ApiProperty({\n    description: 'Driver DNI',\n    type: String,\n    required: false,\n  })\n  @Column({\n    type: 'varchar',\n    length: 50,\n    nullable: true,\n  })\n  dni?: string;\n\n  @ApiProperty({\n    description: 'Driver Has Been Banned',\n    type: Boolean,\n    required: false,\n  })\n  @Column({\n    type: 'boolean',\n    default: false,\n    name: 'is_banned',\n  })\n  isBanned?: boolean;\n\n  @OneToMany(() => Car, car => car.driver, { nullable: true, eager: true })\n  cars: Car[];\n\n  @OneToMany(() => Trip, trip => trip.driver, { nullable: true, eager: true })\n  trips: Trip[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DriverService.html":{"url":"injectables/DriverService.html","title":"injectable - DriverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DriverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/driver.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFirstDriver\n                            \n                            \n                                    Async\n                                getOneByIdOrFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(driverRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/driver.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        driverRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFirstDriver\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstDriver()\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/driver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOneByIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneByIdOrFail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/driver.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Driver } from '../../../database/entities';\n\n@Injectable()\nexport class DriverService {\n  constructor(\n    @InjectRepository(Driver)\n    private readonly driverRepository: Repository,\n  ) {}\n\n  async getFirstDriver(): Promise {\n    const drivers = await this.driverRepository.find();\n\n    if (!drivers.length) {\n      throw new NotFoundException('There are no drivers available, please try creating new ones!');\n    }\n\n    return drivers[0];\n  }\n\n  async getOneByIdOrFail(id: string): Promise {\n    const driver = await this.driverRepository.findOne({\n      where: {\n        id,\n      },\n    });\n\n    if (!driver) {\n      throw new NotFoundException('The driver you are looking for does not exists!');\n    }\n\n    return driver;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{"url":"classes/DropPaymentMethodTableAndRelations1678294718551.html","title":"class - DropPaymentMethodTableAndRelations1678294718551","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropPaymentMethodTableAndRelations1678294718551\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DropPaymentMethodTableAndRelations1678294718551'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class DropPaymentMethodTableAndRelations1678294718551 implements MigrationInterface {\n  name = 'DropPaymentMethodTableAndRelations1678294718551';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"FK_12fd861c33c885f01b9a7da7d93\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP COLUMN \"payment_method_id\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD \"payment_method_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"payments\" ADD CONSTRAINT \"FK_12fd861c33c885f01b9a7da7d93\" FOREIGN KEY (\"payment_method_id\") REFERENCES \"payment_methods\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DurationToMinutes.html":{"url":"interfaces/DurationToMinutes.html","title":"interface - DurationToMinutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DurationToMinutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/commons/interfaces/trip-helper.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            duration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DistanceToKilometers {\n  distance: number;\n}\n\nexport interface DurationToMinutes {\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FinishRideDto.html":{"url":"classes/FinishRideDto.html","title":"class - FinishRideDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FinishRideDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/dto/finish-ride.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                finalLocation\n                            \n                            \n                                    Readonly\n                                    Optional\n                                riderRating\n                            \n                            \n                                    Readonly\n                                    Optional\n                                tip\n                            \n                            \n                                    Readonly\n                                tripId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        finalLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Pickup Location', required: true})@ValidateNested()@Type(undefined)@IsDefined()@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/finish-ride.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        riderRating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Rating', type: 'number', example: '5', required: false})@IsNumber({}, {message: 'Rider Rating should be a number'})@IsOptional()@Min(0, {message: 'Rider Rating should be greater than or equal to 0'})@Max(10, {message: 'Rider Rating should be less than or equal to 10'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/finish-ride.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        tip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tip', type: 'number', example: '5', required: false})@IsNumber({}, {message: 'Tip should be a number'})@IsOptional()@Min(0, {message: 'Tip should be greater than or equal to 0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/finish-ride.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tripId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip ID', example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F', type: 'string', required: true})@IsUUID('4', {message: 'Trip ID must be a valid UUID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/finish-ride.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmptyObject, IsNumber, IsOptional, IsUUID, Max, Min, ValidateNested } from 'class-validator';\nimport { LocationDto } from './request-ride.dto';\nimport { Type } from 'class-transformer';\n\nexport class FinishRideDto {\n  @ApiProperty({\n    description: 'Trip ID',\n    example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F',\n    type: 'string',\n    required: true,\n  })\n  @IsUUID('4', { message: 'Trip ID must be a valid UUID' })\n  readonly tripId: string;\n\n  @ApiProperty({\n    description: 'Rider Pickup Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly finalLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider Rating',\n    type: 'number',\n    example: '5',\n    required: false,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Rider Rating should be a number',\n    },\n  )\n  @IsOptional()\n  @Min(0, {\n    message: 'Rider Rating should be greater than or equal to 0',\n  })\n  @Max(10, {\n    message: 'Rider Rating should be less than or equal to 10',\n  })\n  readonly riderRating?: number;\n\n  @ApiProperty({\n    description: 'Tip',\n    type: 'number',\n    example: '5',\n    required: false,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Tip should be a number',\n    },\n  )\n  @IsOptional()\n  @Min(0, {\n    message: 'Tip should be greater than or equal to 0',\n  })\n  readonly tip?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeneratePaymentReference.html":{"url":"interfaces/GeneratePaymentReference.html","title":"interface - GeneratePaymentReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GeneratePaymentReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/interfaces/generate-payment-reference.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fare\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            persist\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transactionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fare\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fare:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        persist:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GeneratePaymentReference {\n  fare: number;\n  id?: string;\n  persist?: boolean;\n  tip?: number;\n  transactionId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenerateTransaction.html":{"url":"interfaces/GenerateTransaction.html","title":"interface - GenerateTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GenerateTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/interfaces/generate-transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amountInCents\n                                        \n                                \n                                \n                                        \n                                            customerEmail\n                                        \n                                \n                                \n                                        \n                                            paymentMethod\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            redirectUrl\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amountInCents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amountInCents:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customerEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customerEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymentMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymentMethod:         PaymentMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface PaymentMethod {\n  type: 'CARD' | 'NEQUI';\n  installments: number;\n  token: string;\n}\n\nexport interface GenerateTransaction {\n  amountInCents: number;\n  customerEmail: string;\n  paymentMethod: PaymentMethod;\n  redirectUrl?: string;\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetDirection.html":{"url":"interfaces/GetDirection.html","title":"interface - GetDirection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetDirection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/interfaces/map-box.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            distance\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetDirection {\n  distance: number;\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/controllers/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/controllers/health.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\nimport { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, TypeOrmHealthIndicator, HealthCheck } from '@nestjs/terminus';\n\n@ApiTags('health')\n@Controller('health')\nexport class HealthController {\n  constructor(private health: HealthCheckService, private db: TypeOrmHealthIndicator) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\n\nimport { HealthController } from './controllers';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Http.html":{"url":"interfaces/Http.html","title":"interface - Http","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Http\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/http.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            maxRedirects\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxRedirects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRedirects:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Http {\n  timeout: number;\n  maxRedirects: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Location.html":{"url":"entities/Location.html","title":"entity - Location","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/location.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                finalLocation\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                requestDropOffLocation\n                            \n                            \n                                requestPickUpLocation\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        finalLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, trip => trip.finalLocation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location Latitude'})@Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location Longitude'})@Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestDropOffLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, request => request.dropOffLocation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestPickUpLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, request => request.pickUpLocation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location Zip Code'})@Column({length: 150, name: 'zip_code', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, OneToOne } from 'typeorm';\n\nimport { Base } from './base.entity';\nimport { Trip } from './trip.entity';\nimport { Request } from '../../api/request/entities';\n\n@Entity()\nexport class Location extends Base {\n  @ApiProperty({\n    description: 'Location Latitude',\n  })\n  @Column({\n    type: 'varchar',\n  })\n  latitude: string;\n\n  @ApiProperty({\n    description: 'Location Longitude',\n  })\n  @Column({\n    type: 'varchar',\n  })\n  longitude: string;\n\n  @ApiProperty({\n    description: 'Location Zip Code',\n  })\n  @Column({\n    length: 150,\n    name: 'zip_code',\n    nullable: true,\n    type: 'varchar',\n  })\n  zipCode?: string;\n\n  @OneToOne(() => Request, request => request.pickUpLocation)\n  requestPickUpLocation: Request;\n\n  @OneToOne(() => Request, request => request.dropOffLocation)\n  requestDropOffLocation: Request;\n\n  @OneToOne(() => Trip, trip => trip.finalLocation)\n  finalLocation: Trip;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocationDto.html":{"url":"classes/LocationDto.html","title":"class - LocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/dto/request-ride.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                latitude\n                            \n                            \n                                    Readonly\n                                longitude\n                            \n                            \n                                    Readonly\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Latitude', type: 'number', example: '23.6573', required: true})@IsNumber({}, {message: 'Latitude should be a number'})@IsNotEmpty({message: 'Latitude is required'})@Min(undefined, {message: 'Latitude should be greater than or equal to -90'})@Max(90, {message: 'Latitude should be less than or equal to 90'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Longitude', type: 'number', example: '77.6573', required: true})@IsNumber({}, {message: 'Longitude should be a number'})@IsNotEmpty({message: 'Longitude is required'})@Min(undefined, {message: 'Longitude should be greater than or equal to -180'})@Max(180, {message: 'Longitude should be less than or equal to 180'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location Zip Code', example: '401821', type: 'string', required: false})@IsOptional()@Length(2, 6, {message: 'Zip Code should be less than or equal to 6'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmpty, IsNotEmptyObject, IsNumber, IsUUID, Max, Min, ValidateNested, IsOptional, Length } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class LocationDto {\n  @ApiProperty({\n    description: 'Latitude',\n    type: 'number',\n    example: '23.6573',\n    required: true,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Latitude should be a number',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Latitude is required',\n  })\n  @Min(-90, {\n    message: 'Latitude should be greater than or equal to -90',\n  })\n  @Max(90, {\n    message: 'Latitude should be less than or equal to 90',\n  })\n  readonly latitude: number;\n\n  @ApiProperty({\n    description: 'Longitude',\n    type: 'number',\n    example: '77.6573',\n    required: true,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Longitude should be a number',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Longitude is required',\n  })\n  @Min(-180, {\n    message: 'Longitude should be greater than or equal to -180',\n  })\n  @Max(180, {\n    message: 'Longitude should be less than or equal to 180',\n  })\n  readonly longitude: number;\n\n  @ApiProperty({\n    description: 'Location Zip Code',\n    example: '401821',\n    type: 'string',\n    required: false,\n  })\n  @IsOptional()\n  @Length(2, 6, {\n    message: 'Zip Code should be less than or equal to 6',\n  })\n  readonly zipCode: string;\n}\n\nexport class RequestRideDto {\n  @ApiProperty({\n    description: 'Rider Pickup Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly pickupLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider Dropoff Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly dropoffLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider ID',\n    example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F',\n    type: 'string',\n    required: true,\n  })\n  @IsUUID('4', { message: 'Rider ID must be a valid UUID' })\n  readonly riderId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapBox.html":{"url":"classes/MapBox.html","title":"class - MapBox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapBox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/map-box.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                getDirection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getDirection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDirection(pickupLocation: string, dropoffLocation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/libs/map-box.lib.ts:16\n                \n            \n\n\n            \n                \n                    Return the distance and duration between two points\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pickupLocation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Latitude and Longitude separated by comma\n\n                                    \n                                \n                                \n                                    dropoffLocation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Latitude and Longitude separated by comma\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        {Promise}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { HttpStatusCode } from 'axios';\n\nimport { distanceToKilometers, durationToMinutes } from '../commons';\nimport { GetDirection } from './interfaces';\n\nexport class MapBox {\n  /**\n   * Return the distance and duration between two points\n   *\n   * @static\n   * @param {string} pickupLocation Latitude and Longitude separated by comma\n   * @param {string} dropoffLocation Latitude and Longitude separated by comma\n   * @return {*}  {Promise}\n   * @memberof MapBox\n   */\n  static async getDirection(pickupLocation: string, dropoffLocation: string): Promise {\n    try {\n      const axiosInstance = axios.create({\n        baseURL: process.env.MAP_BOX_BASE_URL,\n        params: {\n          access_token: process.env.MAP_BOX_ACCESS_TOKEN,\n        },\n      });\n\n      const response = await axiosInstance.get(`${pickupLocation};${dropoffLocation}`);\n      const { distance = 0, duration = 0 } = response?.data?.routes?.[0] ?? {};\n\n      return { distance: distanceToKilometers(Number(distance)), duration: durationToMinutes(Number(duration)) };\n    } catch (error) {\n      throw HttpStatusCode.Unauthorized;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Payment.html":{"url":"entities/Payment.html","title":"entity - Payment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/payment.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fare\n                            \n                            \n                                    Optional\n                                paymentMethodType\n                            \n                            \n                                status\n                            \n                            \n                                    Optional\n                                tip\n                            \n                            \n                                transactionId\n                            \n                            \n                                trip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fare\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Fare'})@Column({type: 'numeric', precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        paymentMethodType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Payment Method Type', required: false, example: undefined, enum: PaymentMethod})@Column({type: 'enum', name: 'payment_method_type', enum: PaymentMethod, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Status', enum: PaymentStatus, example: undefined})@Column({type: 'enum', enum: PaymentStatus})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Tip', required: false})@Column({type: 'numeric', precision: 10, scale: 2, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The external id generated by the transaction gateway', required: true})@Column({name: 'transaction_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, trip => trip.payment)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, OneToOne } from 'typeorm';\n\n// Entities\nimport { Base } from './base.entity';\nimport { Trip } from './trip.entity';\n\n// Enums\nimport { PaymentMethod, PaymentStatus } from './../../api/commons';\n\n@Entity('payments')\nexport class Payment extends Base {\n  @OneToOne(() => Trip, trip => trip.payment)\n  trip: Trip;\n\n  @ApiProperty({\n    description: 'Trip Fare',\n  })\n  @Column({\n    type: 'numeric',\n    precision: 10,\n    scale: 2,\n  })\n  fare: number;\n\n  @ApiProperty({\n    description: 'Trip Tip',\n    required: false,\n  })\n  @Column({\n    type: 'numeric',\n    precision: 10,\n    scale: 2,\n    nullable: true,\n  })\n  tip?: number;\n\n  @ApiProperty({\n    description: 'Trip Status',\n    enum: PaymentStatus,\n    example: Object.values(PaymentStatus),\n  })\n  @Column({\n    type: 'enum',\n    enum: PaymentStatus,\n  })\n  status: PaymentStatus;\n\n  @ApiProperty({\n    description: 'Payment Method Type',\n    required: false,\n    example: Object.values(PaymentMethod),\n    enum: PaymentMethod,\n  })\n  @Column({\n    type: 'enum',\n    name: 'payment_method_type',\n    enum: PaymentMethod,\n    nullable: true,\n  })\n  paymentMethodType?: PaymentMethod;\n\n  @ApiProperty({\n    description: 'The external id generated by the transaction gateway',\n    required: true,\n  })\n  @Column({\n    name: 'transaction_id',\n  })\n  transactionId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentGateway.html":{"url":"classes/PaymentGateway.html","title":"class - PaymentGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/payment-gateway.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                axios\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewTransaction\n                            \n                            \n                                    Async\n                                generateAcceptanceToken\n                            \n                            \n                                    Async\n                                tokenizeCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/api/libs/payment-gateway.lib.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        axios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxiosInstance\n\n                    \n                \n                    \n                        \n                                Defined in src/api/libs/payment-gateway.lib.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PaymentGateway.name)\n                    \n                \n                    \n                        \n                                Defined in src/api/libs/payment-gateway.lib.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createNewTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewTransaction(payload: GenerateTransaction)\n                \n            \n\n\n            \n                \n                    Defined in src/api/libs/payment-gateway.lib.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                GenerateTransaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateAcceptanceToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateAcceptanceToken()\n                \n            \n\n\n            \n                \n                    Defined in src/api/libs/payment-gateway.lib.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        tokenizeCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    tokenizeCard()\n                \n            \n\n\n            \n                \n                    Defined in src/api/libs/payment-gateway.lib.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosInstance } from 'axios';\n\nimport { GenerateTransaction } from './interfaces';\nimport { InternalServerErrorException, Logger } from '@nestjs/common';\n\nenum GatewayEndpoints {\n  CARDS = 'tokens/cards',\n  MERCHANTS = 'merchants',\n  TRANSACTIONS = 'transactions',\n}\n\nexport class PaymentGateway {\n  private logger = new Logger(PaymentGateway.name);\n  private axios: AxiosInstance;\n\n  constructor() {\n    this.axios = axios.create({\n      baseURL: process.env.GATEWAY_BASE_URL,\n      headers: {\n        Authorization: `Bearer ${process.env.GATEWAY_PUBLIC_KEY}`,\n        'Content-Type': 'application/json',\n      },\n    });\n  }\n\n  async generateAcceptanceToken(): Promise {\n    try {\n      const response = await this.axios.get(`${GatewayEndpoints.MERCHANTS}/${process.env.GATEWAY_PUBLIC_KEY}`);\n\n      return response?.data?.data?.presigned_acceptance?.acceptance_token ?? 'no_token';\n    } catch (error) {\n      this.logger.error(`Something went wrong generation the acceptance token. Details: ${error?.response?.data?.message ?? error}`);\n\n      throw new InternalServerErrorException('Something went wrong generating the acceptance token for the merchant');\n    }\n  }\n\n  async tokenizeCard(): Promise {\n    try {\n      const response = await this.axios.post(GatewayEndpoints.CARDS, {\n        number: process.env.TOKENIZE_CARD_NUMBER,\n        cvc: process.env.TOKENIZE_CARD_CVC,\n        exp_month: process.env.TOKENIZE_CARD_EXP_MONTH,\n        exp_year: process.env.TOKENIZE_CARD_EXP_YEAR,\n        card_holder: process.env.TOKENIZE_CARD_HOLDER,\n      });\n\n      return response?.data?.data?.id ?? 'cannot_create_token';\n    } catch (error) {\n      this.logger.error(`Something went wrong tokenizing the card. Details: ${error?.response?.data?.message ?? error}`);\n\n      throw new InternalServerErrorException('Something went wrong tokenizing the card');\n    }\n  }\n\n  async createNewTransaction(payload: GenerateTransaction): Promise {\n    try {\n      const acceptanceToken = await this.generateAcceptanceToken();\n      const response = await this.axios.post(GatewayEndpoints.TRANSACTIONS, {\n        acceptance_token: acceptanceToken,\n        amount_in_cents: payload.amountInCents * 100,\n        currency: 'COP',\n        customer_email: payload.customerEmail,\n        reference: payload.reference,\n        payment_method: payload.paymentMethod,\n      });\n\n      return response?.data?.data?.id ?? 'invalid_transaction_id';\n    } catch (error) {\n      this.logger.error(`Something went wrong tokenizing the card. Details: ${error?.response?.data?.message ?? error}`);\n\n      throw new InternalServerErrorException('Something went wrong creating your payment, please try again!');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaymentMethod.html":{"url":"interfaces/PaymentMethod.html","title":"interface - PaymentMethod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaymentMethod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/interfaces/generate-transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            installments\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        installments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        installments:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"CARD\" | \"NEQUI\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"CARD\" | \"NEQUI\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface PaymentMethod {\n  type: 'CARD' | 'NEQUI';\n  installments: number;\n  token: string;\n}\n\nexport interface GenerateTransaction {\n  amountInCents: number;\n  customerEmail: string;\n  paymentMethod: PaymentMethod;\n  redirectUrl?: string;\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generatePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/payment.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generatePayment\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePayment(payload: GeneratePaymentReference)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/payment.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                GeneratePaymentReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Payment } from '../../../database/entities';\nimport { PaymentMethod, PaymentStatus } from './../../commons/enums';\nimport { generateUuid } from './../../commons/helpers';\nimport { GeneratePaymentReference } from './../interfaces';\n\n@Injectable()\nexport class PaymentService {\n  constructor(\n    @InjectRepository(Payment)\n    private readonly paymentRepository: Repository,\n  ) {}\n\n  async generatePayment(payload: GeneratePaymentReference): Promise {\n    const payment = new Payment();\n    const { fare, id = generateUuid(), tip = 0, persist = false, transactionId = id } = payload;\n\n    payment.id = id;\n    payment.fare = fare;\n    payment.tip = tip;\n    payment.status = PaymentStatus.PENDING;\n    payment.paymentMethodType = PaymentMethod.CREDIT_CARD;\n    payment.transactionId = transactionId;\n\n    if (persist) {\n      await this.paymentRepository.save(payment);\n    }\n\n    return payment;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RateLimiting.html":{"url":"interfaces/RateLimiting.html","title":"interface - RateLimiting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RateLimiting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/rate-limiting.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            limit\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RateLimiting {\n  ttl: number;\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameNameColumnInRidersTable1678186681233.html":{"url":"classes/RenameNameColumnInRidersTable1678186681233.html","title":"class - RenameNameColumnInRidersTable1678186681233","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameNameColumnInRidersTable1678186681233\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameNameColumnInRidersTable1678186681233'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameNameColumnInRidersTable1678186681233 implements MigrationInterface {\n  name = 'RenameNameColumnInRidersTable1678186681233';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"riders\" RENAME COLUMN \"name\" TO \"first_name\"`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"riders\" RENAME COLUMN \"first_name\" TO \"name\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Request.html":{"url":"entities/Request.html","title":"entity - Request","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/entities/request.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dropOffLocation\n                            \n                            \n                                estimatedFare\n                            \n                            \n                                pickUpLocation\n                            \n                            \n                                rider\n                            \n                            \n                                status\n                            \n                            \n                                trip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dropOffLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pickup location'})@Column('geometry', {name: 'dropoff_location'})@Transform( => value.coordinates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        estimatedFare\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Request Estimated Fare', type: Number})@Column({type: 'numeric', name: 'estimated_fare', precision: 10, scale: 2})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickUpLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pickup location'})@Column('geometry', {name: 'pickup_location'})@Transform( => value.coordinates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Details', type: Rider})@ManyToOne(undefined, rider => rider.requests, {onDelete: 'CASCADE', eager: true})@JoinColumn({name: 'rider_id'})@Transform( => value.fullName)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Request Status', enum: RequestStatus, example: undefined})@Column({type: 'enum', enum: RequestStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Details', type: Trip})@OneToOne(undefined, trip => trip.request)@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, ManyToOne, OneToOne, JoinColumn, Point } from 'typeorm';\nimport { Transform } from 'class-transformer';\n\n// Entities\nimport { Base, Rider, Trip } from '../../../database/entities';\n\n// Enums\nimport { RequestStatus, transformFareToCurrency } from './../../commons';\n\n@Entity('requests')\nexport class Request extends Base {\n  @ApiProperty({\n    description: 'Pickup location',\n  })\n  @Column('geometry', {\n    name: 'pickup_location',\n  })\n  @Transform(({ value }) => value.coordinates)\n  pickUpLocation: Point;\n\n  @ApiProperty({\n    description: 'Pickup location',\n  })\n  @Column('geometry', {\n    name: 'dropoff_location',\n  })\n  @Transform(({ value }) => value.coordinates)\n  dropOffLocation: Point;\n\n  @ApiProperty({\n    description: 'Trip Details',\n    type: Trip,\n  })\n  @OneToOne(() => Trip, trip => trip.request)\n  @Transform(({ value }) => ({\n    startTime: value?.startTime,\n    endTime: value?.startTime,\n    finalLocation: value?.finalLocation?.coordinates,\n  }))\n  trip: Trip;\n\n  @ApiProperty({\n    description: 'Rider Details',\n    type: Rider,\n  })\n  @ManyToOne(() => Rider, rider => rider.requests, { onDelete: 'CASCADE', eager: true })\n  @JoinColumn({ name: 'rider_id' })\n  @Transform(({ value }) => value.fullName)\n  rider: Rider;\n\n  @ApiProperty({\n    description: 'Request Estimated Fare',\n    type: Number,\n  })\n  @Column({\n    type: 'numeric',\n    name: 'estimated_fare',\n    precision: 10,\n    scale: 2,\n  })\n  @Transform(({ value }) => transformFareToCurrency(value))\n  estimatedFare: number;\n\n  @ApiProperty({\n    description: 'Request Status',\n    enum: RequestStatus,\n    example: Object.values(RequestStatus),\n  })\n  @Column({\n    type: 'enum',\n    enum: RequestStatus,\n    default: RequestStatus.WAITING,\n  })\n  status: RequestStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RequestController.html":{"url":"controllers/RequestController.html","title":"controller - RequestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RequestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/controllers/request.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                request\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                finishRide\n                            \n                            \n                                    Async\n                                ride\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        finishRide\n                        \n                    \n                \n            \n            \n                \n                    \n                    finishRide(payload: FinishRideDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('finish-ride')@ApiOperation({summary: 'Driver request to finish a ride'})@ApiCreatedResponse({description: 'Ride has been finished and you have a new charge.', schema: undefined})@ApiBadRequestResponse({description: 'Something went wrong with your input!', schema: undefined})@ApiNotFoundResponse({description: 'The resource you are looking for does not exists!', schema: undefined})@ApiInternalServerErrorResponse({description: 'Something went wrong with your request, please try again!', schema: undefined})@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/api/request/controllers/request.controller.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                FinishRideDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ride\n                        \n                    \n                \n            \n            \n                \n                    \n                    ride(payload: RequestRideDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('ride')@ApiOperation({summary: 'Request a ride to generate a trip'})@ApiCreatedResponse({description: 'Ride has been created successfully.', schema: undefined})@ApiBadRequestResponse({description: 'Something went wrong with your input!', schema: undefined})@ApiNotFoundResponse({description: 'The resource you are looking for does not exists!', schema: undefined})@ApiInternalServerErrorResponse({description: 'Something went wrong with your request, please try again!', schema: undefined})@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/api/request/controllers/request.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RequestRideDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Post, UseInterceptors } from '@nestjs/common';\nimport { ApiOperation, ApiCreatedResponse, ApiTags, ApiBadRequestResponse, ApiNotFoundResponse, ApiInternalServerErrorResponse } from '@nestjs/swagger';\n\nimport { Request } from '../entities';\nimport { FinishRideDto, RequestRideDto } from '../dto';\nimport { RequestService } from './../services';\nimport { RequestStatus } from './../../commons/enums';\nimport { Trip } from './../../../database/entities/trip.entity';\n\n@ApiTags('request')\n@Controller('request')\nexport class RequestController {\n  constructor(private readonly requestService: RequestService) {}\n\n  @Post('ride')\n  @ApiOperation({\n    summary: 'Request a ride to generate a trip',\n  })\n  @ApiCreatedResponse({\n    description: 'Ride has been created successfully.',\n    schema: {\n      example: {\n        pickUpLocation: [-75.604705, 6.158212],\n        dropOffLocation: [-75.590211, 6.2567865],\n        rider: 'John Doe',\n        estimatedFare: '$ 23.540,00',\n        updateAt: '2023-03-08T19:35:32.441Z',\n        deletedAt: null,\n        id: 'fdef43a2-aea4-4d05-b584-31a46e86ee63',\n        createdAt: '2023-03-08T19:35:32.441Z',\n        status: RequestStatus,\n      },\n    },\n  })\n  @ApiBadRequestResponse({\n    description: 'Something went wrong with your input!',\n    schema: {\n      example: {\n        statusCode: 400,\n        message: ['The specific validation message'],\n        error: 'Bad Request',\n      },\n    },\n  })\n  @ApiNotFoundResponse({\n    description: 'The resource you are looking for does not exists!',\n    schema: {\n      example: {\n        statusCode: 404,\n        message: 'The entity you are looking for does not exists!',\n        error: 'Not Found',\n      },\n    },\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong with your request, please try again!',\n    schema: {\n      example: {\n        statusCode: 500,\n        message: 'Something went wrong with your request, please try again!',\n        error: 'Server error',\n      },\n    },\n  })\n  @UseInterceptors(ClassSerializerInterceptor)\n  async ride(@Body() payload: RequestRideDto): Promise {\n    const newRide = await this.requestService.startRide(payload);\n\n    return newRide;\n  }\n\n  @Post('finish-ride')\n  @ApiOperation({\n    summary: 'Driver request to finish a ride',\n  })\n  @ApiCreatedResponse({\n    description: 'Ride has been finished and you have a new charge.',\n    schema: {\n      example: {\n        pickUpLocation: [-75.604705, 6.158212],\n        dropOffLocation: [-75.590211, 6.2567865],\n        rider: 'John Doe',\n        estimatedFare: '$ 23.540,00',\n        updateAt: '2023-03-08T19:35:32.441Z',\n        deletedAt: null,\n        id: 'fdef43a2-aea4-4d05-b584-31a46e86ee63',\n        createdAt: '2023-03-08T19:35:32.441Z',\n        status: RequestStatus,\n      },\n    },\n  })\n  @ApiBadRequestResponse({\n    description: 'Something went wrong with your input!',\n    schema: {\n      example: {\n        statusCode: 400,\n        message: ['The specific validation message'],\n        error: 'Bad Request',\n      },\n    },\n  })\n  @ApiNotFoundResponse({\n    description: 'The resource you are looking for does not exists!',\n    schema: {\n      example: {\n        statusCode: 404,\n        message: 'The entity you are looking for does not exists!',\n        error: 'Not Found',\n      },\n    },\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong with your request, please try again!',\n    schema: {\n      example: {\n        statusCode: 500,\n        message: 'Something went wrong with your request, please try again!',\n        error: 'Server error',\n      },\n    },\n  })\n  @UseInterceptors(ClassSerializerInterceptor)\n  async finishRide(@Body() payload: FinishRideDto): Promise {\n    const finishRide = await this.requestService.finishRide(payload);\n\n    return finishRide;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RequestModule.html":{"url":"modules/RequestModule.html","title":"module - RequestModule","body":"\n                   \n\n\n\n\n    Modules\n    RequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_providers\n\n\n\n\nDriverService\n\nDriverService\n\n\n\nRequestModule\n\nRequestModule\n\nRequestModule -->\n\nDriverService->RequestModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nRequestModule -->\n\nPaymentService->RequestModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\n\n\nRiderService\n\nRiderService\n\nRequestModule -->\n\nRiderService->RequestModule\n\n\n\n\n\nTripService\n\nTripService\n\nRequestModule -->\n\nTripService->RequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/request/request.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DriverService\n                        \n                        \n                            PaymentService\n                        \n                        \n                            RequestService\n                        \n                        \n                            RiderService\n                        \n                        \n                            TripService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RequestController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Request } from './entities';\nimport { Driver, Payment, Rider, Trip } from './../../database/entities';\n\nimport { RequestController } from './controllers';\n\nimport { DriverService, PaymentService, RequestService, RiderService, TripService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Driver, Payment, Request, Rider, Trip])],\n  controllers: [RequestController],\n  providers: [DriverService, PaymentService, RequestService, RiderService, TripService],\n})\nexport class RequestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestRideDto.html":{"url":"classes/RequestRideDto.html","title":"class - RequestRideDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestRideDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/dto/request-ride.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dropoffLocation\n                            \n                            \n                                    Readonly\n                                pickupLocation\n                            \n                            \n                                    Readonly\n                                riderId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dropoffLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Dropoff Location', required: true})@ValidateNested()@Type(undefined)@IsDefined()@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pickupLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Pickup Location', required: true})@ValidateNested()@Type(undefined)@IsDefined()@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        riderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider ID', example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F', type: 'string', required: true})@IsUUID('4', {message: 'Rider ID must be a valid UUID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:93\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmpty, IsNotEmptyObject, IsNumber, IsUUID, Max, Min, ValidateNested, IsOptional, Length } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class LocationDto {\n  @ApiProperty({\n    description: 'Latitude',\n    type: 'number',\n    example: '23.6573',\n    required: true,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Latitude should be a number',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Latitude is required',\n  })\n  @Min(-90, {\n    message: 'Latitude should be greater than or equal to -90',\n  })\n  @Max(90, {\n    message: 'Latitude should be less than or equal to 90',\n  })\n  readonly latitude: number;\n\n  @ApiProperty({\n    description: 'Longitude',\n    type: 'number',\n    example: '77.6573',\n    required: true,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Longitude should be a number',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Longitude is required',\n  })\n  @Min(-180, {\n    message: 'Longitude should be greater than or equal to -180',\n  })\n  @Max(180, {\n    message: 'Longitude should be less than or equal to 180',\n  })\n  readonly longitude: number;\n\n  @ApiProperty({\n    description: 'Location Zip Code',\n    example: '401821',\n    type: 'string',\n    required: false,\n  })\n  @IsOptional()\n  @Length(2, 6, {\n    message: 'Zip Code should be less than or equal to 6',\n  })\n  readonly zipCode: string;\n}\n\nexport class RequestRideDto {\n  @ApiProperty({\n    description: 'Rider Pickup Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly pickupLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider Dropoff Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly dropoffLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider ID',\n    example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F',\n    type: 'string',\n    required: true,\n  })\n  @IsUUID('4', { message: 'Rider ID must be a valid UUID' })\n  readonly riderId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                finishRide\n                            \n                            \n                                    Async\n                                startRide\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource, riderService: RiderService, tripService: TripService, paymentService: PaymentService)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/request.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        riderService\n                                                  \n                                                        \n                                                                        RiderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        finishRide\n                        \n                    \n                \n            \n            \n                \n                    \n                    finishRide(payload: FinishRideDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/request.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                FinishRideDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        startRide\n                        \n                    \n                \n            \n            \n                \n                    \n                    startRide(payload: RequestRideDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/request.service.ts:35\n                \n            \n\n\n            \n                \n                    Create a new ride using the given payload and a new trip that'll be related to the request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RequestRideDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        {Promise}\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(RequestService.name)\n                    \n                \n                    \n                        \n                                Defined in src/api/request/services/request.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException, Logger, NotFoundException } from '@nestjs/common';\nimport { DataSource } from 'typeorm';\n\nimport { Request } from '../entities';\nimport { FinishRideDto, RequestRideDto } from '../dto';\nimport { calculateFare } from '../../commons';\n\nimport { RiderService } from './rider.service';\nimport { TripService } from './trip.service';\nimport { PaymentService } from './payment.service';\n\nimport { RequestStatus, TripStatus } from './../../commons/enums';\nimport { Payment, Trip } from './../../../database/entities';\nimport { MapBox, PaymentGateway } from './../../libs';\nimport { generateUuid } from './../../commons/helpers';\n\n@Injectable()\nexport class RequestService {\n  private logger = new Logger(RequestService.name);\n\n  constructor(\n    private readonly dataSource: DataSource,\n    private readonly riderService: RiderService,\n    private readonly tripService: TripService,\n    private readonly paymentService: PaymentService,\n  ) {}\n\n  /**\n   * Create a new ride using the given payload and a new trip that'll be related to the request\n   *\n   * @param {RequestRideDto} payload\n   * @return {*}  {Promise}\n   * @memberof RequestService\n   */\n  async startRide(payload: RequestRideDto): Promise {\n    try {\n      const { riderId, pickupLocation, dropoffLocation } = payload;\n      const request = new Request();\n\n      request.pickUpLocation = {\n        type: 'Point',\n        coordinates: [pickupLocation.latitude, pickupLocation.longitude],\n      };\n      request.dropOffLocation = {\n        type: 'Point',\n        coordinates: [dropoffLocation.latitude, dropoffLocation.longitude],\n      };\n      const { distance, duration } = await MapBox.getDirection(\n        `${pickupLocation.longitude},${pickupLocation.latitude}`,\n        `${dropoffLocation.longitude},${dropoffLocation.latitude}`,\n      );\n      request.rider = await this.riderService.getOneByIdOrFail(riderId);\n      request.estimatedFare = calculateFare(distance, duration);\n\n      let incomingRequest: Request = new Request();\n\n      await this.dataSource.transaction(async manager => {\n        // Create the incoming request with the given payload\n        incomingRequest = await manager.save(request);\n\n        // Creating the related trip with it's driver\n        const relatedTrip = await this.tripService.generateBaseTrip(incomingRequest);\n        await manager.save(relatedTrip);\n\n        // As the request was accepted automatically we must change it's status\n        await manager.update(Request, { id: incomingRequest.id }, { status: RequestStatus.ACCEPTED });\n      });\n\n      return incomingRequest;\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw error;\n      }\n\n      this.logger.error(error);\n\n      throw new InternalServerErrorException('Something went wrong creating your request, please try again.');\n    }\n  }\n\n  async finishRide(payload: FinishRideDto): Promise {\n    try {\n      const { tripId, finalLocation, riderRating, tip } = payload;\n      const currentTrip = await this.tripService.getOneByIdOrFail(tripId);\n      const paymentGateway = new PaymentGateway();\n      const {\n        rider: { email },\n        pickUpLocation: { coordinates },\n      } = currentTrip.request;\n\n      const { distance, duration } = await MapBox.getDirection(`${coordinates[1]},${coordinates[0]}`, `${finalLocation.longitude},${finalLocation.latitude}`);\n      const tripFinalFare = calculateFare(distance, duration);\n      let ridePropertiesToUpdate: Partial = {};\n\n      await this.dataSource.transaction(async manager => {\n        const referenceId = generateUuid();\n\n        // Create the transaction in the gateway\n        const tokenizedCard = await paymentGateway.tokenizeCard();\n        const transactionId = await paymentGateway.createNewTransaction({\n          amountInCents: tripFinalFare,\n          customerEmail: email,\n          reference: referenceId,\n          paymentMethod: {\n            installments: 1,\n            token: tokenizedCard,\n            type: 'CARD',\n          },\n        });\n\n        // Save the payment created for this trip\n        const paymentReference = await manager.save(\n          await this.paymentService.generatePayment({\n            id: referenceId,\n            fare: tripFinalFare,\n            transactionId,\n          }),\n        );\n\n        // Update the existing trip entity\n        ridePropertiesToUpdate = {\n          status: TripStatus.COMPLETED,\n          finalLocation: {\n            type: 'Point',\n            coordinates: [finalLocation.latitude, finalLocation.longitude],\n          },\n          payment: paymentReference,\n          endTime: new Date(),\n          riderRating,\n        };\n        await manager.update(Trip, { id: currentTrip.id }, ridePropertiesToUpdate);\n      });\n\n      return {\n        ...currentTrip,\n        ...ridePropertiesToUpdate,\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException || error instanceof InternalServerErrorException) {\n        throw error;\n      }\n\n      this.logger.error(error);\n\n      throw new InternalServerErrorException('Something went wrong creating your request, please try again.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Rider.html":{"url":"entities/Rider.html","title":"entity - Rider","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Rider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/rider.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                rating\n                            \n                            \n                                requests\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email', type: String})@Column({type: 'varchar', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First Name', type: String})@Column({type: 'varchar', length: 150, name: 'first_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last Name', type: String, required: false})@Column({type: 'varchar', length: 150, nullable: true, name: 'last_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Phone Number', type: String, required: false})@Column({length: 250, name: 'phone_number', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rating', type: Number, required: false})@Column({nullable: true, type: 'smallint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, request => request.rider, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:69\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, OneToMany } from 'typeorm';\nimport { Expose } from 'class-transformer';\n\nimport { Base } from './base.entity';\nimport { Request } from '../../api/request/entities';\n\n@Entity('riders')\nexport class Rider extends Base {\n  @ApiProperty({\n    description: 'First Name',\n    type: String,\n  })\n  @Column({\n    type: 'varchar',\n    length: 150,\n    name: 'first_name',\n  })\n  firstName: string;\n\n  @ApiProperty({\n    description: 'Last Name',\n    type: String,\n    required: false,\n  })\n  @Column({\n    type: 'varchar',\n    length: 150,\n    nullable: true,\n    name: 'last_name',\n  })\n  lastName?: string;\n\n  @ApiProperty({\n    description: 'Email',\n    type: String,\n  })\n  @Column({\n    type: 'varchar',\n    unique: true,\n  })\n  email: string;\n\n  @ApiProperty({\n    description: 'Phone Number',\n    type: String,\n    required: false,\n  })\n  @Column({\n    length: 250,\n    name: 'phone_number',\n    nullable: true,\n    type: 'varchar',\n  })\n  phoneNumber?: string;\n\n  @ApiProperty({\n    description: 'Rating',\n    type: Number,\n    required: false,\n  })\n  @Column({\n    nullable: true,\n    type: 'smallint',\n  })\n  rating?: number;\n\n  @OneToMany(() => Request, request => request.rider, { nullable: true })\n  requests: Request[];\n\n  @Expose()\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RiderService.html":{"url":"injectables/RiderService.html","title":"injectable - RiderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RiderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/rider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOneByIdOrFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(riderRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/rider.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOneByIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneByIdOrFail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/rider.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Rider } from '../../../database/entities';\n\n@Injectable()\nexport class RiderService {\n  constructor(\n    @InjectRepository(Rider)\n    private readonly riderRepository: Repository,\n  ) {}\n\n  async getOneByIdOrFail(id: string): Promise {\n    const rider = await this.riderRepository.findOne({\n      where: {\n        id,\n      },\n    });\n\n    if (!rider) {\n      throw new NotFoundException('The rider you are looking for does not exists!');\n    }\n\n    return rider;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenizeCard.html":{"url":"interfaces/TokenizeCard.html","title":"interface - TokenizeCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenizeCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/interfaces/tokenize-card.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardHolder\n                                        \n                                \n                                \n                                        \n                                            cvc\n                                        \n                                \n                                \n                                        \n                                            expMonth\n                                        \n                                \n                                \n                                        \n                                            expYear\n                                        \n                                \n                                \n                                        \n                                            number\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardHolder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardHolder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cvc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cvc:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expMonth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expMonth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenizeCard {\n  number: number;\n  cvc: number;\n  expMonth: number;\n  expYear: number;\n  cardHolder: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Trip.html":{"url":"entities/Trip.html","title":"entity - Trip","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Trip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/trip.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                car\n                            \n                            \n                                driver\n                            \n                            \n                                    Optional\n                                driverRating\n                            \n                            \n                                    Optional\n                                endTime\n                            \n                            \n                                    Optional\n                                finalLocation\n                            \n                            \n                                payment\n                            \n                            \n                                request\n                            \n                            \n                                    Optional\n                                riderRating\n                            \n                            \n                                startTime\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        car\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Car\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Car Used to Complete the Trip', type: () => Car})@ManyToOne(undefined, car => car.trips)@JoinColumn({name: 'car_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        driver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Driver\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Driver', type: () => Driver})@ManyToOne(undefined, driver => driver.trips)@JoinColumn({name: 'driver_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        driverRating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Rating per Trip', required: false, type: Number})@Column({nullable: true, type: 'smallint', name: 'driver_rating'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Ended At', type: Date, required: false})@Column({type: 'timestamptz', name: 'end_time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        finalLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Final Location', required: false})@Column('geometry', {name: 'final_location', nullable: true})@Transform( => value.coordinates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Payment', type: () => Payment})@OneToOne(undefined, payment => payment.trip, {eager: true, onDelete: 'CASCADE'})@JoinColumn({name: 'payment_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, request => request.trip, {eager: true, onDelete: 'CASCADE'})@JoinColumn({name: 'request_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        riderRating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Rating per Trip', required: false, type: Number})@Column({nullable: true, type: 'smallint', name: 'rider_rating'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Started At', type: Date})@Column({type: 'timestamptz', name: 'start_time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TripStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Status', enum: TripStatus, example: undefined})@Column({type: 'enum', enum: TripStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:110\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, ManyToOne, OneToOne, JoinColumn, Point } from 'typeorm';\nimport { Transform } from 'class-transformer';\n\n// Entities\nimport { Base } from './base.entity';\nimport { Car } from './car.entity';\nimport { Driver } from './driver.entity';\nimport { Payment } from './payment.entity';\nimport { Request } from '../../api/request/entities';\n\n// Enums\nimport { TripStatus } from './../../api/commons';\n\n@Entity('trips')\nexport class Trip extends Base {\n  @OneToOne(() => Request, request => request.trip, { eager: true, onDelete: 'CASCADE' })\n  @JoinColumn({\n    name: 'request_id',\n  })\n  request: Request;\n\n  @ApiProperty({\n    description: 'Trip Started At',\n    type: Date,\n  })\n  @Column({\n    type: 'timestamptz',\n    name: 'start_time',\n  })\n  startTime: Date;\n\n  @ApiProperty({\n    description: 'Trip Ended At',\n    type: Date,\n    required: false,\n  })\n  @Column({\n    type: 'timestamptz',\n    name: 'end_time',\n    nullable: true,\n  })\n  endTime?: Date;\n\n  @ApiProperty({\n    description: 'Trip Final Location',\n    required: false,\n  })\n  @Column('geometry', {\n    name: 'final_location',\n    nullable: true,\n  })\n  @Transform(({ value }) => value.coordinates)\n  finalLocation?: Point;\n\n  @ApiProperty({\n    description: 'Trip Driver',\n    type: () => Driver,\n  })\n  @ManyToOne(() => Driver, driver => driver.trips)\n  @JoinColumn({\n    name: 'driver_id',\n  })\n  driver: Driver;\n\n  @ApiProperty({\n    description: 'Car Used to Complete the Trip',\n    type: () => Car,\n  })\n  @ManyToOne(() => Car, car => car.trips)\n  @JoinColumn({\n    name: 'car_id',\n  })\n  car: Car;\n\n  @ApiProperty({\n    description: 'Rider Rating per Trip',\n    required: false,\n    type: Number,\n  })\n  @Column({\n    nullable: true,\n    type: 'smallint',\n    name: 'rider_rating',\n  })\n  riderRating?: number;\n\n  @ApiProperty({\n    description: 'Rider Rating per Trip',\n    required: false,\n    type: Number,\n  })\n  @Column({\n    nullable: true,\n    type: 'smallint',\n    name: 'driver_rating',\n  })\n  driverRating?: number;\n\n  @ApiProperty({\n    description: 'Trip Status',\n    enum: TripStatus,\n    example: Object.keys(TripStatus),\n  })\n  @Column({\n    type: 'enum',\n    enum: TripStatus,\n    default: TripStatus.IN_PROGRESS,\n  })\n  status: TripStatus;\n\n  @ApiProperty({\n    description: 'Trip Payment',\n    type: () => Payment,\n  })\n  @OneToOne(() => Payment, payment => payment.trip, { eager: true, onDelete: 'CASCADE' })\n  @JoinColumn({\n    name: 'payment_id',\n  })\n  payment: Payment;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TripService.html":{"url":"injectables/TripService.html","title":"injectable - TripService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TripService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/trip.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateBaseTrip\n                            \n                            \n                                    Async\n                                getOneByIdOrFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tripRepository: Repository, driverService: DriverService)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/trip.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tripRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        driverService\n                                                  \n                                                        \n                                                                        DriverService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateBaseTrip\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBaseTrip(incomingRequest: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/trip.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    incomingRequest\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOneByIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneByIdOrFail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/trip.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Trip } from '../../../database/entities';\nimport { DriverService } from './driver.service';\nimport { Request } from '../entities';\n\n@Injectable()\nexport class TripService {\n  constructor(\n    @InjectRepository(Trip)\n    private readonly tripRepository: Repository,\n    private readonly driverService: DriverService,\n  ) {}\n\n  async generateBaseTrip(incomingRequest: Request): Promise {\n    const trip = new Trip();\n    const driver = await this.driverService.getFirstDriver();\n\n    trip.driver = driver;\n    trip.car = driver.cars?.[0] ?? null;\n    trip.request = incomingRequest;\n    trip.startTime = new Date();\n\n    return trip;\n  }\n\n  async getOneByIdOrFail(id: string): Promise {\n    const trip = await this.tripRepository.findOne({\n      where: {\n        id,\n      },\n      relations: ['request', 'request.trip'],\n      // relations: {\n      //   request: {\n      //     rider: true,\n      //   },\n      // },\n    });\n\n    if (!trip) {\n      throw new NotFoundException('The trip you are looking for does not exists!');\n    }\n\n    return trip;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/commons/helpers/generate-uuid.helper.ts\n            \n            variable\n            generateUuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/helpers/trip.helper.ts\n            \n            variable\n            calculateFare\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/helpers/trip.helper.ts\n            \n            variable\n            distanceToKilometers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/helpers/trip.helper.ts\n            \n            variable\n            durationToMinutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/helpers/trip.helper.ts\n            \n            variable\n            transformFareToCurrency\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/interfaces/trip-helper.interface.ts\n            \n            interface\n            DistanceToKilometers\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/commons/interfaces/trip-helper.interface.ts\n            \n            interface\n            DurationToMinutes\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/libs/interfaces/generate-transaction.interface.ts\n            \n            interface\n            GenerateTransaction\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/libs/interfaces/generate-transaction.interface.ts\n            \n            interface\n            PaymentMethod\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/libs/interfaces/map-box.interface.ts\n            \n            interface\n            GetDirection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/libs/interfaces/tokenize-card.interface.ts\n            \n            interface\n            TokenizeCard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/libs/map-box.lib.ts\n            \n            class\n            MapBox\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/api/libs/payment-gateway.lib.ts\n            \n            class\n            PaymentGateway\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/request/controllers/request.controller.ts\n            \n            controller\n            RequestController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/request/dto/finish-ride.dto.ts\n            \n            class\n            FinishRideDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/request/dto/request-ride.dto.ts\n            \n            class\n            LocationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/request/dto/request-ride.dto.ts\n            \n            class\n            RequestRideDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/request/entities/request.entity.ts\n            \n            entity\n            Request\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/request/interfaces/generate-payment-reference.interface.ts\n            \n            interface\n            GeneratePaymentReference\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/request/services/driver.service.ts\n            \n            injectable\n            DriverService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/request/services/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/request/services/request.service.ts\n            \n            injectable\n            RequestService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/api/request/services/rider.service.ts\n            \n            injectable\n            RiderService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/request/services/trip.service.ts\n            \n            injectable\n            TripService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/interfaces/app-config.interface.ts\n            \n            interface\n            AppConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/interfaces/database-config.interface.ts\n            \n            interface\n            DatabaseConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/config/interfaces/http.interface.ts\n            \n            interface\n            Http\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/interfaces/rate-limiting.interface.ts\n            \n            interface\n            RateLimiting\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/config/typeOrm.config.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/config/typeOrm.config.ts\n            \n            variable\n            CONNECTION_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/base.entity.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/entities/car.entity.ts\n            \n            entity\n            Car\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/driver.entity.ts\n            \n            entity\n            Driver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/location.entity.ts\n            \n            entity\n            Location\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/payment.entity.ts\n            \n            entity\n            Payment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/rider.entity.ts\n            \n            entity\n            Rider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/trip.entity.ts\n            \n            entity\n            Trip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1678182352019-CreateRidersTable.ts\n            \n            class\n            CreateRidersTable1678182352019\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678182431069-CreateLocationsTable.ts\n            \n            class\n            CreateLocationsTable1678182431069\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts\n            \n            class\n            CreatePaymentMethodsTable1678185095471\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts\n            \n            class\n            AddRelationBetweenRidersAndPaymentMethods1678185298028\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts\n            \n            class\n            RenameNameColumnInRidersTable1678186681233\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678187115666-CreateDriversTable.ts\n            \n            class\n            CreateDriversTable1678187115666\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678187456870-CreateCarsTable.ts\n            \n            class\n            CreateCarsTable1678187456870\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts\n            \n            class\n            AddRelationBetweenDriversAndCars1678187764454\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678216032691-CreateRequestsTable.ts\n            \n            class\n            CreateRequestsTable1678216032691\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678218041445-CreateTripsTable.ts\n            \n            class\n            CreateTripsTable1678218041445\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts\n            \n            class\n            AlterTripsTableToHandlePayments1678221796470\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts\n            \n            class\n            AlterTripsTableToFixRelationIssues1678223295357\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts\n            \n            class\n            AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts\n            \n            class\n            AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts\n            \n            class\n            AlterRequestTableToRemoveSurge1678280557690\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts\n            \n            class\n            AlterRequestTableToHandleGeometryFields1678285496704\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts\n            \n            class\n            AlterTripsTableToHandleGeolocationFields1678290428231\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts\n            \n            class\n            DropPaymentMethodTableAndRelations1678294718551\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts\n            \n            class\n            AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts\n            \n            class\n            AlterPaymentsTableToAddTransactionId1678308519422\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/controllers/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @fastify/compress : ^6.2.0\n        \n            @fastify/helmet : ^10.1.0\n        \n            @fastify/static : ^6.9.0\n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.3.9\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/throttler : ^4.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            axios : ^1.3.4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            joi : ^17.8.3\n        \n            nestjs-pino : ^3.1.2\n        \n            pg : ^8.9.0\n        \n            pino-http : ^8.3.3\n        \n            pino-pretty : ^9.4.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.12\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CardType   (src/.../card-type.enum.ts)\n                        \n                        \n                            Fees   (src/.../trip.helper.ts)\n                        \n                        \n                            GatewayEndpoints   (src/.../payment-gateway.lib.ts)\n                        \n                        \n                            PaymentMethod   (src/.../payment-method.enum.ts)\n                        \n                        \n                            PaymentStatus   (src/.../payment-status.enum.ts)\n                        \n                        \n                            RequestStatus   (src/.../request-status.enum.ts)\n                        \n                        \n                            TripStatus   (src/.../trip-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/commons/enums/card-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n                        \n                            \n                                 VISA\n                            \n                        \n                        \n                            \n                                Value : VISA\n                            \n                        \n                        \n                            \n                                 MASTERCARD\n                            \n                        \n                        \n                            \n                                Value : MASTERCARD\n                            \n                        \n                        \n                            \n                                 AMERICAN_EXPRESS\n                            \n                        \n                        \n                            \n                                Value : AMERICAN_EXPRESS\n                            \n                        \n            \n        \n\n    src/api/commons/helpers/trip.helper.ts\n    \n        \n            \n                \n                    \n                        \n                        Fees\n                    \n                \n                        \n                            \n                                 BASE\n                            \n                        \n                        \n                            \n                                Value : 3500\n                            \n                        \n                        \n                            \n                                 DISTANCE\n                            \n                        \n                        \n                            \n                                Value : 1000\n                            \n                        \n                        \n                            \n                                 DURATION\n                            \n                        \n                        \n                            \n                                Value : 200\n                            \n                        \n            \n        \n\n    src/api/libs/payment-gateway.lib.ts\n    \n        \n            \n                \n                    \n                        \n                        GatewayEndpoints\n                    \n                \n                        \n                            \n                                 CARDS\n                            \n                        \n                        \n                            \n                                Value : tokens/cards\n                            \n                        \n                        \n                            \n                                 MERCHANTS\n                            \n                        \n                        \n                            \n                                Value : merchants\n                            \n                        \n                        \n                            \n                                 TRANSACTIONS\n                            \n                        \n                        \n                            \n                                Value : transactions\n                            \n                        \n            \n        \n\n    src/api/commons/enums/payment-method.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentMethod\n                    \n                \n                        \n                            \n                                 CASH\n                            \n                        \n                        \n                            \n                                Value : CASH\n                            \n                        \n                        \n                            \n                                 CREDIT_CARD\n                            \n                        \n                        \n                            \n                                Value : CREDIT_CARD\n                            \n                        \n                        \n                            \n                                 PSE\n                            \n                        \n                        \n                            \n                                Value : PSE\n                            \n                        \n            \n        \n\n    src/api/commons/enums/payment-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : APPROVED\n                            \n                        \n                        \n                            \n                                 DECLINED\n                            \n                        \n                        \n                            \n                                Value : DECLINED\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n            \n        \n\n    src/api/commons/enums/request-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestStatus\n                    \n                \n                        \n                            \n                                 WAITING\n                            \n                        \n                        \n                            \n                                Value : WAITING\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : ACCEPTED\n                            \n                        \n            \n        \n\n    src/api/commons/enums/trip-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TripStatus\n                    \n                \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 PAYMENT_PENDING\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_PENDING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nRide Hailing App\nDescription\nA small ride-hailing service app with monetary transactions.\nThis app was built using: Nest framework\nGetting Started\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n*Requirements\nWhat things you need to install the software and how to install them.\n\nnode >= 18.14.0\nnpm >= 9.6.0\nDocker In latest LTE version\n\n\nPostgres == 14. [OPTIONAL] If you rather to use postgres locally instead of Docker.\n\nSetup\n# In the project directory, clone and setup your environment variables:\n$ cp .env.example .env*Once completed:\n\nAdd your postgres: name, host, password, port, ssl and username in your .env file.\n\n*Important\n\nIn the .env file, the  GATEWAY_SECRET_KEY and GATEWAY_PUBLIC_KEY are your public and private key from your payment_roll API. The GATEWAY_ACCEPTANCE_TOKEN and the GATEWAY_BASE_URL as well, must be created by following the API documentation respectively.\n\nInstallation\n$ npm installRunning the app: Local environment\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRunning the app: Docker\n# check if you have docker installed in your machine:\n$ docker --version || docker -v\n\n# The above should return the version of docker. Otherwise, check again requirements section\n\n# Build and run the containers:\n$ docker-compose up -d\n\n# The comment above should create the following 3 containers:\n\n* ride_hailing_app\n* ride_hailing_database\n* pgadminSwagger\n\n\n\nTo access to this swagger, you must open in a new tab a url that will look like this:  http://localhost:/api/ or open this link.\nLocalhost ports:\nTo execute requests to the endpoints:\n\nexample: http://localhost/6543\n\nTo establish a straight connection to postres:\n\nexample: http://localhost/5432\n\nTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covCompodoc\n\n\n\nExecute the following command to get a detailed documentation of this project.\n$ npm run compodocPending:\n\nSeeders to skip the creation of a Rider and a Driver.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Jackson Rodriguez\nGmail - jackson.rodriguezf@gmail.com\n\nLicense\nRide Hailing App is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_providers\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nRequestModule->ApiModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigModule \n\nConfigModule \n\nConfigModule  -->\n\nConfigModule->ConfigModule \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDatabaseModule \n\nDatabaseModule \n\nDatabaseModule  -->\n\nDatabaseModule->DatabaseModule \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nDriverService\n\nDriverService\n\nRequestModule -->\n\nDriverService->RequestModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nRequestModule -->\n\nPaymentService->RequestModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\n\n\nRiderService\n\nRiderService\n\nRequestModule -->\n\nRiderService->RequestModule\n\n\n\n\n\nTripService\n\nTripService\n\nRequestModule -->\n\nTripService->RequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Small ride-hailing service for monetary transactions\n        \n            Keywords : NestJS, Ride Hailing, TypeORM, Postgres, ESLint, Husky, Commit Lint, Health Check, Rate Limiting\n        \n            Homepage : https://github.com/jacksonr20/ride-hailing-service-test/#readme\n        \n            Bugs : https://github.com/jacksonr20/ride-hailing-service-test/issues\n        \n            License : UNLICENSED\n        \n            Author : Jackson Rodriguez\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            calculateFare   (src/.../trip.helper.ts)\n                        \n                        \n                            configService   (src/.../typeOrm.config.ts)\n                        \n                        \n                            CONNECTION_OPTIONS   (src/.../typeOrm.config.ts)\n                        \n                        \n                            distanceToKilometers   (src/.../trip.helper.ts)\n                        \n                        \n                            durationToMinutes   (src/.../trip.helper.ts)\n                        \n                        \n                            generateUuid   (src/.../generate-uuid.helper.ts)\n                        \n                        \n                            transformFareToCurrency   (src/.../trip.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/commons/helpers/trip.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        calculateFare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (distance: number, duration: number): number => {\n  const distanceFare = distance * Fees.DISTANCE;\n  const durationFare = duration * Fees.DURATION;\n\n  return distanceFare + durationFare + Fees.BASE;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distanceToKilometers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (distanceInMeters: number): number => Number((distanceInMeters / 1000).toFixed(1))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        durationToMinutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (durationInSeconds: number): number => Number((durationInSeconds / 60).toFixed(1))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformFareToCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fare: number): string =>\n  new Intl.NumberFormat('es-CO', {\n    style: 'currency',\n    currency: 'COP',\n    minimumFractionDigits: 2,\n  }).format(fare)\n                    \n                \n\n\n        \n    \n\n    src/database/config/typeOrm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONNECTION_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: configService.get('DATABASE_HOST'),\n  port: configService.get('DATABASE_PORT'),\n  username: configService.get('DATABASE_USERNAME'),\n  password: configService.get('DATABASE_PASSWORD'),\n  database: configService.get('DATABASE_NAME'),\n  entities: [join(__dirname, '../entities', '*.entity.{js,ts}'), join(__dirname, '../..', 'api/**/entities/**', '*.entity.{js,ts}')],\n  migrations: [join(__dirname, '../migrations', '*.{js,ts}')],\n  synchronize: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/api/commons/helpers/generate-uuid.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateUuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => uuid()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
