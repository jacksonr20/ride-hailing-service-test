var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddRelationBetweenDriversAndCars1678187764454.html",[0,0.098,1,3.005]],["body/classes/AddRelationBetweenDriversAndCars1678187764454.html",[0,0.103,1,5.151,2,0.959,3,0.165,4,0.146,5,0.146,6,5.738,7,3.541,8,1.712,9,1.933,10,0.203,11,0.528,12,1.106,13,1.186,14,2.219,15,1.537,16,1.712,17,1.712,18,0.398,19,0.016,20,0.569,21,0.999,22,0.999,23,0.822,24,4.091,25,1.712,26,2.335,27,4.091,28,1.236,29,0.801,30,1.186,31,1.492,32,1.712,33,4.091,34,0.37,35,0.684,36,0.165,37,1.492,38,2.39,39,1.983,40,5.151,41,2.316,42,4.408,43,1.275,44,1.576,45,1.725,46,2.116,47,5.493,48,1.996,49,1.576,50,1.996,51,3.541,52,1.996,53,1.808,54,1.898,55,1.996,56,2.316,57,1.275,58,0.011,59,0.011]],["title/classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html",[0,0.098,60,3.005]],["body/classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html",[0,0.103,2,0.959,3,0.165,4,0.146,5,0.146,8,1.712,9,1.933,10,0.203,11,0.528,12,1.106,13,1.186,14,2.219,15,1.537,16,1.712,17,1.712,18,0.398,19,0.016,20,0.569,21,0.999,22,0.999,23,0.822,25,1.712,26,2.335,28,1.236,29,0.801,30,1.186,31,1.492,32,1.712,34,0.37,35,0.684,36,0.165,37,1.492,38,2.39,39,1.983,41,2.316,43,1.275,44,1.576,45,1.725,46,2.116,48,1.996,49,1.576,50,1.996,52,1.996,53,1.808,54,1.898,55,1.996,56,2.316,57,1.275,58,0.011,59,0.011,60,5.151,61,5.738,62,3.541,63,4.091,64,4.091,65,4.091,66,5.738,67,4.819,68,5.493,69,3.541]],["title/classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html",[0,0.098,70,3.005]],["body/classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html",[0,0.083,2,0.769,3,0.132,4,0.117,5,0.117,8,1.469,9,1.719,10,0.163,11,0.453,12,1.02,13,1.017,14,2.071,15,1.435,16,1.469,17,1.469,18,0.496,19,0.015,20,0.456,21,0.801,22,0.801,23,0.731,25,1.469,26,2.223,28,1.06,29,0.687,30,1.017,31,1.356,32,1.469,34,0.297,35,0.549,36,0.132,37,1.732,38,2.853,39,2.166,41,1.384,45,2.953,56,1.384,57,2.223,58,0.009,59,0.009,70,4.683,71,5.217,72,2.84,73,3.281,74,3.281,75,3.281,76,3.628,77,5.514,78,2.84,79,2.549,80,2.549,81,3.966,82,4.079,83,5.217,84,3.101,85,3.281,86,3.281,87,2.84,88,3.661,89,2.716,90,2.423,91,4.079,92,3.281,93,2.835,94,6.027,95,2.299,96,2.716,97,3.386,98,2.94,99,2.423,100,2.423,101,3.628,102,2.84,103,3.281,104,3.281]],["title/classes/AlterPaymentsTableToAddTransactionId1678308519422.html",[0,0.098,105,3.005]],["body/classes/AlterPaymentsTableToAddTransactionId1678308519422.html",[0,0.096,2,0.889,3,0.153,4,0.135,5,0.135,8,1.626,9,1.859,10,0.188,11,0.502,12,1.077,13,1.126,14,2.17,15,1.503,16,1.626,17,1.626,18,0.473,19,0.015,20,0.527,21,0.926,22,0.926,23,0.79,25,1.626,26,2.298,28,1.174,29,0.761,30,1.126,31,1.445,32,1.626,34,0.343,35,0.634,36,0.153,37,1.634,38,2.799,39,2.173,41,1.599,45,2.935,56,1.599,57,2.223,58,0.01,59,0.01,81,3.433,95,2.545,96,3.007,97,3.662,98,3.134,99,2.682,100,2.682,101,3.924,105,4.991,106,5.56,107,3.282,108,3.792,109,3.792,110,3.792,111,4.515,112,2.328,113,2.495,114,1.599]],["title/classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html",[0,0.098,115,3.005]],["body/classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html",[0,0.063,2,0.589,3,0.101,4,0.09,5,0.09,8,1.204,9,1.467,10,0.125,11,0.371,12,0.912,13,0.834,14,1.877,15,1.3,16,1.204,17,1.204,18,0.302,19,0.015,20,0.349,21,0.613,22,0.613,23,0.624,25,1.204,26,2.07,28,0.869,29,0.563,30,0.834,31,1.189,32,1.204,34,0.227,35,0.42,36,0.101,37,1.745,38,2.936,39,2.321,41,3.022,43,1.647,44,2.321,45,2.54,46,2.885,48,2.938,49,2.321,50,2.938,52,2.938,53,2.335,54,2.794,55,3.159,56,3.022,57,1.877,58,0.008,59,0.008,84,2.542,95,2.938,96,2.713,98,3.717,99,2.717,100,2.717,115,4.106,116,4.574,117,2.175,118,2.512,119,2.512,120,2.512,121,3.344,122,3.344,123,3.344,124,4.074,125,3.344,126,3.344,127,4.574,128,3.344,129,2.717,130,4.574,131,3.344,132,3.344,133,3.963,134,3.344,135,3.344]],["title/classes/AlterRequestTableToHandleGeometryFields1678285496704.html",[0,0.098,136,3.005]],["body/classes/AlterRequestTableToHandleGeometryFields1678285496704.html",[0,0.104,2,0.966,3,0.166,4,0.147,5,0.147,8,1.721,9,1.941,10,0.204,11,0.531,12,1.108,13,1.192,14,2.224,15,1.541,16,1.721,17,1.721,18,0.468,19,0.016,20,0.573,21,1.006,22,1.006,23,0.825,25,1.721,26,2.338,28,1.242,29,0.805,30,1.192,31,1.496,32,1.721,34,0.373,35,0.689,36,0.166,37,1.496,38,2.562,39,1.989,45,2.804,57,2.073,58,0.011,59,0.011,97,3.39,98,3.244,99,2.839,100,2.839,101,3.633,136,5.167,137,5.756,138,3.568,139,4.122,140,4.122,141,4.122]],["title/classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html",[0,0.098,142,3.005]],["body/classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html",[0,0.082,2,0.763,3,0.131,4,0.116,5,0.116,8,1.46,9,1.711,10,0.161,11,0.45,12,1.017,13,1.012,14,2.066,15,1.431,16,1.46,17,1.46,18,0.352,19,0.015,20,0.453,21,0.795,22,0.795,23,0.727,25,1.46,26,2.219,28,1.054,29,0.683,30,1.012,31,1.351,32,1.46,34,0.295,35,0.544,36,0.131,37,1.713,38,2.896,39,2.277,41,2.947,43,1.46,44,1.805,45,1.975,46,2.693,48,2.285,49,1.805,50,2.285,52,2.285,53,2.07,54,2.173,55,2.285,56,2.947,57,1.872,58,0.009,59,0.009,97,2.877,98,3.713,99,2.409,100,2.409,114,1.975,127,5.197,128,4.055,129,2.409,130,5.197,131,4.055,132,4.055,133,3.083,134,4.055,142,4.665,143,5.197,144,2.817,145,3.255,146,3.255,147,3.255]],["title/classes/AlterRequestTableToRemoveSurge1678280557690.html",[0,0.098,148,3.005]],["body/classes/AlterRequestTableToRemoveSurge1678280557690.html",[0,0.11,2,1.021,3,0.175,4,0.156,5,0.156,8,1.785,9,1.995,10,0.216,11,0.551,12,1.129,13,1.237,14,2.26,15,1.565,16,1.785,17,1.785,18,0.411,19,0.016,20,0.606,21,1.064,22,1.064,23,0.848,25,1.785,26,2.364,28,1.289,29,0.835,30,1.237,31,1.529,32,1.785,34,0.394,35,0.728,36,0.175,37,1.289,38,2.207,39,1.714,41,1.837,56,1.837,57,1.358,58,0.011,59,0.011,98,2.794,114,1.837,148,5.282,149,5.884,150,3.771,151,4.357,152,4.357,153,4.357,154,4.958,155,3.097]],["title/classes/AlterTripsTableToFixRelationIssues1678223295357.html",[0,0.098,156,3.005]],["body/classes/AlterTripsTableToFixRelationIssues1678223295357.html",[0,0.087,2,0.812,3,0.139,4,0.124,5,0.124,8,1.527,9,1.771,10,0.172,11,0.471,12,1.042,13,1.058,14,2.109,15,1.461,16,1.527,17,1.527,18,0.365,19,0.015,20,0.482,21,0.846,22,0.846,23,0.753,25,1.527,26,2.252,28,1.102,29,0.714,30,1.058,31,1.39,32,1.527,34,0.314,35,0.579,36,0.139,37,1.683,38,2.822,39,2.237,41,2.853,43,1.527,44,1.888,45,2.066,46,2.737,48,2.39,49,1.888,50,2.39,52,2.39,53,2.165,54,2.273,55,2.39,56,2.853,57,1.527,58,0.01,59,0.01,81,4.452,95,3.3,129,2.519,156,4.8,157,5.347,158,2.999,159,3.465,160,3.465,161,3.465,162,4.24,163,4.24,164,5.347,165,5.347,166,4.899,167,4.899,168,3.465,169,2.999]],["title/classes/AlterTripsTableToHandleGeolocationFields1678290428231.html",[0,0.098,170,3.005]],["body/classes/AlterTripsTableToHandleGeolocationFields1678290428231.html",[0,0.088,2,0.821,3,0.141,4,0.125,5,0.125,8,1.539,9,1.782,10,0.174,11,0.475,12,1.046,13,1.066,14,2.116,15,1.466,16,1.539,17,1.539,18,0.448,19,0.015,20,0.487,21,0.855,22,0.855,23,0.757,25,1.539,26,2.258,28,1.111,29,0.72,30,1.066,31,1.397,32,1.539,34,0.317,35,0.586,36,0.141,37,1.686,38,2.86,39,2.242,41,2.411,43,1.092,44,1.35,45,2.759,46,1.902,48,1.709,49,1.35,50,1.709,52,1.709,54,1.625,55,2.408,56,2.411,57,2.221,58,0.01,59,0.01,84,3.248,95,3.475,96,3.913,97,3.51,98,3.028,99,2.538,100,2.538,101,3.248,124,4.948,133,2.305,135,4.273,170,4.823,171,5.373,172,3.032,173,3.503,174,3.503,175,3.503]],["title/classes/AlterTripsTableToHandlePayments1678221796470.html",[0,0.098,176,3.005]],["body/classes/AlterTripsTableToHandlePayments1678221796470.html",[0,0.081,2,0.752,3,0.129,4,0.115,5,0.115,8,1.446,9,1.697,10,0.159,11,0.446,12,1.012,13,1.001,14,2.056,15,1.424,16,1.446,17,1.446,18,0.406,19,0.015,20,0.446,21,1.456,22,0.783,23,0.722,25,1.446,26,2.211,28,1.043,29,0.676,30,1.001,31,1.342,32,1.446,34,0.291,35,0.537,36,0.129,37,1.674,38,2.62,39,2.182,41,2.515,43,1.697,44,2.098,45,1.956,46,2.541,48,2.262,49,2.098,50,2.262,52,2.262,53,2.049,54,2.151,55,2.262,56,2.515,57,1.697,58,0.009,59,0.009,76,2.112,81,4.339,83,4.714,84,2.112,88,2.493,89,1.85,90,1.65,93,2.384,95,3.087,102,2.778,114,2.668,129,1.65,155,3.871,162,4.014,163,2.778,164,4.714,169,2.778,176,4.635,177,5.163,178,2.778,179,3.209,180,3.209,181,3.209,182,1.65,183,1.446,184,1.744,185,1.65,186,3.242,187,2.52,188,1.65,189,1.65,190,2.959,191,1.971,192,4.014,193,3.209,194,1.744,195,5.163,196,2.778,197,2.778,198,4.014,199,2.778]],["title/modules/ApiModule.html",[200,1.709,201,2.545]],["body/modules/ApiModule.html",[0,0.136,3,0.217,4,0.193,5,0.193,19,0.016,34,0.594,36,0.217,58,0.013,59,0.013,200,2.898,201,5.038,202,2.774,203,3.563,204,4.669,205,4.669,206,5.038,207,4.026,208,3.312,209,3.312,210,5.394,211,4.026,212,2.078,213,5.394]],["title/interfaces/AppConfig.html",[214,1.067,215,2.75]],["body/interfaces/AppConfig.html",[3,0.197,4,0.175,5,0.175,10,0.243,11,0.594,18,0.47,19,0.016,34,0.559,36,0.197,58,0.012,59,0.012,214,1.352,215,4.392,216,1.808,217,4.242,218,3.808,219,5.051,220,4.716,221,5.051,222,5.054,223,5.054,224,5.051,225,2.025,226,4.901]],["title/modules/AppModule.html",[200,1.709,227,2.75]],["body/modules/AppModule.html",[0,0.118,3,0.188,4,0.167,5,0.167,19,0.016,34,0.654,36,0.188,58,0.012,59,0.012,200,2.649,201,4.861,202,3.082,203,3.258,207,3.681,208,2.87,209,2.87,211,3.681,212,1.801,219,3.322,227,5.575,228,4.045,229,4.045,230,4.861,231,4.861,232,4.861,233,4.673,234,4.045,235,4.673,236,4.045,237,3.631,238,2.87,239,3.631]],["title/classes/Base.html",[0,0.098,240,1.887]],["body/classes/Base.html",[0,0.148,2,1.055,3,0.181,4,0.161,5,0.161,10,0.223,11,0.563,12,1.04,18,0.442,19,0.016,20,0.814,23,0.912,29,1.004,34,0.53,35,0.753,36,0.181,58,0.012,59,0.012,183,2.027,185,3.009,188,3.009,189,2.315,240,2.855,241,3.898,242,5.628,243,5.628,244,5.628,245,4.491,246,2.903,247,4.503,248,4.503,249,4.503,250,4.503,251,4.503,252,5.853,253,4.503,254,4.503,255,3.373,256,2.468,257,4.503,258,4.503,259,5.853,260,5.853,261,5.853,262,4.16,263,2.963]],["title/entities/Car.html",[264,1.367,265,2.545]],["body/entities/Car.html",[0,0.075,3,0.119,4,0.106,5,0.106,10,0.147,11,0.42,12,0.831,18,0.495,19,0.016,20,0.983,23,0.879,29,0.935,34,0.555,35,0.495,36,0.119,42,3.108,53,2.298,57,1.998,58,0.009,59,0.009,95,2.536,225,2.037,240,2.133,246,2.796,255,3.695,256,2.87,264,1.046,265,2.877,266,1.249,267,2.563,268,5.302,269,5.302,270,3.391,271,5.199,272,5.302,273,5.302,274,2.988,275,3.484,276,3.421,277,2.52,278,2.961,279,4.557,280,3.936,281,3.398,282,2.961,283,2.961,284,4.373,285,4.461,286,2.563,287,2.961,288,3.398,289,4.373,290,3.785,291,4.97,292,3.785,293,2.961,294,2.961,295,2.703,296,2.301,297,3.785,298,3.108,299,2.961,300,3.785,301,2.961,302,3.127,303,1.249,304,3.398,305,3.398,306,3.398,307,1.948,308,2.563,309,2.105,310,2.961,311,1.707,312,2.468,313,2.412]],["title/modules/ConfigModule.html",[200,1.709,230,2.545]],["body/modules/ConfigModule.html",[0,0.083,3,0.133,4,0.118,5,0.118,15,1.022,19,0.016,34,0.656,36,0.133,58,0.009,59,0.009,200,2.092,202,1.697,203,2.572,207,2.906,208,2.027,209,2.027,211,3.398,212,1.272,215,3.365,216,1.218,220,3.398,221,2.347,222,3.115,230,4.957,239,2.565,256,2.333,314,2.857,315,2.857,316,3.301,317,4.097,318,4.733,319,2.857,320,5.328,321,3.301,322,2.857,323,2.857,324,2.565,325,3.301,326,4.733,327,2.857,328,3.301,329,2.565,330,4.097,331,2.857,332,3.301,333,4.097,334,3.301,335,3.301,336,3.301,337,3.301,338,3.301,339,3.301,340,2.857,341,3.301,342,3.301,343,3.301,344,3.301,345,3.301,346,2.857,347,3.301,348,3.301,349,3.301,350,7.477,351,3.301,352,3.301,353,3.301,354,3.301,355,3.301,356,3.301,357,3.301,358,3.301,359,3.301,360,3.301,361,3.301,362,3.301,363,3.301,364,3.301,365,3.301,366,3.301,367,6.044,368,3.301,369,3.301,370,3.301,371,3.301,372,3.301,373,3.301,374,3.301,375,3.301,376,3.301,377,3.301,378,3.301,379,3.301,380,2.857,381,3.301,382,3.301,383,3.301,384,4.097,385,2.309,386,4.097,387,4.097,388,3.301,389,2.092,390,4.733,391,3.301,392,4.097,393,4.097,394,3.301,395,3.301,396,3.301]],["title/classes/CreateCarsTable1678187456870.html",[0,0.098,397,3.005]],["body/classes/CreateCarsTable1678187456870.html",[0,0.101,2,0.942,3,0.162,4,0.144,5,0.144,8,1.692,9,1.916,10,0.199,11,0.522,12,1.099,13,1.172,14,2.208,15,1.529,16,1.692,17,1.692,18,0.395,19,0.016,20,0.559,21,1.607,22,0.981,23,0.814,25,1.692,26,2.326,28,1.221,29,0.792,30,1.172,31,1.481,32,1.692,34,0.364,35,0.672,36,0.162,37,1.221,39,1.624,40,4.218,43,1.253,44,1.549,46,1.549,49,1.549,58,0.011,59,0.011,93,2.066,112,3.774,114,2.775,182,2.066,183,1.692,184,2.184,185,2.066,186,3.34,187,2.95,188,2.066,189,2.066,194,2.184,268,3.479,269,3.479,272,3.479,273,3.479,277,2.317,292,3.479,300,3.479,397,5.114,398,5.697,399,3.479,400,4.019,401,4.019,402,4.019,403,5.428,404,3.479,405,4.019]],["title/classes/CreateDriversTable1678187115666.html",[0,0.098,406,3.005]],["body/classes/CreateDriversTable1678187115666.html",[0,0.098,2,0.908,3,0.156,4,0.138,5,0.138,8,1.65,9,1.88,10,0.192,11,0.509,12,1.085,13,1.143,14,2.184,15,1.513,16,1.65,17,1.65,18,0.387,19,0.015,20,0.539,21,1.657,22,0.946,23,0.799,25,1.65,26,2.308,28,1.191,29,0.772,30,1.143,31,1.458,32,1.65,34,0.351,35,0.648,36,0.156,37,1.191,39,1.584,43,1.208,44,1.493,46,2.04,49,1.493,58,0.01,59,0.01,93,1.992,112,4.168,113,2.549,114,2.862,129,1.992,182,1.992,183,1.65,184,2.105,185,1.992,186,3.523,187,2.877,188,1.992,189,1.992,194,2.105,277,2.233,313,1.797,404,3.353,406,5.037,407,5.611,408,3.353,409,3.874,410,3.874,411,3.874,412,4.582,413,3.01,414,4.113,415,3.01,416,3.763,417,3.01,418,3.353,419,2.549,420,3.353,421,3.353,422,3.353,423,2.754,424,3.874,425,3.874]],["title/classes/CreateLocationsTable1678182431069.html",[0,0.098,426,3.005]],["body/classes/CreateLocationsTable1678182431069.html",[0,0.102,2,0.952,3,0.163,4,0.145,5,0.145,8,1.704,9,1.926,10,0.201,11,0.525,12,1.103,13,1.18,14,2.215,15,1.534,16,1.704,17,1.704,18,0.397,19,0.016,20,0.565,21,1.614,22,0.991,23,0.819,25,1.704,26,2.331,28,1.23,29,0.797,30,1.18,31,1.487,32,1.704,34,0.368,35,0.679,36,0.163,37,1.23,39,1.635,43,1.265,44,1.564,46,1.564,49,1.564,58,0.011,59,0.011,93,2.087,112,3.793,113,3.596,114,2.787,182,2.087,183,1.704,184,2.206,185,2.087,186,3.357,187,2.97,188,2.087,189,2.087,194,2.206,414,3.154,426,5.135,427,5.72,428,3.514,429,4.06,430,4.06,431,4.06,432,2.81,433,2.671,434,2.671,435,3.514,436,4.06]],["title/classes/CreatePaymentMethodsTable1678185095471.html",[0,0.098,437,3.005]],["body/classes/CreatePaymentMethodsTable1678185095471.html",[0,0.097,2,0.904,3,0.155,4,0.138,5,0.138,8,1.645,9,1.875,10,0.191,11,0.507,12,1.083,13,1.139,14,2.181,15,1.511,16,1.645,17,1.645,18,0.46,19,0.015,20,0.536,21,1.579,22,0.941,23,0.797,25,1.645,26,2.306,28,1.187,29,0.77,30,1.139,31,1.456,32,1.645,34,0.349,35,0.645,36,0.155,37,1.574,39,1.579,43,1.202,44,1.485,46,1.485,49,1.485,58,0.01,59,0.01,66,4.567,76,3.472,78,3.337,79,2.996,80,2.996,93,3.093,112,2.367,113,2.537,114,2.537,182,1.982,183,1.645,184,2.095,185,1.982,186,3.269,187,2.868,188,1.982,189,1.982,194,2.095,245,2.367,437,5.027,438,5.6,439,3.337,440,3.855,441,3.855,442,3.855,443,6.016,444,6.016,445,3.855,446,3.337,447,3.337,448,3.337,449,3.855,450,3.855,451,3.855,452,3.855]],["title/classes/CreateRequestsTable1678216032691.html",[0,0.098,453,3.005]],["body/classes/CreateRequestsTable1678216032691.html",[0,0.082,2,0.761,3,0.131,4,0.116,5,0.116,8,1.458,9,1.709,10,0.161,11,0.45,12,1.016,13,1.01,14,2.064,15,1.43,16,1.458,17,1.458,18,0.408,19,0.015,20,0.452,21,1.552,22,0.793,23,0.726,25,1.458,26,2.218,28,1.053,29,0.682,30,1.01,31,1.35,32,1.458,34,0.294,35,0.543,36,0.131,37,1.625,38,2.113,39,2.09,41,2.312,43,1.87,44,2.311,45,2.312,46,2.741,48,2.675,49,2.311,50,2.675,52,2.675,53,2.423,54,2.543,55,2.675,56,2.312,58,0.009,59,0.009,67,3.635,69,2.811,76,2.137,90,1.67,93,2.405,98,3.407,99,2.819,100,2.819,114,2.681,121,4.049,122,4.049,125,2.811,126,2.811,129,2.405,133,3.078,154,2.811,155,3.325,182,1.67,183,1.458,184,1.765,185,1.67,186,2.98,187,2.542,188,1.67,189,1.67,194,1.765,453,4.661,454,5.192,455,2.811,456,3.248,457,3.248,458,3.248,459,5.483,460,3.248,461,2.524,462,2.811,463,2.811,464,3.248,465,4.678]],["title/classes/CreateRidersTable1678182352019.html",[0,0.098,466,3.005]],["body/classes/CreateRidersTable1678182352019.html",[0,0.1,2,0.93,3,0.16,4,0.142,5,0.142,8,1.678,9,1.904,10,0.197,11,0.517,12,1.128,13,1.162,14,2.2,15,1.524,16,1.678,17,1.678,18,0.392,19,0.016,20,0.552,21,1.599,22,0.969,23,0.809,25,1.678,26,2.32,28,1.211,29,0.785,30,1.162,31,1.473,32,1.678,34,0.359,35,0.664,36,0.16,37,1.211,39,1.61,43,1.237,44,1.529,46,2.074,49,1.529,58,0.011,59,0.011,93,2.041,112,4.021,113,2.612,114,2.761,129,2.041,182,2.041,183,1.678,184,2.157,185,2.041,186,3.319,187,2.925,188,2.041,189,2.041,194,2.157,277,2.288,414,4.182,415,3.084,416,3.826,417,3.084,418,3.436,419,2.612,466,5.088,467,5.668,468,3.436,469,3.97,470,3.97,471,3.97,472,4.659,473,3.97,474,3.97]],["title/classes/CreateTripsTable1678218041445.html",[0,0.098,475,3.005]],["body/classes/CreateTripsTable1678218041445.html",[0,0.077,2,0.712,3,0.122,4,0.109,5,0.109,8,1.39,9,1.645,10,0.151,11,0.429,12,0.99,13,0.962,14,2.017,15,1.397,16,1.39,17,1.39,18,0.397,19,0.015,20,0.423,21,1.512,22,0.742,23,0.699,25,1.39,26,2.181,28,1.003,29,0.65,30,0.962,31,1.308,32,1.39,34,0.275,35,0.508,36,0.122,37,1.641,38,2.24,39,2.128,41,2.452,42,3.169,43,1.93,44,2.386,45,2.452,46,2.778,48,2.836,49,2.386,50,2.836,51,2.631,52,2.836,53,1.343,54,2.697,55,3.262,56,2.452,58,0.009,59,0.009,76,2,90,1.563,93,2.292,95,3.47,96,3.043,114,2.611,123,3.858,129,2.292,133,2,155,2.16,182,1.563,183,1.39,184,1.652,185,1.563,186,3.16,187,2.422,188,1.563,189,1.563,190,1.652,194,1.652,196,2.631,197,2.631,277,2.569,475,4.518,476,5.033,477,2.631,478,3.039,479,3.039,480,3.039,481,5.279,482,3.039,483,3.858,484,2.631,485,2.631,486,2.631,487,2.631,488,4.569,489,3.858,490,3.039,491,3.039,492,3.039,493,4.458,494,3.039,495,4.458,496,4.458,497,3.039]],["title/interfaces/DatabaseConfig.html",[214,1.067,224,2.75]],["body/interfaces/DatabaseConfig.html",[3,0.199,4,0.177,5,0.177,10,0.245,11,0.597,18,0.481,19,0.015,20,1.099,36,0.199,58,0.012,59,0.012,214,1.364,216,1.824,218,3.843,219,5.067,221,5.067,224,4.418,225,2.033,423,4.831,498,4.281,499,6.17,500,6.17,501,7.129,502,6.17]],["title/modules/DatabaseModule.html",[200,1.709,231,2.545]],["body/modules/DatabaseModule.html",[0,0.129,3,0.206,4,0.183,5,0.183,19,0.016,34,0.625,36,0.206,58,0.013,59,0.013,200,2.806,202,2.632,203,3.451,207,3.899,208,3.144,209,3.144,211,3.144,212,1.973,231,5.201,236,4.431,317,5.496,384,4.431,503,4.431,504,4.431,505,5.12,506,4.431,507,2.951,508,4.934,509,5.12]],["title/interfaces/DistanceToKilometers.html",[214,1.067,510,2.375]],["body/interfaces/DistanceToKilometers.html",[3,0.225,4,0.2,5,0.2,10,0.278,11,0.645,18,0.36,19,0.015,36,0.27,58,0.013,59,0.013,214,1.85,216,2.066,225,2.227,510,4.119,511,4.352,512,4.352,513,4.29,514,3.439,515,3.228]],["title/entities/Driver.html",[264,1.367,270,1.887]],["body/entities/Driver.html",[0,0.084,3,0.133,4,0.118,5,0.118,10,0.164,11,0.456,12,0.886,18,0.48,19,0.016,20,0.841,21,1.157,23,0.848,29,0.972,34,0.58,35,0.553,36,0.133,40,4.304,57,1.886,58,0.009,59,0.009,95,2.702,245,4.091,246,2.7,255,4.046,256,3.127,264,1.169,265,4.384,266,1.395,270,3.424,274,2.702,275,3.621,276,3.119,279,3.369,280,2.911,281,3.683,295,2.81,296,3.683,298,4.3,302,2.951,303,1.395,306,4.304,309,2.352,311,1.907,312,2.232,313,2.97,420,4.103,421,5.542,422,4.103,423,4.736,516,2.863,517,5.54,518,5.54,519,4.74,520,3.308,521,3.308,522,4.74,523,3.308,524,4.74,525,3.308,526,3.308,527,4.103,528,3.308,529,2.863,530,1.91,531,3.308,532,3.308]],["title/injectables/DriverService.html",[533,1.794,534,2.375]],["body/injectables/DriverService.html",[0,0.104,3,0.165,4,0.147,5,0.147,10,0.204,12,0.881,13,1.19,15,1.54,18,0.354,19,0.016,20,0.865,23,0.824,28,1.24,29,0.804,30,1.19,31,1.495,34,0.601,35,0.687,36,0.165,37,1.24,58,0.011,59,0.011,183,1.718,212,1.584,270,3.379,385,2.689,389,2.436,412,4.771,507,2.37,533,2.557,534,3.385,535,2.525,536,3.559,537,6.643,538,4.283,539,3.385,540,4.112,541,4.371,542,4.112,543,5.512,544,4.112,545,4.283,546,4.112,547,2.923,548,2.923,549,2.37,550,4.112,551,2.37,552,2.114,553,4.112,554,4.112,555,3.385,556,3.197,557,4.112,558,3.559,559,2.706,560,2.706,561,3.195,562,4.112,563,4.112,564,4.112,565,3.195,566,2.923,567,2.923]],["title/classes/DropPaymentMethodTableAndRelations1678294718551.html",[0,0.098,568,3.005]],["body/classes/DropPaymentMethodTableAndRelations1678294718551.html",[0,0.091,2,0.843,3,0.145,4,0.128,5,0.128,8,1.568,9,1.808,10,0.178,11,0.483,12,1.057,13,1.086,14,2.134,15,1.478,16,1.568,17,1.568,18,0.468,19,0.015,20,0.5,21,0.878,22,0.878,23,0.768,25,1.568,26,2.271,28,1.132,29,0.733,30,1.086,31,1.413,32,1.568,34,0.326,35,0.601,36,0.145,37,1.661,38,2.808,39,2.208,41,2.121,43,1.121,44,1.386,45,2.964,46,1.938,48,1.755,49,1.386,50,1.755,52,1.755,53,1.589,54,1.668,55,1.755,56,2.121,57,2.191,58,0.01,59,0.01,81,4.132,95,2.453,96,2.899,97,3.561,98,3.063,99,2.586,100,2.586,101,3.816,192,5.019,198,4.353,199,3.113,568,4.879,569,5.436,570,3.113,571,3.597,572,3.597,573,3.597]],["title/interfaces/DurationToMinutes.html",[214,1.067,514,2.375]],["body/interfaces/DurationToMinutes.html",[3,0.225,4,0.2,5,0.2,10,0.278,11,0.645,18,0.36,19,0.015,36,0.27,58,0.013,59,0.013,214,1.85,216,2.066,225,2.227,510,3.439,511,4.352,512,4.352,513,3.228,514,4.119,515,4.29]],["title/classes/FinishRideDto.html",[0,0.098,574,2.545]],["body/classes/FinishRideDto.html",[0,0.133,2,0.707,3,0.121,4,0.108,5,0.108,10,0.15,11,0.426,18,0.468,19,0.016,20,0.806,23,0.768,29,0.845,34,0.525,36,0.121,43,1.382,58,0.009,59,0.009,183,1.806,191,4.289,225,2.124,246,2.443,256,1.869,262,3.736,263,1.985,274,2.826,275,3.719,295,2.443,302,3.011,303,1.272,312,2.334,313,2.056,419,4.503,432,2.279,530,2.861,552,3.745,574,2.917,575,5.342,576,2.144,577,3.458,578,4.084,579,4.549,580,3.812,581,3.151,582,2.611,583,3.017,584,3.72,585,5.015,586,4.433,587,5.177,588,4.433,589,4.501,590,5.014,591,3.017,592,3.444,593,3.444,594,3.017,595,3.736,596,3.017,597,3.444,598,3.444,599,3.444,600,3.444,601,3.444,602,2.611,603,3.444,604,3.017,605,3.444,606,3.444,607,4.084,608,2.344,609,2.344,610,2.344,611,3.444,612,1.399,613,3.017,614,1.739,615,2.344,616,4.433,617,3.017]],["title/interfaces/GeneratePaymentReference.html",[214,1.067,618,2.75]],["body/interfaces/GeneratePaymentReference.html",[3,0.199,4,0.177,5,0.177,10,0.245,11,0.597,18,0.471,19,0.015,20,1.043,29,1.122,36,0.199,58,0.012,59,0.012,183,2.222,190,3.874,191,4.377,214,1.364,216,1.824,225,2.243,423,4.831,618,4.418,619,4.281,620,2.543,621,4.281,622,6.17,623,5.067]],["title/interfaces/GenerateTransaction.html",[214,1.067,624,2.545]],["body/interfaces/GenerateTransaction.html",[3,0.196,4,0.174,5,0.174,10,0.241,11,0.592,18,0.479,19,0.016,20,1.085,29,0.898,36,0.196,58,0.012,59,0.012,214,1.697,216,1.797,225,2.121,624,4.05,625,3.785,626,3.785,627,5.509,628,5.509,629,4.169,630,6.136,631,5.04,632,3.463,633,4.216,634,3.785,635,3.463]],["title/interfaces/GetDirection.html",[214,1.067,636,2.75]],["body/interfaces/GetDirection.html",[3,0.224,4,0.199,5,0.199,10,0.276,11,0.642,18,0.429,19,0.015,36,0.224,58,0.013,59,0.013,214,1.534,216,2.052,225,2.307,513,4.28,515,4.28,636,4.748,637,4.814,638,4.814]],["title/controllers/HealthController.html",[639,2.545,640,2.75]],["body/controllers/HealthController.html",[0,0.128,3,0.205,4,0.182,5,0.182,10,0.252,13,1.366,19,0.016,23,0.674,30,1.098,34,0.623,36,0.205,58,0.012,59,0.012,212,1.96,237,4.914,238,3.124,246,2.145,303,2.145,389,2.248,551,2.932,639,3.347,640,4.496,641,4.403,642,4.403,643,6.233,644,5.087,645,5.087,646,4.403,647,6.325,648,6.325,649,6.325,650,3.953,651,5.087,652,5.087,653,4.403,654,5.087,655,5.087,656,5.087]],["title/modules/HealthModule.html",[200,1.709,232,2.545]],["body/modules/HealthModule.html",[0,0.138,3,0.219,4,0.195,5,0.195,19,0.016,34,0.668,36,0.219,58,0.013,59,0.013,200,2.915,202,2.802,211,3.346,212,2.1,232,4.341,238,4.357,323,5.71,324,4.234,640,5.044,650,4.234,657,5.449,658,6.597]],["title/interfaces/Http.html",[214,1.067,220,2.375]],["body/interfaces/Http.html",[3,0.225,4,0.199,5,0.199,10,0.277,11,0.643,18,0.43,19,0.015,36,0.225,58,0.013,59,0.013,214,1.539,216,2.059,220,4.11,225,2.309,386,6.434,387,6.434,659,4.831]],["title/entities/Location.html",[264,1.367,432,1.989]],["body/entities/Location.html",[0,0.09,3,0.143,4,0.127,5,0.127,10,0.177,11,0.48,12,0.799,18,0.473,19,0.016,20,0.95,23,0.905,29,0.729,34,0.596,35,0.596,36,0.143,57,1.95,58,0.01,59,0.01,240,2.438,246,2.879,255,2.881,256,2.107,264,1.766,266,1.503,274,2.815,279,4.854,280,2.189,295,2.879,302,3.051,303,1.503,307,2.346,309,2.534,311,2.055,312,2.325,432,3.679,433,4.116,434,4.116,435,4.326,577,3.798,612,3.455,660,3.086,661,5.771,662,5.771,663,4.484,664,4.484,665,4.998,666,3.565,667,3.565,668,3.565,669,3.565,670,3.565,671,4.326,672,3.565,673,4.326,674,3.565,675,3.883,676,3.565,677,4.326,678,3.565,679,4.447,680,2.77,681,2.77]],["title/classes/LocationDto.html",[0,0.098,580,2.545]],["body/classes/LocationDto.html",[0,0.141,2,0.658,3,0.113,4,0.1,5,0.1,10,0.139,11,0.404,18,0.466,19,0.016,20,0.874,23,0.667,34,0.456,36,0.169,43,0.875,58,0.008,59,0.008,183,1.31,225,2.088,246,2.124,256,2.525,262,2.987,263,1.846,274,2.457,275,3.85,280,1.723,302,3.179,303,1.183,312,2.532,313,1.302,432,2.875,433,4.773,434,4.773,530,2.253,552,3.689,576,1.995,580,4.136,581,1.995,584,3.756,587,5.322,589,4.345,590,5.421,592,4.884,597,2.18,598,2.18,599,2.18,600,2.18,601,2.18,603,2.18,605,3.913,606,3.913,607,3.913,608,2.18,609,2.18,610,3.913,611,3.913,614,1.617,615,2.18,663,3.913,675,4.345,681,4.345,682,4.345,683,3.637,684,4.201,685,4.201,686,4.201,687,2.806,688,4.84,689,2.806,690,3.637,691,2.806,692,4.84,693,2.806,694,3.637,695,2.806,696,4.345,697,2.806,698,4.359,699,2.429,700,2.429,701,2.429,702,1.723,703,1.723,704,2.429,705,1.723,706,2.18]],["title/classes/MapBox.html",[0,0.098,707,2.75]],["body/classes/MapBox.html",[0,0.097,2,0.899,3,0.154,4,0.137,5,0.137,10,0.19,12,0.613,13,1.136,15,1.296,18,0.246,19,0.016,20,1.013,23,0.508,28,0.863,29,0.56,30,0.828,31,1.453,34,0.543,36,0.154,37,0.863,58,0.01,59,0.01,89,2.212,216,1.415,312,1.546,385,2.927,389,2.853,433,4.248,434,4.248,510,2.356,513,3.721,514,2.356,515,3.721,555,2.356,560,2.525,595,3.739,636,4.266,703,3.23,705,3.964,707,4.266,708,4.552,709,3.321,710,6.456,711,5.26,712,3.837,713,5.26,714,5.26,715,5.26,716,6.456,717,6.456,718,4.087,719,3.837,720,2.981,721,4.552,722,3.321,723,3.321,724,3.321,725,3.321,726,3.837,727,3.837,728,3.837,729,3.837,730,3.321,731,3.837,732,3.837,733,3.837,734,3.837,735,2.981,736,3.837]],["title/entities/Payment.html",[264,1.367,620,1.989]],["body/entities/Payment.html",[0,0.078,3,0.124,4,0.11,5,0.11,10,0.153,11,0.433,12,0.85,18,0.469,19,0.016,20,0.626,23,0.861,29,0.853,34,0.564,35,0.515,36,0.124,57,2.027,58,0.009,59,0.009,82,3.896,90,3.201,111,3.896,183,1.403,190,3.18,191,3.822,225,1.751,240,2.196,246,2.741,255,3.373,256,2.625,264,1.088,266,1.898,274,3.037,275,3.533,276,2.027,295,3.163,302,3.171,303,1.299,307,2.027,309,2.189,311,1.775,312,2.508,313,2.468,448,3.896,584,3.373,593,4.546,620,3.009,623,3.781,629,3.533,664,2.393,679,3.2,737,2.666,738,5.32,739,3.08,740,5.065,741,5.065,742,5.065,743,4.159,744,3.08,745,2.393,746,5.199,747,3.08,748,3.08,749,5.217,750,2.393,751,3.08,752,3.08,753,4.501,754,4.501,755,3.896,756,3.896,757,3.08,758,3.08,759,4.501,760,3.08,761,2.393,762,2.666,763,3.08,764,3.08,765,3.08]],["title/classes/PaymentGateway.html",[0,0.098,766,2.75]],["body/classes/PaymentGateway.html",[0,0.074,2,0.688,3,0.118,4,0.105,5,0.105,10,0.145,11,0.418,12,0.469,13,0.938,15,1.497,18,0.332,19,0.016,21,0.716,22,0.716,23,0.847,28,0.66,29,0.428,30,1.117,31,1.438,34,0.468,36,0.118,37,1.286,58,0.009,59,0.009,89,3.683,212,1.13,216,1.082,223,3.761,225,0.878,291,2.539,385,2.788,389,2.285,539,3.175,551,3.683,555,3.175,556,3.137,559,1.931,560,3.761,561,2.28,620,1.509,624,3.761,631,2.086,632,3.676,635,3.087,718,4.741,723,4.476,724,2.539,725,2.539,730,4.476,735,4.018,746,2.086,766,3.087,767,5.137,768,2.28,769,4.948,770,4.343,771,5.716,772,4.343,773,4.343,774,2.934,775,4.343,776,2.934,777,2.086,778,2.934,779,2.934,780,2.539,781,2.539,782,2.539,783,2.539,784,3.759,785,3.375,786,2.934,787,2.934,788,2.934,789,2.934,790,2.934,791,2.934,792,2.934,793,2.934,794,2.934,795,2.934,796,2.934,797,5.171,798,4.965,799,4.965,800,2.934,801,4.343,802,4.476,803,5.171,804,4.476,805,2.934,806,2.934,807,2.934,808,2.934,809,2.539,810,2.934,811,2.934,812,2.934,813,2.934,814,2.934,815,2.934,816,2.934,817,4.343,818,2.934,819,5.171,820,4.343,821,2.934,822,2.934,823,2.934,824,2.934,825,2.934,826,2.539,827,2.539,828,2.934,829,2.934,830,2.934,831,2.934,832,2.934,833,2.934,834,2.28]],["title/interfaces/PaymentMethod.html",[214,1.067,629,2.102]],["body/interfaces/PaymentMethod.html",[3,0.203,4,0.181,5,0.181,10,0.251,11,0.606,18,0.491,19,0.016,20,1.048,36,0.203,58,0.012,59,0.012,214,1.737,216,1.865,225,2.149,624,3.326,625,3.928,626,3.928,627,3.928,628,3.928,629,3.904,630,4.375,631,3.593,632,4.879,633,5.941,634,5.582,635,5.107]],["title/injectables/PaymentService.html",[533,1.794,835,2.375]],["body/injectables/PaymentService.html",[0,0.102,3,0.162,4,0.144,5,0.144,10,0.2,12,0.869,13,1.174,15,1.329,18,0.349,19,0.016,23,0.72,28,1.223,29,0.793,30,0.87,31,1.223,34,0.656,35,0.674,36,0.162,37,0.907,58,0.011,59,0.011,183,1.918,190,2.955,191,3.339,212,1.552,216,1.486,313,1.869,385,2.652,389,1.781,507,2.322,533,2.522,535,2.474,539,3.339,541,4.335,548,2.864,549,2.322,551,2.322,552,2.072,556,2.072,595,2.864,618,4.683,620,3.388,622,4.706,623,3.865,629,2.19,749,3.131,777,3.865,835,3.339,836,3.488,837,5.437,838,4.029,839,4.029,840,5.437,841,5.437,842,4.029,843,3.131,844,3.865,845,3.488,846,4.029,847,4.029,848,4.029,849,4.029,850,4.029,851,4.029,852,4.029,853,4.029,854,4.029,855,4.029]],["title/interfaces/RateLimiting.html",[214,1.067,222,2.545]],["body/interfaces/RateLimiting.html",[3,0.224,4,0.199,5,0.199,10,0.276,11,0.642,18,0.429,19,0.015,36,0.224,58,0.013,59,0.013,214,1.534,216,2.052,222,4.395,225,2.307,392,6.427,393,6.427,856,4.814,857,4.814]],["title/classes/RenameNameColumnInRidersTable1678186681233.html",[0,0.098,858,3.005]],["body/classes/RenameNameColumnInRidersTable1678186681233.html",[0,0.11,2,1.018,3,0.175,4,0.155,5,0.155,8,1.782,9,1.992,10,0.215,11,0.55,12,1.18,13,1.235,14,2.258,15,1.564,16,1.782,17,1.782,18,0.41,19,0.016,20,0.604,21,1.061,22,1.061,23,0.847,25,1.782,26,2.363,28,1.286,29,0.834,30,1.235,31,1.528,32,1.782,34,0.393,35,0.726,36,0.175,37,1.286,38,2.203,39,1.711,57,1.782,58,0.011,59,0.011,84,3.762,413,4.443,472,4.949,858,5.276,859,5.877,860,3.761,861,4.345,862,4.345,863,4.345]],["title/entities/Request.html",[264,1.367,612,1.794]],["body/entities/Request.html",[0,0.107,3,0.114,4,0.101,5,0.101,10,0.141,11,0.408,12,1.046,18,0.471,19,0.016,21,1.035,22,1.47,23,0.837,34,0.545,35,0.475,36,0.114,53,1.874,57,1.581,58,0.008,59,0.008,67,2.207,90,3.095,99,1.461,100,1.461,190,2.304,225,1.518,240,2.068,246,2.662,256,1.198,264,1.004,266,1.788,274,3.08,285,3.295,295,3.033,298,3.014,302,3.192,303,1.198,304,3.295,305,3.295,311,1.637,312,2.544,432,2.18,462,3.67,530,2.898,549,1.637,577,1.869,581,3.999,584,2.444,593,3.295,612,2.929,614,1.637,679,3.014,703,3.115,705,3.115,720,2.207,740,3.67,741,3.67,742,3.67,743,2.019,745,2.207,746,4.488,750,2.207,761,2.207,802,4.87,864,2.459,865,4.391,866,4.677,867,4.24,868,2.841,869,4.87,870,2.841,871,4.24,872,2.841,873,2.841,874,2.841,875,2.841,876,2.841,877,2.841,878,4.24,879,2.841,880,2.841,881,4.24,882,2.841,883,4.651,884,2.841,885,2.841,886,2.841,887,2.841,888,5.465,889,2.207,890,2.841,891,3.67,892,2.459,893,2.459,894,4.24,895,2.207,896,2.841,897,2.841,898,2.841,899,2.841]],["title/controllers/RequestController.html",[639,2.545,900,2.75]],["body/controllers/RequestController.html",[0,0.058,3,0.092,4,0.082,5,0.082,10,0.113,12,0.574,13,0.775,15,1.25,18,0.23,19,0.016,23,0.475,28,0.807,29,0.523,30,0.775,31,1.13,34,0.548,36,0.092,37,0.807,58,0.007,59,0.007,89,3.616,90,1.845,114,1.513,183,1.118,212,0.88,238,1.402,242,3.105,243,3.105,244,3.105,246,1.513,264,1.268,266,0.963,270,1.75,295,1.513,303,0.963,312,2.527,385,1.75,389,1.585,530,1.445,552,1.174,556,1.845,559,3.811,560,3.811,566,4.117,567,4.117,574,3.303,584,3.616,587,4.459,612,3.258,639,1.503,642,1.977,646,1.977,653,1.977,702,3.083,703,2.203,705,2.203,777,3.569,798,5.13,799,5.13,834,4.5,843,1.775,865,3.105,883,3.149,900,2.55,901,1.977,902,4.345,903,5.13,904,1.977,905,3.588,906,2.284,907,3.588,908,2.284,909,3.588,910,3.588,911,7.167,912,3.588,913,6.602,914,5.02,915,3.588,916,5.02,917,3.588,918,3.588,919,2.284,920,2.284,921,2.284,922,3.588,923,2.284,924,3.105,925,3.588,926,2.284,927,2.284,928,2.284,929,2.284,930,2.284,931,4.431,932,4.431,933,4.431,934,4.431,935,4.431,936,1.977,937,2.721,938,1.977,939,2.284,940,2.284,941,2.284,942,2.284,943,3.588,944,3.588,945,3.588,946,3.588,947,3.588,948,3.588,949,3.588,950,3.588,951,5.02,952,5.02,953,5.02,954,3.588,955,3.588,956,3.588,957,3.588,958,3.588,959,5.791,960,3.588,961,3.588,962,3.588,963,3.588,964,3.588,965,3.588,966,3.588,967,3.105,968,3.588,969,2.284,970,3.588,971,2.284,972,2.284,973,2.284]],["title/modules/RequestModule.html",[200,1.709,206,2.545]],["body/modules/RequestModule.html",[0,0.111,3,0.176,4,0.156,5,0.156,19,0.016,34,0.657,36,0.176,58,0.011,59,0.011,200,2.54,202,2.252,203,3.124,206,5.165,207,3.53,208,2.69,209,2.69,211,2.69,212,1.688,238,3.94,239,4.466,266,1.847,270,2.137,295,2.424,506,3.791,507,2.525,530,2.316,534,4.458,549,2.525,612,2.666,620,2.956,835,4.458,900,4.561,937,4.458,938,3.791,974,3.791,975,3.791,976,4.458,977,4.458,978,4.38,979,4.38]],["title/classes/RequestRideDto.html",[0,0.098,702,2.375]],["body/classes/RequestRideDto.html",[0,0.145,2,0.698,3,0.12,4,0.106,5,0.106,10,0.148,11,0.422,18,0.461,19,0.016,20,0.893,23,0.691,34,0.472,36,0.177,43,1.369,58,0.009,59,0.009,183,1.795,225,1.922,246,2.199,256,2.589,262,3.121,263,1.959,274,2.544,275,3.901,280,1.828,302,3.241,303,1.255,312,2.588,313,1.381,432,3.157,433,4.227,434,4.227,530,2.747,552,3.735,576,2.116,580,4.371,581,3.121,582,3.8,584,3.539,587,5.103,589,3.412,590,4.77,592,4.053,597,3.412,598,3.412,599,3.412,600,3.412,601,3.412,602,2.577,603,3.412,605,4.053,606,4.053,607,4.053,608,2.313,609,2.313,610,4.053,611,4.053,614,1.716,615,2.313,663,2.313,675,3.412,681,3.412,682,4.473,683,2.577,688,4.515,690,2.577,692,4.515,694,2.577,696,3.412,698,4.515,699,2.577,700,2.577,701,2.577,702,2.696,703,3.203,704,3.8,705,3.203,706,4.053,980,2.977,981,2.977,982,2.977]],["title/injectables/RequestService.html",[533,1.794,937,2.375]],["body/injectables/RequestService.html",[0,0.052,3,0.082,4,0.073,5,0.073,10,0.101,11,0.315,12,0.658,13,0.708,15,1.19,18,0.372,19,0.016,21,0.498,22,0.498,23,0.624,28,0.925,29,0.6,30,0.708,31,1.24,34,0.602,35,0.341,36,0.082,37,1.559,54,0.947,58,0.006,59,0.006,89,3.34,90,2.115,91,2.839,182,2.422,183,1.282,190,1.109,191,1.253,212,0.786,245,1.253,264,0.721,266,0.86,270,0.995,295,2.325,385,3.339,389,1.818,416,2.332,461,1.585,513,1.891,515,2.716,530,0.822,533,1.522,535,1.253,539,2.014,547,2.924,549,1.176,551,3.34,552,2.422,555,2.893,556,3.416,559,2.158,560,3.1,561,3.196,574,3.1,577,2.158,578,2.549,579,1.766,612,3.026,620,2.115,623,2.332,627,1.585,628,1.585,629,1.109,631,1.45,632,1.45,634,1.585,635,1.45,671,1.766,673,1.766,702,3.17,703,2.014,705,1.253,706,1.585,707,1.45,720,1.585,721,1.766,722,1.766,735,2.549,755,1.766,756,1.766,766,2.924,769,4.078,777,4.284,780,2.839,798,2.549,799,2.549,804,2.839,834,2.549,835,3.558,843,1.585,844,2.332,845,1.766,866,3.196,883,1.45,895,1.585,902,2.839,903,2.549,904,2.839,924,1.766,936,1.766,937,2.526,976,3.558,977,3.558,983,1.766,984,3.28,985,2.041,986,5.513,987,3.28,988,2.041,989,3.28,990,2.041,991,4.113,992,3.28,993,4.113,994,3.28,995,1.585,996,2.041,997,2.041,998,2.041,999,1.585,1000,2.041,1001,4.711,1002,2.041,1003,2.041,1004,2.041,1005,2.041,1006,2.041,1007,2.041,1008,2.041,1009,1.766,1010,2.041,1011,2.041,1012,3.28,1013,3.56,1014,3.28,1015,3.28,1016,2.041,1017,2.041,1018,3.28,1019,2.041,1020,2.041,1021,2.041,1022,2.041,1023,2.041,1024,2.041,1025,2.041,1026,2.041,1027,4.113,1028,3.28,1029,3.28,1030,2.041,1031,2.041,1032,2.041,1033,2.041,1034,4.113,1035,4.711,1036,2.041,1037,4.113,1038,3.28,1039,2.041,1040,2.041,1041,2.041,1042,2.041,1043,3.28,1044,2.041,1045,2.041,1046,2.041,1047,2.041,1048,2.041,1049,2.041,1050,2.041,1051,2.041]],["title/entities/Rider.html",[264,1.367,530,1.558]],["body/entities/Rider.html",[0,0.112,3,0.122,4,0.108,5,0.108,10,0.15,11,0.428,12,1.137,18,0.498,19,0.016,20,1.041,23,0.857,29,0.943,34,0.56,35,0.507,36,0.122,57,2.016,58,0.009,59,0.009,98,2.572,129,2.289,225,1.935,240,2.172,246,2.727,255,3.852,256,2.998,264,1.072,266,1.279,274,3.018,275,3.514,276,1.996,277,2.566,279,4.872,280,3.799,290,3.853,296,2.357,302,3.154,303,1.279,306,3.459,307,1.996,311,1.748,312,2.492,313,2.446,389,1.341,413,3.459,415,3.459,416,4.398,417,3.459,419,4.071,530,1.793,612,3,614,1.748,677,5.028,680,2.357,1009,3.853,1052,2.626,1053,5.273,1054,5.273,1055,5.273,1056,3.034,1057,4.452,1058,3.034,1059,4.452,1060,3.034,1061,4.452,1062,3.034,1063,4.452,1064,3.034,1065,3.034,1066,3.034,1067,3.034,1068,4.452,1069,3.034,1070,3.034,1071,3.034,1072,3.034]],["title/injectables/RiderService.html",[533,1.794,976,2.375]],["body/injectables/RiderService.html",[0,0.114,3,0.182,4,0.161,5,0.161,10,0.224,12,0.937,13,1.266,15,1.406,18,0.376,19,0.016,20,0.906,23,0.777,28,1.319,29,0.855,30,0.975,31,1.319,34,0.624,35,0.755,36,0.182,37,1.016,58,0.012,59,0.012,183,1.828,212,1.74,385,2.203,389,1.996,507,2.603,530,2.877,533,2.72,535,2.773,538,4.556,539,3.601,541,4.535,545,4.556,547,3.21,548,3.21,549,2.603,551,2.603,552,2.322,555,2.773,556,2.322,565,3.509,566,3.21,567,3.21,976,3.601,1073,3.909,1074,4.516,1075,4.516,1076,5.864,1077,4.516,1078,4.516,1079,4.516]],["title/interfaces/TokenizeCard.html",[214,1.067,223,2.545]],["body/interfaces/TokenizeCard.html",[3,0.205,4,0.182,5,0.182,10,0.252,11,0.608,18,0.475,19,0.015,20,0.957,36,0.205,58,0.012,59,0.012,214,1.403,216,1.876,223,4.162,225,2.404,809,6.233,1080,4.403,1081,4.403,1082,7.201,1083,7.201,1084,7.201]],["title/entities/Trip.html",[264,1.367,295,1.631]],["body/entities/Trip.html",[0,0.086,3,0.086,4,0.076,5,0.076,10,0.106,11,0.327,12,1.106,18,0.491,19,0.016,21,0.831,22,0.522,23,0.858,29,0.894,34,0.572,35,0.357,36,0.086,42,2.421,53,1.505,57,1.755,58,0.007,59,0.007,90,2.717,96,1.963,165,2.947,195,2.947,225,1.684,240,1.661,245,3.626,246,2.73,255,3.244,256,2.787,264,0.756,265,4.427,266,1.436,270,3.282,274,3.081,275,3.331,276,1.407,277,2.789,285,3.76,286,2.947,295,3.077,298,3.44,302,3.158,303,0.902,304,3.297,305,4.106,307,1.407,308,1.851,311,1.232,312,2.545,313,2.611,419,3.184,432,1.751,485,2.947,486,2.947,487,2.947,488,2.947,489,2.947,529,1.851,530,1.949,577,2.792,578,3.297,584,1.963,612,2.93,614,1.232,620,3.459,664,1.661,679,3.016,680,1.661,745,1.661,746,4.001,750,1.661,761,1.661,762,1.851,866,3.297,869,2.947,888,2.947,891,1.851,893,3.673,895,3.297,999,4.588,1085,1.851,1086,4.243,1087,3.405,1088,3.405,1089,2.138,1090,2.138,1091,2.138,1092,2.138,1093,2.138,1094,2.138,1095,4.839,1096,3.405,1097,2.138,1098,3.405,1099,4.839,1100,2.138,1101,3.405,1102,2.138,1103,2.138,1104,2.138,1105,2.138,1106,3.405,1107,2.138,1108,2.947,1109,2.138,1110,2.138,1111,2.947,1112,2.138,1113,2.138,1114,2.138,1115,2.138,1116,2.138,1117,2.138,1118,2.138,1119,2.138,1120,2.138]],["title/injectables/TripService.html",[533,1.794,977,2.375]],["body/injectables/TripService.html",[0,0.092,3,0.147,4,0.13,5,0.13,10,0.181,12,0.934,13,1.096,15,1.485,18,0.375,19,0.016,20,0.812,23,0.774,28,1.314,29,0.852,30,1.096,31,1.421,34,0.623,35,0.609,36,0.147,37,1.142,58,0.01,59,0.01,114,1.537,183,1.583,212,1.405,245,2.239,256,1.537,266,1.537,270,2.477,295,3.034,297,3.155,385,2.849,389,2.244,507,2.101,527,3.155,530,1.469,533,2.355,534,4.332,535,2.239,538,3.945,539,3.117,541,4.157,545,3.945,547,2.591,548,2.591,549,2.101,551,2.926,552,2.61,555,2.239,556,3.003,565,2.833,566,2.591,567,2.591,612,3.19,892,3.155,977,3.117,1013,4.394,1108,3.155,1121,3.155,1122,5.077,1123,3.646,1124,3.646,1125,5.077,1126,5.077,1127,3.646,1128,3.646,1129,3.646,1130,3.646,1131,3.646,1132,3.646,1133,3.646,1134,3.646,1135,5.077]],["title/coverage.html",[1136,4.109]],["body/coverage.html",[0,0.193,1,1.904,5,0.088,6,2.121,7,2.121,18,0.157,19,0.016,39,0.733,58,0.007,59,0.007,60,1.904,61,2.121,62,2.121,70,1.904,71,2.121,72,2.121,105,1.904,106,2.121,107,2.121,115,1.904,116,2.121,117,2.121,136,1.904,137,2.121,138,2.121,142,1.904,143,2.121,144,2.121,148,1.904,149,2.121,150,2.121,156,1.904,157,2.121,158,2.121,170,1.904,171,2.121,172,2.121,176,1.904,177,2.121,178,2.121,214,1.891,215,1.742,217,2.121,218,2.945,220,1.505,222,1.613,223,1.613,224,1.742,240,1.196,241,2.121,264,2.197,265,1.613,267,2.121,270,1.196,281,1.904,295,1.034,320,1.904,397,1.904,398,2.121,399,2.121,406,1.904,407,2.121,408,2.121,426,1.904,427,2.121,428,2.121,432,1.26,437,1.904,438,2.121,439,2.121,453,1.904,454,2.121,455,2.121,466,1.904,467,2.121,468,2.121,475,1.904,476,2.121,477,2.121,498,2.121,508,1.904,510,2.328,511,2.945,512,2.945,514,2.328,516,2.121,530,0.987,533,2.616,534,1.505,536,2.121,556,1.26,568,1.904,569,2.121,570,2.121,574,1.613,575,2.121,576,3.295,580,1.613,595,5.7,612,1.137,618,1.742,619,2.121,620,1.949,621,2.121,624,1.613,625,2.945,626,2.945,629,1.332,636,1.742,637,2.121,638,2.121,639,2.494,640,1.742,641,2.121,659,2.121,660,2.121,682,2.945,702,1.505,707,1.742,708,2.121,709,2.121,737,2.121,766,1.742,767,1.904,768,1.904,835,1.505,836,2.121,844,1.742,856,2.121,857,2.121,858,1.904,859,2.121,860,2.121,864,2.121,889,1.904,900,1.742,901,2.121,937,1.505,976,1.505,977,1.505,983,2.121,995,1.904,1052,2.121,1073,2.121,1080,2.121,1081,2.121,1085,2.121,1121,2.121,1136,1.904,1137,2.451,1138,2.451,1139,2.451,1140,2.121,1141,2.121,1142,6.218,1143,7.201,1144,4.053,1145,4.635,1146,5.216,1147,7.623,1148,5.963,1149,2.451,1150,3.791,1151,3.791,1152,2.451,1153,2.451,1154,3.281,1155,2.121,1156,2.451,1157,2.121,1158,2.451]],["title/dependencies.html",[203,2.53,1159,2.792]],["body/dependencies.html",[0,0.152,19,0.016,35,0.79,43,1.474,58,0.012,59,0.012,203,2.569,212,1.822,220,2.903,263,3.111,303,1.994,319,4.092,322,4.092,324,3.674,327,4.092,329,3.674,330,5.76,333,4.092,380,4.092,507,2.725,614,2.725,650,3.674,718,3.674,1160,4.728,1161,4.728,1162,4.728,1163,4.728,1164,4.728,1165,4.728,1166,4.728,1167,7.012,1168,4.728,1169,6.04,1170,4.728,1171,4.728,1172,4.728,1173,4.728,1174,4.728,1175,4.728,1176,4.728,1177,4.728,1178,4.728,1179,4.728,1180,4.728,1181,4.728,1182,4.728,1183,4.728,1184,4.728,1185,4.728,1186,4.728,1187,4.728,1188,4.728,1189,4.728,1190,4.728,1191,4.728]],["title/miscellaneous/enumerations.html",[1192,1.981,1193,4.029]],["body/miscellaneous/enumerations.html",[10,0.208,19,0.016,22,1.949,58,0.011,59,0.011,79,4.342,80,4.342,87,4.837,88,4.342,89,3.221,240,2.048,446,4.837,447,4.837,461,4.342,463,4.837,483,4.837,484,4.837,513,2.419,515,2.419,629,3.037,749,4.342,767,3.261,768,4.342,781,4.837,782,3.633,783,3.633,784,4.837,785,4.342,883,3.972,999,4.342,1144,3.261,1192,2.577,1193,3.633,1194,5.589,1195,4.198,1196,5.589,1197,5.589,1198,3.633,1199,6.282,1200,5.589,1201,7.173,1202,4.198,1203,4.198,1204,4.198,1205,5.589,1206,4.198,1207,4.198,1208,4.198,1209,5.589,1210,5.589,1211,5.589,1212,4.198,1213,4.198,1214,5.589]],["title/miscellaneous/functions.html",[1192,1.981,1215,4.029]],["body/miscellaneous/functions.html",[10,0.302,19,0.014,58,0.014,59,0.014,1155,5.27,1157,6.435,1192,3.739,1215,5.27,1216,6.089]],["title/index.html",[10,0.16,1111,2.792,1217,3.226]],["body/index.html",[4,0.165,19,0.016,58,0.012,59,0.012,234,3.998,288,3.589,312,1.861,331,3.998,346,3.998,541,3.04,559,3.04,967,3.998,1136,3.589,1218,4.62,1219,4.62,1220,5.95,1221,4.62,1222,4.62,1223,4.62,1224,4.62,1225,4.62,1226,6.582,1227,4.62,1228,4.62,1229,4.62,1230,7.492,1231,4.62,1232,4.62,1233,7.365,1234,4.62,1235,4.62,1236,5.95,1237,4.62,1238,4.62,1239,4.62,1240,5.95,1241,5.95,1242,4.62,1243,4.62,1244,4.62,1245,5.95,1246,5.95,1247,4.62,1248,4.62,1249,4.62,1250,4.62,1251,4.62,1252,3.998,1253,4.62,1254,4.62,1255,4.62,1256,4.62,1257,4.62,1258,4.62,1259,4.62,1260,4.62,1261,3.998,1262,4.62,1263,4.62,1264,4.62,1265,4.62,1266,4.62,1267,4.62]],["title/modules.html",[202,2.719]],["body/modules.html",[19,0.013,58,0.013,59,0.013,201,3.698,202,2.89,206,3.698,227,3.995,230,3.698,231,3.698,232,3.698,558,4.865,1252,6.592,1268,7.616,1269,7.616,1270,7.731,1271,5.621]],["title/overview.html",[1272,4.578]],["body/overview.html",[2,1.05,19,0.016,58,0.011,59,0.011,201,4.688,202,2.302,203,3.169,204,3.876,205,3.876,206,5.156,207,3.581,208,2.75,209,2.75,216,1.652,227,5.468,228,3.876,229,3.876,230,4.962,231,4.962,232,4.267,238,2.75,266,1.888,314,3.876,315,3.876,503,3.876,504,3.876,534,3.982,535,2.75,585,3.876,696,3.479,743,3.183,835,3.982,937,3.982,974,3.876,975,3.876,976,3.982,977,3.982,1272,3.876,1273,4.478,1274,4.478,1275,4.478]],["title/properties.html",[11,0.447,1159,2.792]],["body/properties.html",[11,0.512,19,0.015,35,0.89,58,0.013,59,0.013,237,4.136,288,4.136,312,2.144,329,4.136,643,4.607,785,4.136,903,5.053,1261,4.607,1276,5.323,1277,5.323,1278,5.323,1279,7.315,1280,7.023,1281,5.323,1282,5.323,1283,4.607,1284,5.323,1285,5.323,1286,5.323,1287,5.323,1288,5.323,1289,5.323,1290,5.323,1291,6.504,1292,5.323,1293,5.323,1294,5.323,1295,5.323,1296,5.323,1297,5.323]],["title/miscellaneous/variables.html",[1192,1.981,1298,4.029]],["body/miscellaneous/variables.html",[10,0.2,18,0.35,19,0.016,20,0.758,21,1.77,22,1.77,43,1.259,58,0.011,59,0.011,190,2.195,219,2.871,221,2.871,225,2.206,266,2.297,313,1.874,320,4.788,340,5.334,385,2.657,389,1.785,499,3.496,500,3.496,502,3.496,508,4.232,510,3.344,513,3.139,514,3.344,515,3.139,556,2.8,743,2.871,826,4.714,827,3.496,844,3.872,889,4.232,995,4.232,1140,3.496,1141,4.714,1144,3.139,1154,3.496,1192,2.48,1198,5.709,1283,3.496,1298,3.496,1299,5.447,1300,4.039,1301,5.447,1302,4.039,1303,5.447,1304,4.039,1305,4.039,1306,4.039,1307,4.039,1308,4.039,1309,4.039,1310,4.039,1311,4.039,1312,4.039,1313,4.039,1314,4.039,1315,4.039,1316,4.039,1317,4.039,1318,4.039,1319,4.039,1320,4.039,1321,4.039,1322,4.039,1323,5.447,1324,4.039,1325,5.447,1326,4.039,1327,4.039]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":595,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/MapBox.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["0'})@max(10",{"_index":591,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["0.0.1",{"_index":1277,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":952,"title":{},"body":{"controllers/RequestController.html":{}}}],["08t19:35:32.441z",{"_index":953,"title":{},"body":{"controllers/RequestController.html":{}}}],["1",{"_index":1041,"title":{},"body":{"injectables/RequestService.html":{}}}],["1.3.4",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":593,"title":{},"body":{"classes/FinishRideDto.html":{},"entities/Payment.html":{},"entities/Request.html":{}}}],["10.1.0",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":291,"title":{},"body":{"entities/Car.html":{},"classes/PaymentGateway.html":{}}}],["1000",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1000).tofixed(1",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":1275,"title":{},"body":{"overview.html":{}}}],["150",{"_index":677,"title":{},"body":{"entities/Location.html":{},"entities/Rider.html":{}}}],["17.8.3",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["180",{"_index":692,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["180'})@max(180",{"_index":691,"title":{},"body":{"classes/LocationDto.html":{}}}],["2",{"_index":743,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2023",{"_index":951,"title":{},"body":{"controllers/RequestController.html":{}}}],["23.540,00",{"_index":950,"title":{},"body":{"controllers/RequestController.html":{}}}],["23.6573",{"_index":683,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["250",{"_index":1063,"title":{},"body":{"entities/Rider.html":{}}}],["26",{"_index":1274,"title":{},"body":{"overview.html":{}}}],["2})@transform",{"_index":873,"title":{},"body":{"entities/Request.html":{}}}],["3.1.2",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["31a46e86ee63",{"_index":958,"title":{},"body":{"controllers/RequestController.html":{}}}],["3500",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4.0.0",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":960,"title":{},"body":{"controllers/RequestController.html":{}}}],["401821",{"_index":694,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["404",{"_index":964,"title":{},"body":{"controllers/RequestController.html":{}}}],["41baddbdae8f",{"_index":601,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["432e",{"_index":599,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["4d05",{"_index":956,"title":{},"body":{"controllers/RequestController.html":{}}}],["5",{"_index":585,"title":{},"body":{"classes/FinishRideDto.html":{},"overview.html":{}}}],["50",{"_index":281,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"coverage.html":{}}}],["500",{"_index":966,"title":{},"body":{"controllers/RequestController.html":{}}}],["6",{"_index":696,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"overview.html":{}}}],["6.158212",{"_index":945,"title":{},"body":{"controllers/RequestController.html":{}}}],["6.2.0",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["6.2567865",{"_index":947,"title":{},"body":{"controllers/RequestController.html":{}}}],["6.9.0",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["60).tofixed(1",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1273,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["75.590211",{"_index":946,"title":{},"body":{"controllers/RequestController.html":{}}}],["75.604705",{"_index":944,"title":{},"body":{"controllers/RequestController.html":{}}}],["77.6573",{"_index":690,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["8.3.3",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":688,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["90'})@max(90",{"_index":687,"title":{},"body":{"classes/LocationDto.html":{}}}],["94ad",{"_index":598,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["9db1",{"_index":600,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["_req",{"_index":375,"title":{},"body":{"modules/ConfigModule.html":{}}}],["_res",{"_index":376,"title":{},"body":{"modules/ConfigModule.html":{}}}],["a378f7e1",{"_index":597,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["acceptance",{"_index":801,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["acceptance_token",{"_index":823,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["acceptancetoken",{"_index":820,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["accepted",{"_index":461,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["access_token",{"_index":728,"title":{},"body":{"classes/MapBox.html":{}}}],["action",{"_index":55,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["add",{"_index":41,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["addrelationbetweendriversandcars.ts",{"_index":7,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"coverage.html":{}}}],["addrelationbetweendriversandcars.ts:13",{"_index":27,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}}}],["addrelationbetweendriversandcars.ts:4",{"_index":24,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}}}],["addrelationbetweendriversandcars.ts:6",{"_index":33,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}}}],["addrelationbetweendriversandcars1678187764454",{"_index":1,"title":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"coverage.html":{}}}],["addrelationbetweenridersandpaymentmethods.ts",{"_index":62,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"coverage.html":{}}}],["addrelationbetweenridersandpaymentmethods.ts:13",{"_index":64,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}}}],["addrelationbetweenridersandpaymentmethods.ts:4",{"_index":63,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}}}],["addrelationbetweenridersandpaymentmethods.ts:6",{"_index":65,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}}}],["addrelationbetweenridersandpaymentmethods1678185298028",{"_index":60,"title":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"coverage.html":{}}}],["aea4",{"_index":955,"title":{},"body":{"controllers/RequestController.html":{}}}],["again",{"_index":834,"title":{},"body":{"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["alter",{"_index":45,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse.ts",{"_index":72,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"coverage.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse.ts:18",{"_index":74,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse.ts:4",{"_index":73,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse.ts:6",{"_index":75,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["alterpaymentstabletoaddfieldsfromgatewayresponse1678295934312",{"_index":70,"title":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"coverage.html":{}}}],["alterpaymentstabletoaddtransactionid.ts",{"_index":107,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"coverage.html":{}}}],["alterpaymentstabletoaddtransactionid.ts:13",{"_index":109,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{}}}],["alterpaymentstabletoaddtransactionid.ts:4",{"_index":108,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{}}}],["alterpaymentstabletoaddtransactionid.ts:6",{"_index":110,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{}}}],["alterpaymentstabletoaddtransactionid1678308519422",{"_index":105,"title":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{}},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"coverage.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename.ts",{"_index":117,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"coverage.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename.ts:30",{"_index":119,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename.ts:4",{"_index":118,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename.ts:6",{"_index":120,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{}}}],["alterrequestentitytorenamefieldswithamoresuitablename1678223649061",{"_index":115,"title":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{}},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"coverage.html":{}}}],["alterrequesttabletohandlegeometryfields.ts",{"_index":138,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"coverage.html":{}}}],["alterrequesttabletohandlegeometryfields.ts:11",{"_index":140,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{}}}],["alterrequesttabletohandlegeometryfields.ts:4",{"_index":139,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{}}}],["alterrequesttabletohandlegeometryfields.ts:6",{"_index":141,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{}}}],["alterrequesttabletohandlegeometryfields1678285496704",{"_index":136,"title":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{}},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"coverage.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation.ts",{"_index":144,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"coverage.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation.ts:17",{"_index":146,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation.ts:4",{"_index":145,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation.ts:6",{"_index":147,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["alterrequesttabletoimplementspatialcolumntypesforlocation1678276720338",{"_index":142,"title":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"coverage.html":{}}}],["alterrequesttabletoremovesurge.ts",{"_index":150,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"coverage.html":{}}}],["alterrequesttabletoremovesurge.ts:10",{"_index":152,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{}}}],["alterrequesttabletoremovesurge.ts:4",{"_index":151,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{}}}],["alterrequesttabletoremovesurge.ts:6",{"_index":153,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{}}}],["alterrequesttabletoremovesurge1678280557690",{"_index":148,"title":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{}},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"coverage.html":{}}}],["altertripstabletofixrelationissues.ts",{"_index":158,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"coverage.html":{}}}],["altertripstabletofixrelationissues.ts:17",{"_index":160,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["altertripstabletofixrelationissues.ts:4",{"_index":159,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["altertripstabletofixrelationissues.ts:6",{"_index":161,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["altertripstabletofixrelationissues1678223295357",{"_index":156,"title":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"coverage.html":{}}}],["altertripstabletohandlegeolocationfields.ts",{"_index":172,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"coverage.html":{}}}],["altertripstabletohandlegeolocationfields.ts:15",{"_index":174,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["altertripstabletohandlegeolocationfields.ts:4",{"_index":173,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["altertripstabletohandlegeolocationfields.ts:6",{"_index":175,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["altertripstabletohandlegeolocationfields1678290428231",{"_index":170,"title":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"coverage.html":{}}}],["altertripstabletohandlepayments.ts",{"_index":178,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"coverage.html":{}}}],["altertripstabletohandlepayments.ts:21",{"_index":180,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["altertripstabletohandlepayments.ts:4",{"_index":179,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["altertripstabletohandlepayments.ts:6",{"_index":181,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["altertripstabletohandlepayments1678221796470",{"_index":176,"title":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"coverage.html":{}}}],["amazing",{"_index":1253,"title":{},"body":{"index.html":{}}}],["american_express",{"_index":447,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"miscellaneous/enumerations.html":{}}}],["amount_in_cents",{"_index":824,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["amountincents",{"_index":627,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["api",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["api/**/entities",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/commons",{"_index":762,"title":{},"body":{"entities/Payment.html":{},"entities/Trip.html":{}}}],["api/libs/interfaces",{"_index":226,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["api/request/entities",{"_index":680,"title":{},"body":{"entities/Location.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["apibadrequestresponse",{"_index":933,"title":{},"body":{"controllers/RequestController.html":{}}}],["apicreatedresponse",{"_index":932,"title":{},"body":{"controllers/RequestController.html":{}}}],["apiinternalservererrorresponse",{"_index":935,"title":{},"body":{"controllers/RequestController.html":{}}}],["apimodule",{"_index":201,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apinotfoundresponse",{"_index":934,"title":{},"body":{"controllers/RequestController.html":{}}}],["apioperation",{"_index":931,"title":{},"body":{"controllers/RequestController.html":{}}}],["apiproperty",{"_index":302,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["apiproperty({description",{"_index":274,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["apitags",{"_index":646,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RequestController.html":{}}}],["apitags('health",{"_index":651,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('request",{"_index":940,"title":{},"body":{"controllers/RequestController.html":{}}}],["app",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app.config",{"_index":334,"title":{},"body":{"modules/ConfigModule.html":{}}}],["app_guard",{"_index":318,"title":{},"body":{"modules/ConfigModule.html":{}}}],["appconfig",{"_index":215,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["application/json",{"_index":793,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["applications",{"_index":1225,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":227,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":87,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"miscellaneous/enumerations.html":{}}}],["async",{"_index":15,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["author",{"_index":1261,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":789,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["automatically",{"_index":1022,"title":{},"body":{"injectables/RequestService.html":{}}}],["available",{"_index":558,"title":{},"body":{"injectables/DriverService.html":{},"modules.html":{}}}],["await",{"_index":37,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["axios",{"_index":718,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"dependencies.html":{}}}],["axios.create",{"_index":724,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{}}}],["axiosinstance",{"_index":723,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{}}}],["axiosinstance.get(`${pickuplocation};${dropofflocation",{"_index":731,"title":{},"body":{"classes/MapBox.html":{}}}],["b584",{"_index":957,"title":{},"body":{"controllers/RequestController.html":{}}}],["backers",{"_index":1254,"title":{},"body":{"index.html":{}}}],["bad",{"_index":963,"title":{},"body":{"controllers/RequestController.html":{}}}],["banned",{"_index":522,"title":{},"body":{"entities/Driver.html":{}}}],["base",{"_index":240,"title":{"classes/Base.html":{}},"body":{"classes/Base.html":{},"entities/Car.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["base.entity",{"_index":307,"title":{},"body":{"entities/Car.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["baseurl",{"_index":725,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{}}}],["bearer",{"_index":790,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["between",{"_index":713,"title":{},"body":{"classes/MapBox.html":{}}}],["body",{"_index":927,"title":{},"body":{"controllers/RequestController.html":{}}}],["boolean",{"_index":423,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"interfaces/DatabaseConfig.html":{},"entities/Driver.html":{},"interfaces/GeneratePaymentReference.html":{}}}],["bootstrap",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["box.interface.ts",{"_index":638,"title":{},"body":{"interfaces/GetDirection.html":{},"coverage.html":{}}}],["box.lib.ts",{"_index":709,"title":{},"body":{"classes/MapBox.html":{},"coverage.html":{}}}],["box.lib.ts:16",{"_index":712,"title":{},"body":{"classes/MapBox.html":{}}}],["browse",{"_index":1270,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1268,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1293,"title":{},"body":{"properties.html":{}}}],["building",{"_index":1221,"title":{},"body":{"index.html":{}}}],["cache",{"_index":337,"title":{},"body":{"modules/ConfigModule.html":{}}}],["calculatefare",{"_index":995,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatefare(distance",{"_index":1012,"title":{},"body":{"injectables/RequestService.html":{}}}],["cannot_create_token",{"_index":818,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["capacity",{"_index":268,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["car",{"_index":265,"title":{"entities/Car.html":{}},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Trip.html":{},"coverage.html":{}}}],["car.driver",{"_index":519,"title":{},"body":{"entities/Driver.html":{}}}],["car.entity",{"_index":529,"title":{},"body":{"entities/Driver.html":{},"entities/Trip.html":{}}}],["car.trips",{"_index":1118,"title":{},"body":{"entities/Trip.html":{}}}],["car.trips)@joincolumn({name",{"_index":1090,"title":{},"body":{"entities/Trip.html":{}}}],["car_id",{"_index":489,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["card",{"_index":632,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["card.interface.ts",{"_index":1081,"title":{},"body":{"interfaces/TokenizeCard.html":{},"coverage.html":{}}}],["card_expiration_date",{"_index":451,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["card_holder",{"_index":815,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["card_holder_name",{"_index":449,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["card_type",{"_index":450,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["cardholder",{"_index":1082,"title":{},"body":{"interfaces/TokenizeCard.html":{}}}],["cards",{"_index":782,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{}}}],["cardtype",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cars",{"_index":40,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/CreateCarsTable1678187456870.html":{},"entities/Driver.html":{}}}],["cars\"(\"id",{"_index":497,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["car})@manytoone(undefined",{"_index":1089,"title":{},"body":{"entities/Trip.html":{}}}],["cascade",{"_index":53,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"entities/Car.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["cascade'})@joincolumn({name",{"_index":286,"title":{},"body":{"entities/Car.html":{},"entities/Trip.html":{}}}],["cash",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch",{"_index":735,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["change",{"_index":1023,"title":{},"body":{"injectables/RequestService.html":{}}}],["character",{"_index":112,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRidersTable1678182352019.html":{}}}],["charge",{"_index":910,"title":{},"body":{"controllers/RequestController.html":{}}}],["check",{"_index":643,"title":{},"body":{"controllers/HealthController.html":{},"properties.html":{}}}],["class",{"_index":0,"title":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"classes/RequestRideDto.html":{}},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"modules/DatabaseModule.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"classes/RequestRideDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":928,"title":{},"body":{"controllers/RequestController.html":{}}}],["cluster_apimodule",{"_index":204,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_imports",{"_index":205,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":314,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":315,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":503,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":504,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_requestmodule",{"_index":974,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_providers",{"_index":975,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["co",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":681,"title":{},"body":{"entities/Location.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["code'})@column({length",{"_index":676,"title":{},"body":{"entities/Location.html":{}}}],["color",{"_index":269,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["column",{"_index":57,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"entities/Car.html":{},"entities/Driver.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Location.html":{},"entities/Payment.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["column('geometry",{"_index":891,"title":{},"body":{"entities/Request.html":{},"entities/Trip.html":{}}}],["comma",{"_index":717,"title":{},"body":{"classes/MapBox.html":{}}}],["commit",{"_index":1286,"title":{},"body":{"properties.html":{}}}],["commons",{"_index":720,"title":{},"body":{"classes/MapBox.html":{},"entities/Request.html":{},"injectables/RequestService.html":{}}}],["commons/enums",{"_index":843,"title":{},"body":{"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["commons/helpers",{"_index":845,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/RequestService.html":{}}}],["complete",{"_index":1088,"title":{},"body":{"entities/Trip.html":{}}}],["completed",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["config",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["config.interface.ts",{"_index":218,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["configmodule",{"_index":230,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":320,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database_host",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_name",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_password",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_port",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_username",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('http",{"_index":388,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get('ratelimiting",{"_index":394,"title":{},"body":{"modules/ConfigModule.html":{}}}],["connection_options",{"_index":508,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":385,"title":{},"body":{"modules/ConfigModule.html":{},"injectables/DriverService.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":46,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["constructor",{"_index":539,"title":{},"body":{"injectables/DriverService.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["constructor(datasource",{"_index":985,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(driverrepository",{"_index":540,"title":{},"body":{"injectables/DriverService.html":{}}}],["constructor(paymentrepository",{"_index":838,"title":{},"body":{"injectables/PaymentService.html":{}}}],["constructor(private",{"_index":653,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RequestController.html":{}}}],["constructor(riderrepository",{"_index":1074,"title":{},"body":{"injectables/RiderService.html":{}}}],["constructor(triprepository",{"_index":1123,"title":{},"body":{"injectables/TripService.html":{}}}],["content",{"_index":792,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["context",{"_index":377,"title":{},"body":{"modules/ConfigModule.html":{}}}],["controller",{"_index":639,"title":{"controllers/HealthController.html":{},"controllers/RequestController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/RequestController.html":{},"coverage.html":{}}}],["controller('health",{"_index":652,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('request",{"_index":941,"title":{},"body":{"controllers/RequestController.html":{}}}],["controllers",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"overview.html":{}}}],["coordinates",{"_index":1001,"title":{},"body":{"injectables/RequestService.html":{}}}],["cop",{"_index":827,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/variables.html":{}}}],["coreconfigmodule",{"_index":321,"title":{},"body":{"modules/ConfigModule.html":{}}}],["coreconfigmodule.forroot",{"_index":335,"title":{},"body":{"modules/ConfigModule.html":{}}}],["coverage",{"_index":1136,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":182,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/RequestService.html":{}}}],["createcarstable.ts",{"_index":399,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{},"coverage.html":{}}}],["createcarstable.ts:12",{"_index":401,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["createcarstable.ts:4",{"_index":400,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["createcarstable.ts:6",{"_index":402,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["createcarstable1678187456870",{"_index":397,"title":{"classes/CreateCarsTable1678187456870.html":{}},"body":{"classes/CreateCarsTable1678187456870.html":{},"coverage.html":{}}}],["created",{"_index":924,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["created_at",{"_index":185,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["createdat",{"_index":242,"title":{},"body":{"classes/Base.html":{},"controllers/RequestController.html":{}}}],["createdatecolumn",{"_index":259,"title":{},"body":{"classes/Base.html":{}}}],["createdatecolumn({name",{"_index":247,"title":{},"body":{"classes/Base.html":{}}}],["createdriverstable.ts",{"_index":408,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"coverage.html":{}}}],["createdriverstable.ts:12",{"_index":410,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["createdriverstable.ts:4",{"_index":409,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["createdriverstable.ts:6",{"_index":411,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["createdriverstable1678187115666",{"_index":406,"title":{"classes/CreateDriversTable1678187115666.html":{}},"body":{"classes/CreateDriversTable1678187115666.html":{},"coverage.html":{}}}],["createlocationstable.ts",{"_index":428,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"coverage.html":{}}}],["createlocationstable.ts:12",{"_index":430,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{}}}],["createlocationstable.ts:4",{"_index":429,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{}}}],["createlocationstable.ts:6",{"_index":431,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{}}}],["createlocationstable1678182431069",{"_index":426,"title":{"classes/CreateLocationsTable1678182431069.html":{}},"body":{"classes/CreateLocationsTable1678182431069.html":{},"coverage.html":{}}}],["createnewtransaction",{"_index":770,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["createnewtransaction(payload",{"_index":775,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["createpaymentmethodstable.ts",{"_index":439,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"coverage.html":{}}}],["createpaymentmethodstable.ts:14",{"_index":441,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["createpaymentmethodstable.ts:4",{"_index":440,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["createpaymentmethodstable.ts:6",{"_index":442,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["createpaymentmethodstable1678185095471",{"_index":437,"title":{"classes/CreatePaymentMethodsTable1678185095471.html":{}},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"coverage.html":{}}}],["createrequeststable.ts",{"_index":455,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"coverage.html":{}}}],["createrequeststable.ts:22",{"_index":457,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["createrequeststable.ts:4",{"_index":456,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["createrequeststable.ts:6",{"_index":458,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["createrequeststable1678216032691",{"_index":453,"title":{"classes/CreateRequestsTable1678216032691.html":{}},"body":{"classes/CreateRequestsTable1678216032691.html":{},"coverage.html":{}}}],["createriderstable.ts",{"_index":468,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{},"coverage.html":{}}}],["createriderstable.ts:12",{"_index":470,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["createriderstable.ts:4",{"_index":469,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["createriderstable.ts:6",{"_index":471,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["createriderstable1678182352019",{"_index":466,"title":{"classes/CreateRidersTable1678182352019.html":{}},"body":{"classes/CreateRidersTable1678182352019.html":{},"coverage.html":{}}}],["createtripstable.ts",{"_index":477,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"coverage.html":{}}}],["createtripstable.ts:25",{"_index":479,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["createtripstable.ts:4",{"_index":478,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["createtripstable.ts:6",{"_index":480,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["createtripstable1678218041445",{"_index":475,"title":{"classes/CreateTripsTable1678218041445.html":{}},"body":{"classes/CreateTripsTable1678218041445.html":{},"coverage.html":{}}}],["creating",{"_index":561,"title":{},"body":{"injectables/DriverService.html":{},"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["credit_card",{"_index":79,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"miscellaneous/enumerations.html":{}}}],["currency",{"_index":826,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/variables.html":{}}}],["currenttrip",{"_index":1029,"title":{},"body":{"injectables/RequestService.html":{}}}],["currenttrip.id",{"_index":1051,"title":{},"body":{"injectables/RequestService.html":{}}}],["currenttrip.request",{"_index":1031,"title":{},"body":{"injectables/RequestService.html":{}}}],["customer_email",{"_index":828,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["customeremail",{"_index":628,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["customprops",{"_index":374,"title":{},"body":{"modules/ConfigModule.html":{}}}],["cvc",{"_index":809,"title":{},"body":{"classes/PaymentGateway.html":{},"interfaces/TokenizeCard.html":{}}}],["database",{"_index":219,"title":{},"body":{"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["database/entities",{"_index":549,"title":{},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"entities/Request.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["database/entities/trip.entity",{"_index":939,"title":{},"body":{"controllers/RequestController.html":{}}}],["database_host",{"_index":351,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_name",{"_index":349,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_password",{"_index":352,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_port",{"_index":353,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_ssl",{"_index":355,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database_username",{"_index":357,"title":{},"body":{"modules/ConfigModule.html":{}}}],["databaseconfig",{"_index":224,"title":{"interfaces/DatabaseConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["databasemodule",{"_index":231,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["datasource",{"_index":986,"title":{},"body":{"injectables/RequestService.html":{}}}],["date",{"_index":245,"title":{},"body":{"classes/Base.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"entities/Driver.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["date})@column({type",{"_index":1112,"title":{},"body":{"entities/Trip.html":{}}}],["db",{"_index":654,"title":{},"body":{"controllers/HealthController.html":{}}}],["declined",{"_index":88,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"miscellaneous/enumerations.html":{}}}],["decorators",{"_index":246,"title":{},"body":{"classes/Base.html":{},"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/PaymentGateway.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["delete",{"_index":52,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["deleted_at",{"_index":189,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["deleted_at'})@isoptional",{"_index":250,"title":{},"body":{"classes/Base.html":{}}}],["deletedat",{"_index":243,"title":{},"body":{"classes/Base.html":{},"controllers/RequestController.html":{}}}],["deletedatecolumn",{"_index":261,"title":{},"body":{"classes/Base.html":{}}}],["deletedatecolumn({name",{"_index":249,"title":{},"body":{"classes/Base.html":{}}}],["dependencies",{"_index":203,"title":{"dependencies.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":312,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":802,"title":{},"body":{"classes/PaymentGateway.html":{},"entities/Request.html":{}}}],["development",{"_index":1232,"title":{},"body":{"index.html":{}}}],["distance",{"_index":513,"title":{},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GetDirection.html":{},"classes/MapBox.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["distancefare",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distanceinmeters",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distancetokilometers",{"_index":510,"title":{"interfaces/DistanceToKilometers.html":{}},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"classes/MapBox.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["distancetokilometers(number(distance",{"_index":733,"title":{},"body":{"classes/MapBox.html":{}}}],["dni",{"_index":421,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"entities/Driver.html":{}}}],["documentation",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":949,"title":{},"body":{"controllers/RequestController.html":{}}}],["down",{"_index":16,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["down(queryrunner",{"_index":25,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["driver",{"_index":270,"title":{"entities/Driver.html":{}},"body":{"entities/Car.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["driver.cars",{"_index":284,"title":{},"body":{"entities/Car.html":{}}}],["driver.cars?.[0",{"_index":1132,"title":{},"body":{"injectables/TripService.html":{}}}],["driver.entity",{"_index":308,"title":{},"body":{"entities/Car.html":{},"entities/Trip.html":{}}}],["driver.service",{"_index":1129,"title":{},"body":{"injectables/TripService.html":{}}}],["driver.trips",{"_index":1117,"title":{},"body":{"entities/Trip.html":{}}}],["driver.trips)@joincolumn({name",{"_index":1093,"title":{},"body":{"entities/Trip.html":{}}}],["driver_id",{"_index":42,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"entities/Car.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["driver_rating",{"_index":487,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["driverrating",{"_index":1086,"title":{},"body":{"entities/Trip.html":{}}}],["driverrepository",{"_index":543,"title":{},"body":{"injectables/DriverService.html":{}}}],["drivers",{"_index":412,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"injectables/DriverService.html":{}}}],["drivers\"(\"id",{"_index":51,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["drivers.length",{"_index":554,"title":{},"body":{"injectables/DriverService.html":{}}}],["drivers[0",{"_index":563,"title":{},"body":{"injectables/DriverService.html":{}}}],["driverservice",{"_index":534,"title":{"injectables/DriverService.html":{}},"body":{"injectables/DriverService.html":{},"modules/RequestModule.html":{},"injectables/TripService.html":{},"coverage.html":{},"overview.html":{}}}],["driver})@manytoone(undefined",{"_index":1092,"title":{},"body":{"entities/Trip.html":{}}}],["drop",{"_index":56,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["dropoff",{"_index":704,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["dropoff_location",{"_index":100,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Request.html":{}}}],["dropoff_location'})@transform",{"_index":868,"title":{},"body":{"entities/Request.html":{}}}],["dropoff_location_id",{"_index":130,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["dropofflocation",{"_index":705,"title":{},"body":{"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{}}}],["dropofflocation.latitude",{"_index":1004,"title":{},"body":{"injectables/RequestService.html":{}}}],["dropofflocation.longitude",{"_index":1005,"title":{},"body":{"injectables/RequestService.html":{}}}],["dropofflocation.longitude},${dropofflocation.latitude",{"_index":1008,"title":{},"body":{"injectables/RequestService.html":{}}}],["droppaymentmethodtableandrelations.ts",{"_index":570,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"coverage.html":{}}}],["droppaymentmethodtableandrelations.ts:14",{"_index":572,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["droppaymentmethodtableandrelations.ts:4",{"_index":571,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["droppaymentmethodtableandrelations.ts:6",{"_index":573,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["droppaymentmethodtableandrelations1678294718551",{"_index":568,"title":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"coverage.html":{}}}],["dto",{"_index":936,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["duration",{"_index":515,"title":{},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GetDirection.html":{},"classes/MapBox.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["durationfare",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["durationinseconds",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["durationtominutes",{"_index":514,"title":{"interfaces/DurationToMinutes.html":{}},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"classes/MapBox.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["durationtominutes(number(duration",{"_index":734,"title":{},"body":{"classes/MapBox.html":{}}}],["e2e",{"_index":1242,"title":{},"body":{"index.html":{}}}],["eager",{"_index":298,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["efficient",{"_index":1222,"title":{},"body":{"index.html":{}}}],["email",{"_index":416,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{}}}],["end_time",{"_index":195,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"entities/Trip.html":{}}}],["ended",{"_index":1098,"title":{},"body":{"entities/Trip.html":{}}}],["endtime",{"_index":895,"title":{},"body":{"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["entities",{"_index":266,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":264,"title":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"entities/Rider.html":{},"entities/Trip.html":{}},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"coverage.html":{}}}],["entity('cars",{"_index":310,"title":{},"body":{"entities/Car.html":{}}}],["entity('drivers",{"_index":532,"title":{},"body":{"entities/Driver.html":{}}}],["entity('payments",{"_index":763,"title":{},"body":{"entities/Payment.html":{}}}],["entity('requests",{"_index":890,"title":{},"body":{"entities/Request.html":{}}}],["entity('riders",{"_index":1069,"title":{},"body":{"entities/Rider.html":{}}}],["entity('trips",{"_index":1116,"title":{},"body":{"entities/Trip.html":{}}}],["entity.{js,ts",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":746,"title":{},"body":{"entities/Payment.html":{},"classes/PaymentGateway.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["enum('approved",{"_index":102,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["enum('cash",{"_index":78,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["enum('completed",{"_index":482,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["enum('pending",{"_index":86,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["enum('visa",{"_index":445,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["enum('waiting",{"_index":460,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["enumerations",{"_index":1193,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":761,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["env",{"_index":341,"title":{},"body":{"modules/ConfigModule.html":{}}}],["envfilepath",{"_index":339,"title":{},"body":{"modules/ConfigModule.html":{}}}],["equal",{"_index":590,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["error",{"_index":89,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["error?.response?.data?.message",{"_index":803,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["eslint",{"_index":1284,"title":{},"body":{"properties.html":{}}}],["estimated",{"_index":871,"title":{},"body":{"entities/Request.html":{}}}],["estimated_fare",{"_index":462,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"entities/Request.html":{}}}],["estimatedfare",{"_index":865,"title":{},"body":{"entities/Request.html":{},"controllers/RequestController.html":{}}}],["example",{"_index":584,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"entities/Trip.html":{}}}],["existing",{"_index":1046,"title":{},"body":{"injectables/RequestService.html":{}}}],["exists",{"_index":567,"title":{},"body":{"injectables/DriverService.html":{},"controllers/RequestController.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["exp_month",{"_index":811,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["exp_year",{"_index":813,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["expmonth",{"_index":1083,"title":{},"body":{"interfaces/TokenizeCard.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["exports",{"_index":317,"title":{},"body":{"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{}}}],["expose",{"_index":1068,"title":{},"body":{"entities/Rider.html":{}}}],["express",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["expyear",{"_index":1084,"title":{},"body":{"interfaces/TokenizeCard.html":{}}}],["extends",{"_index":311,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["external",{"_index":753,"title":{},"body":{"entities/Payment.html":{}}}],["false",{"_index":313,"title":{},"body":{"entities/Car.html":{},"classes/CreateDriversTable1678187115666.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"miscellaneous/variables.html":{}}}],["false})@column('geometry",{"_index":1102,"title":{},"body":{"entities/Trip.html":{}}}],["false})@column({length",{"_index":1062,"title":{},"body":{"entities/Rider.html":{}}}],["false})@column({name",{"_index":525,"title":{},"body":{"entities/Driver.html":{}}}],["false})@column({nullable",{"_index":1065,"title":{},"body":{"entities/Rider.html":{}}}],["false})@column({type",{"_index":276,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Payment.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["false})@isnumber",{"_index":586,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["false})@isoptional()@length(2",{"_index":695,"title":{},"body":{"classes/LocationDto.html":{}}}],["fare",{"_index":190,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/GeneratePaymentReference.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"miscellaneous/variables.html":{}}}],["fare'})@column({type",{"_index":739,"title":{},"body":{"entities/Payment.html":{}}}],["fastify",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["fastify/compress",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["fastify/helmet",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["fastify/static",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["fdef43a2",{"_index":954,"title":{},"body":{"controllers/RequestController.html":{}}}],["fees",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fees.base",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fees.distance",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fees.duration",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["final",{"_index":1101,"title":{},"body":{"entities/Trip.html":{}}}],["final_location",{"_index":96,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Trip.html":{}}}],["final_location_id",{"_index":124,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["finallocation",{"_index":577,"title":{},"body":{"classes/FinishRideDto.html":{},"entities/Location.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["finallocation.latitude",{"_index":1048,"title":{},"body":{"injectables/RequestService.html":{}}}],["finallocation.longitude",{"_index":1049,"title":{},"body":{"injectables/RequestService.html":{}}}],["finallocation.longitude},${finallocation.latitude",{"_index":1033,"title":{},"body":{"injectables/RequestService.html":{}}}],["finish",{"_index":907,"title":{},"body":{"controllers/RequestController.html":{}}}],["finished",{"_index":909,"title":{},"body":{"controllers/RequestController.html":{}}}],["finishride",{"_index":902,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["finishride(@body",{"_index":972,"title":{},"body":{"controllers/RequestController.html":{}}}],["finishride(payload",{"_index":904,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["finishridedto",{"_index":574,"title":{"classes/FinishRideDto.html":{}},"body":{"classes/FinishRideDto.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["first",{"_index":1057,"title":{},"body":{"entities/Rider.html":{}}}],["first_name",{"_index":413,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Rider.html":{}}}],["firstname",{"_index":1053,"title":{},"body":{"entities/Rider.html":{}}}],["fk_04caa31b8581b77d274c1180c0c",{"_index":132,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["fk_12fd861c33c885f01b9a7da7d93",{"_index":198,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["fk_1403195e3b80cf083352758adb0",{"_index":47,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{}}}],["fk_213969006cff7948380b9595044",{"_index":123,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["fk_44d36110fb38f45c2f15c946ddb",{"_index":495,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["fk_6c5633e5a6d5635831cbc96bef6",{"_index":121,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["fk_79746ad153ee98938ff06104438",{"_index":167,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["fk_839c2a9fd7fb004440b548b59f1",{"_index":135,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{}}}],["fk_9610d35d5d21db627101427b7e5",{"_index":134,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["fk_a796178a3fa8c222d6bb8b65c54",{"_index":122,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["fk_bd02a6beaa5c282445abc4b3507",{"_index":162,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["fk_cc669ad722640e54bb5c56972c6",{"_index":68,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{}}}],["fk_db5f71a072c7bfefc58670b358e",{"_index":465,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["fk_dfea9f5c01666a915e9eb1aca5b",{"_index":496,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["fk_f8ab7c11057c69afa8746f79245",{"_index":493,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["foreign",{"_index":48,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["format(fare",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":965,"title":{},"body":{"controllers/RequestController.html":{}}}],["framework",{"_index":1220,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":1070,"title":{},"body":{"entities/Rider.html":{}}}],["function",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1215,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":756,"title":{},"body":{"entities/Payment.html":{},"injectables/RequestService.html":{}}}],["gateway.lib.ts",{"_index":768,"title":{},"body":{"classes/PaymentGateway.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["gateway.lib.ts:13",{"_index":774,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway.lib.ts:14",{"_index":772,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway.lib.ts:26",{"_index":778,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway.lib.ts:38",{"_index":779,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway.lib.ts:56",{"_index":776,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["gateway_acceptance_token",{"_index":365,"title":{},"body":{"modules/ConfigModule.html":{}}}],["gateway_base_url",{"_index":362,"title":{},"body":{"modules/ConfigModule.html":{}}}],["gateway_public_key",{"_index":364,"title":{},"body":{"modules/ConfigModule.html":{}}}],["gateway_secret_key",{"_index":363,"title":{},"body":{"modules/ConfigModule.html":{}}}],["gatewayendpoints",{"_index":781,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{}}}],["generate",{"_index":922,"title":{},"body":{"controllers/RequestController.html":{}}}],["generateacceptancetoken",{"_index":771,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["generatebasetrip",{"_index":1122,"title":{},"body":{"injectables/TripService.html":{}}}],["generatebasetrip(incomingrequest",{"_index":1126,"title":{},"body":{"injectables/TripService.html":{}}}],["generated",{"_index":754,"title":{},"body":{"entities/Payment.html":{}}}],["generatepayment",{"_index":837,"title":{},"body":{"injectables/PaymentService.html":{}}}],["generatepayment(payload",{"_index":841,"title":{},"body":{"injectables/PaymentService.html":{}}}],["generatepaymentreference",{"_index":618,"title":{"interfaces/GeneratePaymentReference.html":{}},"body":{"interfaces/GeneratePaymentReference.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["generatetransaction",{"_index":624,"title":{"interfaces/GenerateTransaction.html":{}},"body":{"interfaces/GenerateTransaction.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"coverage.html":{}}}],["generateuuid",{"_index":844,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generating",{"_index":805,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["generation",{"_index":800,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["geometry",{"_index":97,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["geometry(geometry,0",{"_index":101,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["get()@healthcheck",{"_index":644,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdirection",{"_index":636,"title":{"interfaces/GetDirection.html":{}},"body":{"interfaces/GetDirection.html":{},"classes/MapBox.html":{},"coverage.html":{}}}],["getdirection(pickuplocation",{"_index":711,"title":{},"body":{"classes/MapBox.html":{}}}],["getfirstdriver",{"_index":537,"title":{},"body":{"injectables/DriverService.html":{}}}],["getonebyidorfail",{"_index":538,"title":{},"body":{"injectables/DriverService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["getonebyidorfail(id",{"_index":545,"title":{},"body":{"injectables/DriverService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["getting",{"_index":1217,"title":{"index.html":{}},"body":{}}],["given",{"_index":991,"title":{},"body":{"injectables/RequestService.html":{}}}],["graph",{"_index":1271,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":589,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["grow",{"_index":1249,"title":{},"body":{"index.html":{}}}],["hailing",{"_index":1279,"title":{},"body":{"properties.html":{}}}],["headers",{"_index":788,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["health",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"properties.html":{}}}],["healthcheck",{"_index":649,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":647,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":640,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":232,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["helper.interface.ts",{"_index":512,"title":{},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"coverage.html":{}}}],["here",{"_index":1258,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":1290,"title":{},"body":{"properties.html":{}}}],["host",{"_index":499,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":220,"title":{"interfaces/Http.html":{}},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"interfaces/Http.html":{},"coverage.html":{},"dependencies.html":{}}}],["httpmodule",{"_index":323,"title":{},"body":{"modules/ConfigModule.html":{},"modules/HealthModule.html":{}}}],["httpmodule.registerasync",{"_index":383,"title":{},"body":{"modules/ConfigModule.html":{}}}],["https://github.com/jacksonr20/ride",{"_index":1291,"title":{},"body":{"properties.html":{}}}],["https://nestjs.com",{"_index":1265,"title":{},"body":{"index.html":{}}}],["httpstatuscode",{"_index":719,"title":{},"body":{"classes/MapBox.html":{}}}],["httpstatuscode.unauthorized",{"_index":736,"title":{},"body":{"classes/MapBox.html":{}}}],["husky",{"_index":1285,"title":{},"body":{"properties.html":{}}}],["id",{"_index":183,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["identifier",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"modules/DatabaseModule.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["imports",{"_index":211,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{}}}],["in_progress",{"_index":483,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":1016,"title":{},"body":{"injectables/RequestService.html":{}}}],["incomingrequest",{"_index":1013,"title":{},"body":{"injectables/RequestService.html":{},"injectables/TripService.html":{}}}],["incomingrequest.id",{"_index":1025,"title":{},"body":{"injectables/RequestService.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"interfaces/AppConfig.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["inject",{"_index":390,"title":{},"body":{"modules/ConfigModule.html":{}}}],["injectable",{"_index":533,"title":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["injectables",{"_index":535,"title":{},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"overview.html":{}}}],["injectrepository",{"_index":548,"title":{},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["injectrepository(driver",{"_index":550,"title":{},"body":{"injectables/DriverService.html":{}}}],["injectrepository(payment",{"_index":846,"title":{},"body":{"injectables/PaymentService.html":{}}}],["injectrepository(rider",{"_index":1078,"title":{},"body":{"injectables/RiderService.html":{}}}],["injectrepository(trip",{"_index":1130,"title":{},"body":{"injectables/TripService.html":{}}}],["input",{"_index":914,"title":{},"body":{"controllers/RequestController.html":{}}}],["installation",{"_index":1229,"title":{},"body":{"index.html":{}}}],["installments",{"_index":634,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["installrunning",{"_index":1231,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1027,"title":{},"body":{"injectables/RequestService.html":{}}}],["integer",{"_index":300,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["interface",{"_index":214,"title":{"interfaces/AppConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"interfaces/PaymentMethod.html":{},"interfaces/RateLimiting.html":{},"interfaces/TokenizeCard.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"interfaces/PaymentMethod.html":{},"interfaces/RateLimiting.html":{},"interfaces/TokenizeCard.html":{},"coverage.html":{}}}],["interfaces",{"_index":216,"title":{},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"interfaces/TokenizeCard.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":780,"title":{},"body":{"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["internalservererrorexception('something",{"_index":804,"title":{},"body":{"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["intl.numberformat('es",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_transaction_id",{"_index":833,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["is_banned",{"_index":422,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"entities/Driver.html":{}}}],["isbanned",{"_index":517,"title":{},"body":{"entities/Driver.html":{}}}],["isdefined",{"_index":605,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isglobal",{"_index":336,"title":{},"body":{"modules/ConfigModule.html":{}}}],["isnotempty",{"_index":698,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isnotemptyobject",{"_index":606,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isnumber",{"_index":607,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isoptional",{"_index":262,"title":{},"body":{"classes/Base.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isuuid",{"_index":608,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["isuuid('4",{"_index":615,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["it's",{"_index":1018,"title":{},"body":{"injectables/RequestService.html":{}}}],["jackson",{"_index":1296,"title":{},"body":{"properties.html":{}}}],["john",{"_index":948,"title":{},"body":{"controllers/RequestController.html":{}}}],["joi",{"_index":333,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["joi.boolean().default(false",{"_index":356,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.number().default(3000",{"_index":348,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.number().default(5432",{"_index":354,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.number().required",{"_index":367,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.object",{"_index":343,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.string().required",{"_index":350,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.string().valid('development",{"_index":345,"title":{},"body":{"modules/ConfigModule.html":{}}}],["join",{"_index":331,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":340,"title":{},"body":{"modules/ConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":305,"title":{},"body":{"entities/Car.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["joined",{"_index":524,"title":{},"body":{"entities/Driver.html":{}}}],["joined_date",{"_index":420,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"entities/Driver.html":{}}}],["joineddate",{"_index":518,"title":{},"body":{"entities/Driver.html":{}}}],["js,ts",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":1262,"title":{},"body":{"index.html":{}}}],["key",{"_index":49,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["keywords",{"_index":1282,"title":{},"body":{"properties.html":{}}}],["last",{"_index":1059,"title":{},"body":{"entities/Rider.html":{}}}],["last_name",{"_index":415,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"entities/Rider.html":{}}}],["lastname",{"_index":1054,"title":{},"body":{"entities/Rider.html":{}}}],["latitude",{"_index":433,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"classes/RequestRideDto.html":{}}}],["latitude'})@column({type",{"_index":667,"title":{},"body":{"entities/Location.html":{}}}],["length",{"_index":280,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{}}}],["length(2",{"_index":701,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["less",{"_index":592,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["libs",{"_index":1000,"title":{},"body":{"injectables/RequestService.html":{}}}],["license",{"_index":288,"title":{},"body":{"entities/Car.html":{},"index.html":{},"properties.html":{}}}],["license_plate",{"_index":292,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["licensed",{"_index":1246,"title":{},"body":{"index.html":{}}}],["licenseplate",{"_index":271,"title":{},"body":{"entities/Car.html":{}}}],["limit",{"_index":393,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/RateLimiting.html":{}}}],["limiting",{"_index":1289,"title":{},"body":{"properties.html":{}}}],["limiting.interface.ts",{"_index":857,"title":{},"body":{"interfaces/RateLimiting.html":{},"coverage.html":{}}}],["lint",{"_index":1287,"title":{},"body":{"properties.html":{}}}],["load",{"_index":338,"title":{},"body":{"modules/ConfigModule.html":{}}}],["location",{"_index":432,"title":{"entities/Location.html":{}},"body":{"classes/CreateLocationsTable1678182431069.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Trip.html":{},"coverage.html":{}}}],["location\"(\"id",{"_index":133,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["location'})@column('geometry",{"_index":867,"title":{},"body":{"entities/Request.html":{}}}],["locationdto",{"_index":580,"title":{"classes/LocationDto.html":{}},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"coverage.html":{}}}],["logger",{"_index":769,"title":{},"body":{"classes/PaymentGateway.html":{},"injectables/RequestService.html":{}}}],["logger(paymentgateway.name",{"_index":773,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["logger(requestservice.name",{"_index":994,"title":{},"body":{"injectables/RequestService.html":{}}}],["loggermodule",{"_index":328,"title":{},"body":{"modules/ConfigModule.html":{}}}],["loggermodule.forroot",{"_index":372,"title":{},"body":{"modules/ConfigModule.html":{}}}],["longitude",{"_index":434,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"classes/RequestRideDto.html":{}}}],["longitude'})@column({type",{"_index":669,"title":{},"body":{"entities/Location.html":{}}}],["looking",{"_index":566,"title":{},"body":{"injectables/DriverService.html":{},"controllers/RequestController.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["manager",{"_index":1015,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.save",{"_index":1044,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.save(relatedtrip",{"_index":1021,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.save(request",{"_index":1017,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.update(request",{"_index":1024,"title":{},"body":{"injectables/RequestService.html":{}}}],["manager.update(trip",{"_index":1050,"title":{},"body":{"injectables/RequestService.html":{}}}],["manytoone",{"_index":304,"title":{},"body":{"entities/Car.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["manytoone(undefined",{"_index":283,"title":{},"body":{"entities/Car.html":{}}}],["map_box_access_token",{"_index":359,"title":{},"body":{"modules/ConfigModule.html":{}}}],["map_box_base_url",{"_index":358,"title":{},"body":{"modules/ConfigModule.html":{}}}],["mapbox",{"_index":707,"title":{"classes/MapBox.html":{}},"body":{"classes/MapBox.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["mapbox.getdirection",{"_index":1006,"title":{},"body":{"injectables/RequestService.html":{}}}],["mapbox.getdirection(`${coordinates[1]},${coordinates[0",{"_index":1032,"title":{},"body":{"injectables/RequestService.html":{}}}],["mastercard",{"_index":446,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":609,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["max(10",{"_index":617,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["max(180",{"_index":700,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["max(90",{"_index":699,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["maxredirects",{"_index":387,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Http.html":{}}}],["memberof",{"_index":722,"title":{},"body":{"classes/MapBox.html":{},"injectables/RequestService.html":{}}}],["merchant",{"_index":806,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["merchants",{"_index":784,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{}}}],["message",{"_index":587,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{}}}],["metadata",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":448,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"entities/Payment.html":{}}}],["method.enum.ts",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"controllers/HealthController.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["migrationinterface",{"_index":9,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["migrations",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":610,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["min(0",{"_index":616,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["minimumfractiondigits",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1192,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1245,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1236,"title":{},"body":{"index.html":{}}}],["model",{"_index":272,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["module",{"_index":200,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{}}}],["modules",{"_index":202,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{},"modules.html":{},"overview.html":{}}}],["monetary",{"_index":1281,"title":{},"body":{"properties.html":{}}}],["more",{"_index":1257,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1263,"title":{},"body":{"index.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Location.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["nequi",{"_index":633,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{}}}],["nest",{"_index":1226,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1267,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":329,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{},"properties.html":{}}}],["nestjs/axios",{"_index":324,"title":{},"body":{"modules/ConfigModule.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":212,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"injectables/DriverService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":322,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":319,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":303,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"controllers/HealthController.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":650,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":327,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":507,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"modules/RequestModule.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"dependencies.html":{}}}],["new",{"_index":556,"title":{},"body":{"injectables/DriverService.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newride",{"_index":970,"title":{},"body":{"controllers/RequestController.html":{}}}],["no_token",{"_index":796,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["node.js",{"_index":1219,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":344,"title":{},"body":{"modules/ConfigModule.html":{}}}],["notfoundexception",{"_index":547,"title":{},"body":{"injectables/DriverService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["notfoundexception('the",{"_index":565,"title":{},"body":{"injectables/DriverService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["notfoundexception('there",{"_index":557,"title":{},"body":{"injectables/DriverService.html":{}}}],["now",{"_index":187,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["npm",{"_index":1230,"title":{},"body":{"index.html":{}}}],["null",{"_index":114,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"controllers/RequestController.html":{},"injectables/TripService.html":{}}}],["nullable",{"_index":255,"title":{},"body":{"classes/Base.html":{},"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["number",{"_index":225,"title":{},"body":{"interfaces/AppConfig.html":{},"entities/Car.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"interfaces/RateLimiting.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"miscellaneous/variables.html":{}}}],["number'})@isnotempty({message",{"_index":685,"title":{},"body":{"classes/LocationDto.html":{}}}],["number'})@isoptional()@min(0",{"_index":588,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["number((distanceinmeters",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number((durationinseconds",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number})@column({nullable",{"_index":1096,"title":{},"body":{"entities/Trip.html":{}}}],["number})@column({type",{"_index":872,"title":{},"body":{"entities/Request.html":{}}}],["numeric",{"_index":740,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{}}}],["numeric(10,2",{"_index":155,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["object.keys(tripstatus",{"_index":1119,"title":{},"body":{"entities/Trip.html":{}}}],["object.values(paymentmethod",{"_index":765,"title":{},"body":{"entities/Payment.html":{}}}],["object.values(paymentstatus",{"_index":764,"title":{},"body":{"entities/Payment.html":{}}}],["object.values(requeststatus",{"_index":898,"title":{},"body":{"entities/Request.html":{}}}],["ondelete",{"_index":285,"title":{},"body":{"entities/Car.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["ones",{"_index":562,"title":{},"body":{"injectables/DriverService.html":{}}}],["onetomany",{"_index":306,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Rider.html":{}}}],["onetomany(undefined",{"_index":296,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Rider.html":{}}}],["onetoone",{"_index":679,"title":{},"body":{"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["onetoone(undefined",{"_index":664,"title":{},"body":{"entities/Location.html":{},"entities/Payment.html":{},"entities/Trip.html":{}}}],["open",{"_index":1247,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"entities/Location.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["options",{"_index":381,"title":{},"body":{"modules/ConfigModule.html":{}}}],["out",{"_index":209,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"overview.html":{}}}],["overview",{"_index":1272,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1159,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":721,"title":{},"body":{"classes/MapBox.html":{},"injectables/RequestService.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["params",{"_index":727,"title":{},"body":{"classes/MapBox.html":{}}}],["partial",{"_index":1036,"title":{},"body":{"injectables/RequestService.html":{}}}],["password",{"_index":500,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":332,"title":{},"body":{"modules/ConfigModule.html":{}}}],["payload",{"_index":777,"title":{},"body":{"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["payload.amountincents",{"_index":825,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payload.customeremail",{"_index":829,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payload.paymentmethod",{"_index":832,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payload.reference",{"_index":830,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payment",{"_index":620,"title":{"entities/Payment.html":{}},"body":{"interfaces/GeneratePaymentReference.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"coverage.html":{}}}],["payment.entity",{"_index":1115,"title":{},"body":{"entities/Trip.html":{}}}],["payment.fare",{"_index":848,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.id",{"_index":847,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.paymentmethodtype",{"_index":852,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.service",{"_index":998,"title":{},"body":{"injectables/RequestService.html":{}}}],["payment.status",{"_index":850,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.tip",{"_index":849,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.transactionid",{"_index":854,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.trip",{"_index":1106,"title":{},"body":{"entities/Trip.html":{}}}],["payment_id",{"_index":165,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"entities/Trip.html":{}}}],["payment_method",{"_index":831,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["payment_method_id",{"_index":192,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["payment_method_type",{"_index":82,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"entities/Payment.html":{}}}],["payment_methods",{"_index":66,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["payment_methods\"(\"id",{"_index":199,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["payment_pending",{"_index":484,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"miscellaneous/enumerations.html":{}}}],["paymentgateway",{"_index":766,"title":{"classes/PaymentGateway.html":{}},"body":{"classes/PaymentGateway.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["paymentgateway.createnewtransaction",{"_index":1040,"title":{},"body":{"injectables/RequestService.html":{}}}],["paymentgateway.tokenizecard",{"_index":1039,"title":{},"body":{"injectables/RequestService.html":{}}}],["paymentmethod",{"_index":629,"title":{"interfaces/PaymentMethod.html":{}},"body":{"interfaces/GenerateTransaction.html":{},"entities/Payment.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["paymentmethod.credit_card",{"_index":853,"title":{},"body":{"injectables/PaymentService.html":{}}}],["paymentmethodtype",{"_index":738,"title":{},"body":{"entities/Payment.html":{}}}],["paymentmethod})@column({type",{"_index":747,"title":{},"body":{"entities/Payment.html":{}}}],["paymentreference",{"_index":1043,"title":{},"body":{"injectables/RequestService.html":{}}}],["paymentrepository",{"_index":840,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payments",{"_index":81,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["payments\"(\"id",{"_index":168,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["payments_status_enum",{"_index":104,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["payments_status_enum_old",{"_index":85,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["paymentservice",{"_index":835,"title":{"injectables/PaymentService.html":{}},"body":{"injectables/PaymentService.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"coverage.html":{},"overview.html":{}}}],["paymentstatus",{"_index":749,"title":{},"body":{"entities/Payment.html":{},"injectables/PaymentService.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.pending",{"_index":851,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment})@onetoone(undefined",{"_index":1105,"title":{},"body":{"entities/Trip.html":{}}}],["pending",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":1095,"title":{},"body":{"entities/Trip.html":{}}}],["persist",{"_index":622,"title":{},"body":{"interfaces/GeneratePaymentReference.html":{},"injectables/PaymentService.html":{}}}],["pg",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["pgadmin_default_email",{"_index":360,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pgadmin_default_password",{"_index":361,"title":{},"body":{"modules/ConfigModule.html":{}}}],["phone",{"_index":1061,"title":{},"body":{"entities/Rider.html":{}}}],["phone_number",{"_index":417,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"entities/Rider.html":{}}}],["phonenumber",{"_index":1055,"title":{},"body":{"entities/Rider.html":{}}}],["pickup",{"_index":581,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{}}}],["pickup_location",{"_index":99,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Request.html":{}}}],["pickup_location'})@transform",{"_index":875,"title":{},"body":{"entities/Request.html":{}}}],["pickup_location_id",{"_index":127,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["pickuplocation",{"_index":703,"title":{},"body":{"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{}}}],["pickuplocation.latitude",{"_index":1002,"title":{},"body":{"injectables/RequestService.html":{}}}],["pickuplocation.longitude",{"_index":1003,"title":{},"body":{"injectables/RequestService.html":{}}}],["pickuplocation.longitude},${pickuplocation.latitude",{"_index":1007,"title":{},"body":{"injectables/RequestService.html":{}}}],["pino",{"_index":330,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":373,"title":{},"body":{"modules/ConfigModule.html":{}}}],["pk_0428f484e96f9e6a55955f29b5f",{"_index":464,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["pk_197ab7af18c93fbb0c9b28b4a59",{"_index":193,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["pk_34f9b8c6dfb4ac3559f7e2820d1",{"_index":452,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["pk_6c17e67f760677500c29d68e689",{"_index":474,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["pk_876d7bdba03c72251ec4c2dc827",{"_index":436,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{}}}],["pk_92ab3fb69e566d3eb0cae896047",{"_index":425,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["pk_f71c231dee9c05a9522f9e840f5",{"_index":492,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["pk_fc218aa84e79b477d55322271b6",{"_index":405,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["plate",{"_index":289,"title":{},"body":{"entities/Car.html":{}}}],["please",{"_index":559,"title":{},"body":{"injectables/DriverService.html":{},"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"index.html":{}}}],["point",{"_index":866,"title":{},"body":{"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["points",{"_index":715,"title":{},"body":{"classes/MapBox.html":{}}}],["port",{"_index":221,"title":{},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":929,"title":{},"body":{"controllers/RequestController.html":{}}}],["post('finish",{"_index":905,"title":{},"body":{"controllers/RequestController.html":{}}}],["post('ride",{"_index":942,"title":{},"body":{"controllers/RequestController.html":{}}}],["post('ride')@apioperation({summary",{"_index":921,"title":{},"body":{"controllers/RequestController.html":{}}}],["postgres",{"_index":1283,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["precision",{"_index":741,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{}}}],["prefix",{"_index":642,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RequestController.html":{}}}],["pretty",{"_index":380,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["primary",{"_index":194,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["primarygeneratedcolumn",{"_index":258,"title":{},"body":{"classes/Base.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":252,"title":{},"body":{"classes/Base.html":{}}}],["private",{"_index":551,"title":{},"body":{"injectables/DriverService.html":{},"controllers/HealthController.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["process.env.gateway_base_url",{"_index":787,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.gateway_public_key",{"_index":791,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.map_box_access_token",{"_index":729,"title":{},"body":{"classes/MapBox.html":{}}}],["process.env.map_box_base_url",{"_index":726,"title":{},"body":{"classes/MapBox.html":{}}}],["process.env.tokenize_card_cvc",{"_index":810,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.tokenize_card_exp_month",{"_index":812,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.tokenize_card_exp_year",{"_index":814,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.tokenize_card_holder",{"_index":816,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["process.env.tokenize_card_number",{"_index":808,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["production",{"_index":346,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["progressive",{"_index":1218,"title":{},"body":{"index.html":{}}}],["project",{"_index":1248,"title":{},"body":{"index.html":{}}}],["promise",{"_index":31,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"interfaces/AppConfig.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"properties.html":{}}}],["provide",{"_index":395,"title":{},"body":{"modules/ConfigModule.html":{}}}],["providers",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/RequestModule.html":{}}}],["pse",{"_index":80,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"miscellaneous/enumerations.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["public\".\"payment_methods_card_type_enum",{"_index":444,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["public\".\"payment_methods_method_enum",{"_index":443,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{}}}],["public\".\"payments_payment_method_type_enum",{"_index":77,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["public\".\"payments_status_enum",{"_index":83,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["public\".\"payments_status_enum_old",{"_index":94,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["public\".\"requests_status_enum",{"_index":459,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{}}}],["public\".\"trips_status_enum",{"_index":481,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["queryrunner",{"_index":26,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["queryrunner.query",{"_index":44,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["queryrunner.query(`alter",{"_index":38,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["queryrunner.query(`create",{"_index":76,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["queryrunner.query(`drop",{"_index":93,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["rate",{"_index":1288,"title":{},"body":{"properties.html":{}}}],["ratelimiting",{"_index":222,"title":{"interfaces/RateLimiting.html":{}},"body":{"interfaces/AppConfig.html":{},"modules/ConfigModule.html":{},"interfaces/RateLimiting.html":{},"coverage.html":{}}}],["rating",{"_index":419,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/FinishRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["read",{"_index":1256,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":552,"title":{},"body":{"injectables/DriverService.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["redirecturl",{"_index":630,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{}}}],["reference",{"_index":631,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["reference.interface.ts",{"_index":621,"title":{},"body":{"interfaces/GeneratePaymentReference.html":{},"coverage.html":{}}}],["referenceid",{"_index":1037,"title":{},"body":{"injectables/RequestService.html":{}}}],["references",{"_index":50,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["reflect",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["rel_213969006cff7948380b959504",{"_index":491,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["rel_6c5633e5a6d5635831cbc96bef",{"_index":125,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["rel_a796178a3fa8c222d6bb8b65c5",{"_index":126,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["rel_bd02a6beaa5c282445abc4b350",{"_index":163,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["rel_f8ab7c11057c69afa8746f7924",{"_index":490,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["related",{"_index":993,"title":{},"body":{"injectables/RequestService.html":{}}}],["relatedtrip",{"_index":1019,"title":{},"body":{"injectables/RequestService.html":{}}}],["relations",{"_index":1135,"title":{},"body":{"injectables/TripService.html":{}}}],["rename",{"_index":84,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["renamenamecolumninriderstable.ts",{"_index":860,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{},"coverage.html":{}}}],["renamenamecolumninriderstable.ts:10",{"_index":862,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["renamenamecolumninriderstable.ts:4",{"_index":861,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["renamenamecolumninriderstable.ts:6",{"_index":863,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["renamenamecolumninriderstable1678186681233",{"_index":858,"title":{"classes/RenameNameColumnInRidersTable1678186681233.html":{}},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{},"coverage.html":{}}}],["repository",{"_index":541,"title":{},"body":{"injectables/DriverService.html":{},"injectables/PaymentService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"index.html":{}}}],["request",{"_index":612,"title":{"entities/Request.html":{}},"body":{"classes/FinishRideDto.html":{},"entities/Location.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["request.dropofflocation",{"_index":671,"title":{},"body":{"entities/Location.html":{},"injectables/RequestService.html":{}}}],["request.estimatedfare",{"_index":1011,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.pickuplocation",{"_index":673,"title":{},"body":{"entities/Location.html":{},"injectables/RequestService.html":{}}}],["request.rider",{"_index":1009,"title":{},"body":{"injectables/RequestService.html":{},"entities/Rider.html":{}}}],["request.trip",{"_index":1108,"title":{},"body":{"entities/Trip.html":{},"injectables/TripService.html":{}}}],["request/request.module",{"_index":213,"title":{},"body":{"modules/ApiModule.html":{}}}],["request_id",{"_index":488,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["requestcontroller",{"_index":900,"title":{"controllers/RequestController.html":{}},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{},"coverage.html":{}}}],["requestdropofflocation",{"_index":661,"title":{},"body":{"entities/Location.html":{}}}],["requestmodule",{"_index":206,"title":{"modules/RequestModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/RequestModule.html":{},"modules.html":{},"overview.html":{}}}],["requestpickuplocation",{"_index":662,"title":{},"body":{"entities/Location.html":{}}}],["requestridedto",{"_index":702,"title":{"classes/RequestRideDto.html":{}},"body":{"classes/LocationDto.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["requests",{"_index":98,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Rider.html":{}}}],["requests\"(\"id",{"_index":494,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{}}}],["requestservice",{"_index":937,"title":{"injectables/RequestService.html":{}},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"coverage.html":{},"overview.html":{}}}],["requeststatus",{"_index":883,"title":{},"body":{"entities/Request.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["requeststatus.accepted",{"_index":1026,"title":{},"body":{"injectables/RequestService.html":{}}}],["requeststatus.waiting",{"_index":899,"title":{},"body":{"entities/Request.html":{}}}],["required",{"_index":275,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["required'})@min(undefined",{"_index":686,"title":{},"body":{"classes/LocationDto.html":{}}}],["reset",{"_index":208,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"overview.html":{}}}],["resource",{"_index":916,"title":{},"body":{"controllers/RequestController.html":{}}}],["response",{"_index":730,"title":{},"body":{"classes/MapBox.html":{},"classes/PaymentGateway.html":{}}}],["response?.data?.data?.id",{"_index":817,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["response?.data?.data?.presigned_acceptance?.acceptance_token",{"_index":795,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["response?.data?.routes?.[0",{"_index":732,"title":{},"body":{"classes/MapBox.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":389,"title":{},"body":{"modules/ConfigModule.html":{},"injectables/DriverService.html":{},"controllers/HealthController.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"controllers/HealthController.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["ride",{"_index":903,"title":{},"body":{"controllers/RequestController.html":{},"injectables/RequestService.html":{},"properties.html":{}}}],["ride')@apioperation({summary",{"_index":906,"title":{},"body":{"controllers/RequestController.html":{}}}],["ride'})@apicreatedresponse({description",{"_index":908,"title":{},"body":{"controllers/RequestController.html":{}}}],["ride(@body",{"_index":969,"title":{},"body":{"controllers/RequestController.html":{}}}],["ride(payload",{"_index":920,"title":{},"body":{"controllers/RequestController.html":{}}}],["ride.dto",{"_index":613,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts",{"_index":576,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"coverage.html":{}}}],["ride.dto.ts:14",{"_index":604,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts:24",{"_index":583,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts:27",{"_index":689,"title":{},"body":{"classes/LocationDto.html":{}}}],["ride.dto.ts:45",{"_index":594,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts:50",{"_index":693,"title":{},"body":{"classes/LocationDto.html":{}}}],["ride.dto.ts:62",{"_index":697,"title":{},"body":{"classes/LocationDto.html":{}}}],["ride.dto.ts:63",{"_index":596,"title":{},"body":{"classes/FinishRideDto.html":{}}}],["ride.dto.ts:74",{"_index":981,"title":{},"body":{"classes/RequestRideDto.html":{}}}],["ride.dto.ts:84",{"_index":980,"title":{},"body":{"classes/RequestRideDto.html":{}}}],["ride.dto.ts:93",{"_index":982,"title":{},"body":{"classes/RequestRideDto.html":{}}}],["ridepropertiestoupdate",{"_index":1035,"title":{},"body":{"injectables/RequestService.html":{}}}],["rider",{"_index":530,"title":{"entities/Rider.html":{}},"body":{"entities/Driver.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["rider.entity",{"_index":531,"title":{},"body":{"entities/Driver.html":{}}}],["rider.requests",{"_index":878,"title":{},"body":{"entities/Request.html":{}}}],["rider.service",{"_index":996,"title":{},"body":{"injectables/RequestService.html":{}}}],["rider_id",{"_index":67,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/CreateRequestsTable1678216032691.html":{},"entities/Request.html":{}}}],["rider_id'})@transform",{"_index":880,"title":{},"body":{"entities/Request.html":{}}}],["rider_rating",{"_index":486,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["riderid",{"_index":706,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{}}}],["riderrating",{"_index":578,"title":{},"body":{"classes/FinishRideDto.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["riderrepository",{"_index":1076,"title":{},"body":{"injectables/RiderService.html":{}}}],["riders",{"_index":472,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["riders\"(\"id",{"_index":69,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["riderservice",{"_index":976,"title":{"injectables/RiderService.html":{}},"body":{"modules/RequestModule.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"coverage.html":{},"overview.html":{}}}],["rider})@manytoone(undefined",{"_index":877,"title":{},"body":{"entities/Request.html":{}}}],["rodriguez",{"_index":1297,"title":{},"body":{"properties.html":{}}}],["run",{"_index":1233,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":1042,"title":{},"body":{"injectables/RequestService.html":{}}}],["scalable",{"_index":1223,"title":{},"body":{"index.html":{}}}],["scale",{"_index":742,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{}}}],["schema",{"_index":911,"title":{},"body":{"controllers/RequestController.html":{}}}],["separated",{"_index":716,"title":{},"body":{"classes/MapBox.html":{}}}],["server",{"_index":967,"title":{},"body":{"controllers/RequestController.html":{},"index.html":{}}}],["service",{"_index":1280,"title":{},"body":{"properties.html":{}}}],["services",{"_index":938,"title":{},"body":{"controllers/RequestController.html":{},"modules/RequestModule.html":{}}}],["side",{"_index":1224,"title":{},"body":{"index.html":{}}}],["singleline",{"_index":382,"title":{},"body":{"modules/ConfigModule.html":{}}}],["small",{"_index":1278,"title":{},"body":{"properties.html":{}}}],["smallint",{"_index":277,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Rider.html":{},"entities/Trip.html":{}}}],["something",{"_index":913,"title":{},"body":{"controllers/RequestController.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"modules/ApiModule.html":{},"interfaces/AppConfig.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"index.html":{}}}],["specific",{"_index":961,"title":{},"body":{"controllers/RequestController.html":{}}}],["sponsors",{"_index":1251,"title":{},"body":{"index.html":{}}}],["src/.../card",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../generate",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../payment",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../request",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../trip",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../trip.helper.ts",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api.module.ts",{"_index":210,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/api/commons/enums/card",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/commons/enums/payment",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/commons/enums/request",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/commons/enums/trip",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/commons/helpers/generate",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/api/commons/helpers/trip.helper.ts",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/api/commons/interfaces/trip",{"_index":511,"title":{},"body":{"interfaces/DistanceToKilometers.html":{},"interfaces/DurationToMinutes.html":{},"coverage.html":{}}}],["src/api/libs/interfaces/generate",{"_index":625,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"coverage.html":{}}}],["src/api/libs/interfaces/map",{"_index":637,"title":{},"body":{"interfaces/GetDirection.html":{},"coverage.html":{}}}],["src/api/libs/interfaces/tokenize",{"_index":1080,"title":{},"body":{"interfaces/TokenizeCard.html":{},"coverage.html":{}}}],["src/api/libs/map",{"_index":708,"title":{},"body":{"classes/MapBox.html":{},"coverage.html":{}}}],["src/api/libs/payment",{"_index":767,"title":{},"body":{"classes/PaymentGateway.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/request/controllers/request.controller.ts",{"_index":901,"title":{},"body":{"controllers/RequestController.html":{},"coverage.html":{}}}],["src/api/request/controllers/request.controller.ts:123",{"_index":919,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/api/request/controllers/request.controller.ts:66",{"_index":926,"title":{},"body":{"controllers/RequestController.html":{}}}],["src/api/request/dto/finish",{"_index":575,"title":{},"body":{"classes/FinishRideDto.html":{},"coverage.html":{}}}],["src/api/request/dto/request",{"_index":682,"title":{},"body":{"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"coverage.html":{}}}],["src/api/request/entities/request.entity.ts",{"_index":864,"title":{},"body":{"entities/Request.html":{},"coverage.html":{}}}],["src/api/request/entities/request.entity.ts:20",{"_index":876,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:29",{"_index":870,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:41",{"_index":887,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:50",{"_index":882,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:63",{"_index":874,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/entities/request.entity.ts:75",{"_index":884,"title":{},"body":{"entities/Request.html":{}}}],["src/api/request/interfaces/generate",{"_index":619,"title":{},"body":{"interfaces/GeneratePaymentReference.html":{},"coverage.html":{}}}],["src/api/request/request.module.ts",{"_index":978,"title":{},"body":{"modules/RequestModule.html":{}}}],["src/api/request/services/driver.service.ts",{"_index":536,"title":{},"body":{"injectables/DriverService.html":{},"coverage.html":{}}}],["src/api/request/services/driver.service.ts:14",{"_index":544,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/api/request/services/driver.service.ts:24",{"_index":546,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/api/request/services/driver.service.ts:8",{"_index":542,"title":{},"body":{"injectables/DriverService.html":{}}}],["src/api/request/services/payment.service.ts",{"_index":836,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/api/request/services/payment.service.ts:11",{"_index":839,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/api/request/services/payment.service.ts:17",{"_index":842,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/api/request/services/request.service.ts",{"_index":983,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/api/request/services/request.service.ts:19",{"_index":987,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/api/request/services/request.service.ts:35",{"_index":990,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/api/request/services/request.service.ts:81",{"_index":988,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/api/request/services/rider.service.ts",{"_index":1073,"title":{},"body":{"injectables/RiderService.html":{},"coverage.html":{}}}],["src/api/request/services/rider.service.ts:14",{"_index":1077,"title":{},"body":{"injectables/RiderService.html":{}}}],["src/api/request/services/rider.service.ts:8",{"_index":1075,"title":{},"body":{"injectables/RiderService.html":{}}}],["src/api/request/services/trip.service.ts",{"_index":1121,"title":{},"body":{"injectables/TripService.html":{},"coverage.html":{}}}],["src/api/request/services/trip.service.ts:10",{"_index":1124,"title":{},"body":{"injectables/TripService.html":{}}}],["src/api/request/services/trip.service.ts:17",{"_index":1127,"title":{},"body":{"injectables/TripService.html":{}}}],["src/api/request/services/trip.service.ts:29",{"_index":1128,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app.module.ts",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/config.module.ts",{"_index":316,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config/interfaces/app",{"_index":217,"title":{},"body":{"interfaces/AppConfig.html":{},"coverage.html":{}}}],["src/config/interfaces/database",{"_index":498,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["src/config/interfaces/http.interface.ts",{"_index":659,"title":{},"body":{"interfaces/Http.html":{},"coverage.html":{}}}],["src/config/interfaces/rate",{"_index":856,"title":{},"body":{"interfaces/RateLimiting.html":{},"coverage.html":{}}}],["src/database/config/typeorm.config.ts",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":505,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/entities/base.entity.ts",{"_index":241,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["src/database/entities/base.entity.ts:11",{"_index":248,"title":{},"body":{"classes/Base.html":{}}}],["src/database/entities/base.entity.ts:17",{"_index":257,"title":{},"body":{"classes/Base.html":{}}}],["src/database/entities/base.entity.ts:23",{"_index":251,"title":{},"body":{"classes/Base.html":{}}}],["src/database/entities/base.entity.ts:6",{"_index":253,"title":{},"body":{"classes/Base.html":{}}}],["src/database/entities/car.entity.ts",{"_index":267,"title":{},"body":{"entities/Car.html":{},"coverage.html":{}}}],["src/database/entities/car.entity.ts:19",{"_index":293,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:29",{"_index":294,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:40",{"_index":301,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:51",{"_index":278,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:63",{"_index":282,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:67",{"_index":287,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/car.entity.ts:70",{"_index":299,"title":{},"body":{"entities/Car.html":{}}}],["src/database/entities/driver.entity.ts",{"_index":516,"title":{},"body":{"entities/Driver.html":{},"coverage.html":{}}}],["src/database/entities/driver.entity.ts:19",{"_index":526,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/driver.entity.ts:31",{"_index":521,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/driver.entity.ts:43",{"_index":523,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/driver.entity.ts:46",{"_index":520,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/driver.entity.ts:49",{"_index":528,"title":{},"body":{"entities/Driver.html":{}}}],["src/database/entities/location.entity.ts",{"_index":660,"title":{},"body":{"entities/Location.html":{},"coverage.html":{}}}],["src/database/entities/location.entity.ts:16",{"_index":668,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:24",{"_index":670,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:35",{"_index":678,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:38",{"_index":674,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:41",{"_index":672,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/location.entity.ts:44",{"_index":666,"title":{},"body":{"entities/Location.html":{}}}],["src/database/entities/payment.entity.ts",{"_index":737,"title":{},"body":{"entities/Payment.html":{},"coverage.html":{}}}],["src/database/entities/payment.entity.ts:14",{"_index":760,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:24",{"_index":744,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:36",{"_index":752,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:47",{"_index":751,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:61",{"_index":748,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/payment.entity.ts:70",{"_index":758,"title":{},"body":{"entities/Payment.html":{}}}],["src/database/entities/rider.entity.ts",{"_index":1052,"title":{},"body":{"entities/Rider.html":{},"coverage.html":{}}}],["src/database/entities/rider.entity.ts:19",{"_index":1058,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:32",{"_index":1060,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:42",{"_index":1056,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:55",{"_index":1064,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:66",{"_index":1066,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/rider.entity.ts:69",{"_index":1067,"title":{},"body":{"entities/Rider.html":{}}}],["src/database/entities/trip.entity.ts",{"_index":1085,"title":{},"body":{"entities/Trip.html":{},"coverage.html":{}}}],["src/database/entities/trip.entity.ts:110",{"_index":1114,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:120",{"_index":1107,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:21",{"_index":1109,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:31",{"_index":1113,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:43",{"_index":1100,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:54",{"_index":1104,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:64",{"_index":1094,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:74",{"_index":1091,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:86",{"_index":1110,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/entities/trip.entity.ts:98",{"_index":1097,"title":{},"body":{"entities/Trip.html":{}}}],["src/database/migrations/1678182352019",{"_index":467,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{},"coverage.html":{}}}],["src/database/migrations/1678182431069",{"_index":427,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"coverage.html":{}}}],["src/database/migrations/1678185095471",{"_index":438,"title":{},"body":{"classes/CreatePaymentMethodsTable1678185095471.html":{},"coverage.html":{}}}],["src/database/migrations/1678185298028",{"_index":61,"title":{},"body":{"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"coverage.html":{}}}],["src/database/migrations/1678186681233",{"_index":859,"title":{},"body":{"classes/RenameNameColumnInRidersTable1678186681233.html":{},"coverage.html":{}}}],["src/database/migrations/1678187115666",{"_index":407,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"coverage.html":{}}}],["src/database/migrations/1678187456870",{"_index":398,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{},"coverage.html":{}}}],["src/database/migrations/1678187764454",{"_index":6,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"coverage.html":{}}}],["src/database/migrations/1678216032691",{"_index":454,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"coverage.html":{}}}],["src/database/migrations/1678218041445",{"_index":476,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"coverage.html":{}}}],["src/database/migrations/1678221796470",{"_index":177,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"coverage.html":{}}}],["src/database/migrations/1678223295357",{"_index":157,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"coverage.html":{}}}],["src/database/migrations/1678223649061",{"_index":116,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"coverage.html":{}}}],["src/database/migrations/1678276720338",{"_index":143,"title":{},"body":{"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"coverage.html":{}}}],["src/database/migrations/1678280557690",{"_index":149,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"coverage.html":{}}}],["src/database/migrations/1678285496704",{"_index":137,"title":{},"body":{"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"coverage.html":{}}}],["src/database/migrations/1678290428231",{"_index":171,"title":{},"body":{"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"coverage.html":{}}}],["src/database/migrations/1678294718551",{"_index":569,"title":{},"body":{"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"coverage.html":{}}}],["src/database/migrations/1678295934312",{"_index":71,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"coverage.html":{}}}],["src/database/migrations/1678308519422",{"_index":106,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"coverage.html":{}}}],["src/health/controllers/health.controller.ts",{"_index":641,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/controllers/health.controller.ts:12",{"_index":645,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":657,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ssl",{"_index":501,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["start",{"_index":1234,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1237,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1238,"title":{},"body":{"index.html":{}}}],["start_time",{"_index":485,"title":{},"body":{"classes/CreateTripsTable1678218041445.html":{},"entities/Trip.html":{}}}],["started",{"_index":1111,"title":{"index.html":{}},"body":{"entities/Trip.html":{}}}],["starter",{"_index":1228,"title":{},"body":{"index.html":{}}}],["startride",{"_index":984,"title":{},"body":{"injectables/RequestService.html":{}}}],["startride(payload",{"_index":989,"title":{},"body":{"injectables/RequestService.html":{}}}],["starttime",{"_index":893,"title":{},"body":{"entities/Request.html":{},"entities/Trip.html":{}}}],["statements",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":710,"title":{},"body":{"classes/MapBox.html":{}}}],["status",{"_index":90,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{}}}],["status\"::\"text\"::\"public\".\"payments_status_enum",{"_index":92,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["status\"::\"text\"::\"public\".\"payments_status_enum_old",{"_index":103,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{}}}],["status.enum.ts",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":959,"title":{},"body":{"controllers/RequestController.html":{}}}],["stay",{"_index":1259,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"interfaces/PaymentMethod.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["string})@column({type",{"_index":290,"title":{},"body":{"entities/Car.html":{},"entities/Rider.html":{}}}],["style",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfully",{"_index":925,"title":{},"body":{"controllers/RequestController.html":{}}}],["summary",{"_index":943,"title":{},"body":{"controllers/RequestController.html":{}}}],["support",{"_index":1252,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surge",{"_index":154,"title":{},"body":{"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/CreateRequestsTable1678216032691.html":{}}}],["svg",{"_index":1269,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":39,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":379,"title":{},"body":{"modules/ConfigModule.html":{}}}],["terminusmodule",{"_index":658,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1241,"title":{},"body":{"index.html":{}}}],["test/#readme",{"_index":1292,"title":{},"body":{"properties.html":{}}}],["test/issues",{"_index":1294,"title":{},"body":{"properties.html":{}}}],["test:covsupport",{"_index":1244,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1243,"title":{},"body":{"index.html":{}}}],["testing').default('development",{"_index":347,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tests",{"_index":1240,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1250,"title":{},"body":{"index.html":{}}}],["that'll",{"_index":992,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.axios",{"_index":786,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.axios.get(`${gatewayendpoints.merchants}/${process.env.gateway_public_key",{"_index":794,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.axios.post(gatewayendpoints.cards",{"_index":807,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.axios.post(gatewayendpoints.transactions",{"_index":822,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.datasource.transaction(async",{"_index":1014,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.db.pingcheck('database",{"_index":656,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.driverrepository.find",{"_index":553,"title":{},"body":{"injectables/DriverService.html":{}}}],["this.driverrepository.findone",{"_index":564,"title":{},"body":{"injectables/DriverService.html":{}}}],["this.driverservice.getfirstdriver",{"_index":1131,"title":{},"body":{"injectables/TripService.html":{}}}],["this.firstname",{"_index":1071,"title":{},"body":{"entities/Rider.html":{}}}],["this.generateacceptancetoken",{"_index":821,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.health.check",{"_index":655,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.lastname",{"_index":1072,"title":{},"body":{"entities/Rider.html":{}}}],["this.logger.error(`something",{"_index":797,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["this.logger.error(error",{"_index":1028,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.paymentrepository.save(payment",{"_index":855,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentservice.generatepayment",{"_index":1045,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.requestservice.finishride(payload",{"_index":973,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.requestservice.startride(payload",{"_index":971,"title":{},"body":{"controllers/RequestController.html":{}}}],["this.riderrepository.findone",{"_index":1079,"title":{},"body":{"injectables/RiderService.html":{}}}],["this.riderservice.getonebyidorfail(riderid",{"_index":1010,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.triprepository.findone",{"_index":1134,"title":{},"body":{"injectables/TripService.html":{}}}],["this.tripservice.generatebasetrip(incomingrequest",{"_index":1020,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.tripservice.getonebyidorfail(tripid",{"_index":1030,"title":{},"body":{"injectables/RequestService.html":{}}}],["throttlerguard",{"_index":326,"title":{},"body":{"modules/ConfigModule.html":{}}}],["throttlermodule",{"_index":325,"title":{},"body":{"modules/ConfigModule.html":{}}}],["throttlermodule.forrootasync",{"_index":391,"title":{},"body":{"modules/ConfigModule.html":{}}}],["throw",{"_index":555,"title":{},"body":{"injectables/DriverService.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"injectables/RequestService.html":{},"injectables/RiderService.html":{},"injectables/TripService.html":{}}}],["time",{"_index":196,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["timeout",{"_index":386,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Http.html":{}}}],["timestamp",{"_index":186,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["timestamptz",{"_index":1099,"title":{},"body":{"entities/Trip.html":{}}}],["tip",{"_index":191,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{}}}],["token",{"_index":635,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/RequestService.html":{}}}],["tokenize_card_cvc",{"_index":368,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenize_card_exp_month",{"_index":369,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenize_card_exp_year",{"_index":370,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenize_card_holder",{"_index":371,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenize_card_number",{"_index":366,"title":{},"body":{"modules/ConfigModule.html":{}}}],["tokenizecard",{"_index":223,"title":{"interfaces/TokenizeCard.html":{}},"body":{"interfaces/AppConfig.html":{},"classes/PaymentGateway.html":{},"interfaces/TokenizeCard.html":{},"coverage.html":{}}}],["tokenizedcard",{"_index":1038,"title":{},"body":{"injectables/RequestService.html":{}}}],["tokenizing",{"_index":819,"title":{},"body":{"classes/PaymentGateway.html":{}}}],["tokens/cards",{"_index":783,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{}}}],["touch",{"_index":1260,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":755,"title":{},"body":{"entities/Payment.html":{},"injectables/RequestService.html":{}}}],["transaction.interface.ts",{"_index":626,"title":{},"body":{"interfaces/GenerateTransaction.html":{},"interfaces/PaymentMethod.html":{},"coverage.html":{}}}],["transaction_id",{"_index":111,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"entities/Payment.html":{}}}],["transactionid",{"_index":623,"title":{},"body":{"interfaces/GeneratePaymentReference.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"injectables/RequestService.html":{}}}],["transactions",{"_index":785,"title":{},"body":{"classes/PaymentGateway.html":{},"miscellaneous/enumerations.html":{},"properties.html":{}}}],["transform",{"_index":888,"title":{},"body":{"entities/Request.html":{},"entities/Trip.html":{}}}],["transformer",{"_index":614,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"dependencies.html":{}}}],["transformfaretocurrency",{"_index":889,"title":{},"body":{"entities/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformfaretocurrency(value",{"_index":897,"title":{},"body":{"entities/Request.html":{}}}],["transport",{"_index":378,"title":{},"body":{"modules/ConfigModule.html":{}}}],["trip",{"_index":295,"title":{"entities/Trip.html":{}},"body":{"entities/Car.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"entities/Payment.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["trip'})@apicreatedresponse({description",{"_index":923,"title":{},"body":{"controllers/RequestController.html":{}}}],["trip.car",{"_index":297,"title":{},"body":{"entities/Car.html":{},"injectables/TripService.html":{}}}],["trip.driver",{"_index":527,"title":{},"body":{"entities/Driver.html":{},"injectables/TripService.html":{}}}],["trip.entity",{"_index":309,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Payment.html":{}}}],["trip.finallocation",{"_index":665,"title":{},"body":{"entities/Location.html":{}}}],["trip.payment",{"_index":759,"title":{},"body":{"entities/Payment.html":{}}}],["trip.request",{"_index":892,"title":{},"body":{"entities/Request.html":{},"injectables/TripService.html":{}}}],["trip.request)@transform",{"_index":886,"title":{},"body":{"entities/Request.html":{}}}],["trip.service",{"_index":997,"title":{},"body":{"injectables/RequestService.html":{}}}],["trip.starttime",{"_index":1133,"title":{},"body":{"injectables/TripService.html":{}}}],["trip_id",{"_index":164,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["tripfinalfare",{"_index":1034,"title":{},"body":{"injectables/RequestService.html":{}}}],["tripid",{"_index":579,"title":{},"body":{"classes/FinishRideDto.html":{},"injectables/RequestService.html":{}}}],["triprepository",{"_index":1125,"title":{},"body":{"injectables/TripService.html":{}}}],["trips",{"_index":95,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"entities/Car.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{}}}],["trips\"(\"id",{"_index":169,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{}}}],["tripservice",{"_index":977,"title":{"injectables/TripService.html":{}},"body":{"modules/RequestModule.html":{},"injectables/RequestService.html":{},"injectables/TripService.html":{},"coverage.html":{},"overview.html":{}}}],["tripstatus",{"_index":999,"title":{},"body":{"injectables/RequestService.html":{},"entities/Trip.html":{},"miscellaneous/enumerations.html":{}}}],["tripstatus.completed",{"_index":1047,"title":{},"body":{"injectables/RequestService.html":{}}}],["tripstatus.in_progress",{"_index":1120,"title":{},"body":{"entities/Trip.html":{}}}],["trip})@onetoone(undefined",{"_index":885,"title":{},"body":{"entities/Request.html":{}}}],["true",{"_index":256,"title":{},"body":{"classes/Base.html":{},"entities/Car.html":{},"modules/ConfigModule.html":{},"entities/Driver.html":{},"classes/FinishRideDto.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"entities/Payment.html":{},"entities/Request.html":{},"classes/RequestRideDto.html":{},"entities/Rider.html":{},"entities/Trip.html":{},"injectables/TripService.html":{}}}],["true})@column({name",{"_index":757,"title":{},"body":{"entities/Payment.html":{}}}],["true})@isnumber",{"_index":684,"title":{},"body":{"classes/LocationDto.html":{}}}],["true})@isuuid('4",{"_index":602,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/RequestRideDto.html":{}}}],["true})@joincolumn({name",{"_index":879,"title":{},"body":{"entities/Request.html":{}}}],["true})@transform",{"_index":1103,"title":{},"body":{"entities/Trip.html":{}}}],["true})@validatenested()@type(undefined)@isdefined()@isnotemptyobject",{"_index":582,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/RequestRideDto.html":{}}}],["try",{"_index":560,"title":{},"body":{"injectables/DriverService.html":{},"classes/MapBox.html":{},"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["ttl",{"_index":392,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/RateLimiting.html":{}}}],["twitter",{"_index":1266,"title":{},"body":{"index.html":{}}}],["two",{"_index":714,"title":{},"body":{"classes/MapBox.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"interfaces/AppConfig.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DistanceToKilometers.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"interfaces/DurationToMinutes.html":{},"classes/FinishRideDto.html":{},"interfaces/GeneratePaymentReference.html":{},"interfaces/GenerateTransaction.html":{},"interfaces/GetDirection.html":{},"interfaces/Http.html":{},"entities/Location.html":{},"classes/LocationDto.html":{},"classes/MapBox.html":{},"entities/Payment.html":{},"classes/PaymentGateway.html":{},"interfaces/PaymentMethod.html":{},"injectables/PaymentService.html":{},"interfaces/RateLimiting.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"controllers/RequestController.html":{},"classes/RequestRideDto.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"interfaces/TokenizeCard.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":35,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Driver.html":{},"injectables/DriverService.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"entities/Location.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Rider.html":{},"injectables/RiderService.html":{},"entities/Trip.html":{},"injectables/TripService.html":{},"dependencies.html":{},"properties.html":{}}}],["typeormhealthindicator",{"_index":648,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":506,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RequestModule.html":{}}}],["typeormmodule.forfeature([driver",{"_index":979,"title":{},"body":{"modules/RequestModule.html":{}}}],["typeormmodule.forrootasync",{"_index":509,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":1227,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":745,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":912,"title":{},"body":{"controllers/RequestController.html":{}}}],["undefined})@apiinternalservererrorresponse({description",{"_index":917,"title":{},"body":{"controllers/RequestController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":915,"title":{},"body":{"controllers/RequestController.html":{}}}],["undefined})@column({type",{"_index":750,"title":{},"body":{"entities/Payment.html":{},"entities/Request.html":{},"entities/Trip.html":{}}}],["undefined})@useinterceptors(classserializerinterceptor",{"_index":918,"title":{},"body":{"controllers/RequestController.html":{}}}],["unique",{"_index":129,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"entities/Rider.html":{}}}],["unit",{"_index":1239,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1295,"title":{},"body":{"properties.html":{}}}],["up",{"_index":17,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["up(queryrunner",{"_index":32,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{}}}],["update",{"_index":54,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"injectables/RequestService.html":{}}}],["updateat",{"_index":244,"title":{},"body":{"classes/Base.html":{},"controllers/RequestController.html":{}}}],["updated_at",{"_index":188,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/Base.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["updatedatecolumn",{"_index":260,"title":{},"body":{"classes/Base.html":{}}}],["updatedatecolumn({name",{"_index":254,"title":{},"body":{"classes/Base.html":{}}}],["uq_04caa31b8581b77d274c1180c0c",{"_index":128,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["uq_79746ad153ee98938ff06104438",{"_index":166,"title":{},"body":{"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{}}}],["uq_9610d35d5d21db627101427b7e5",{"_index":131,"title":{},"body":{"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{}}}],["uq_d4cfc1aafe3a14622aee390edb2",{"_index":424,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{}}}],["uq_ed6e8eb2542a3c7c1742f9c2b54",{"_index":473,"title":{},"body":{"classes/CreateRidersTable1678182352019.html":{}}}],["useclass",{"_index":396,"title":{},"body":{"modules/ConfigModule.html":{}}}],["used",{"_index":1087,"title":{},"body":{"entities/Trip.html":{}}}],["usefactory",{"_index":384,"title":{},"body":{"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{}}}],["useinterceptors",{"_index":930,"title":{},"body":{"controllers/RequestController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":968,"title":{},"body":{"controllers/RequestController.html":{}}}],["username",{"_index":502,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":91,"title":{},"body":{"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"injectables/RequestService.html":{}}}],["uuid",{"_index":43,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["uuid.helper.ts",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uuid_generate_v4",{"_index":184,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["valid",{"_index":603,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["validatenested",{"_index":611,"title":{},"body":{"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["validation",{"_index":962,"title":{},"body":{"controllers/RequestController.html":{}}}],["validationschema",{"_index":342,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validator",{"_index":263,"title":{},"body":{"classes/Base.html":{},"classes/FinishRideDto.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{},"dependencies.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/AddRelationBetweenDriversAndCars1678187764454.html":{},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{},"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRequestsTable1678216032691.html":{},"classes/CreateRidersTable1678182352019.html":{},"classes/CreateTripsTable1678218041445.html":{},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{},"classes/PaymentGateway.html":{},"classes/RenameNameColumnInRidersTable1678186681233.html":{},"entities/Request.html":{},"injectables/RequestService.html":{},"entities/Trip.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.coordinates",{"_index":869,"title":{},"body":{"entities/Request.html":{},"entities/Trip.html":{}}}],["value.fullname",{"_index":881,"title":{},"body":{"entities/Request.html":{}}}],["value?.finallocation?.coordinates",{"_index":896,"title":{},"body":{"entities/Request.html":{}}}],["value?.starttime",{"_index":894,"title":{},"body":{"entities/Request.html":{}}}],["varchar",{"_index":279,"title":{},"body":{"entities/Car.html":{},"entities/Driver.html":{},"entities/Location.html":{},"entities/Rider.html":{}}}],["variable",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1298,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":113,"title":{},"body":{"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{},"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreatePaymentMethodsTable1678185095471.html":{},"classes/CreateRidersTable1678182352019.html":{}}}],["varying(100",{"_index":403,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{}}}],["varying(150",{"_index":414,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateLocationsTable1678182431069.html":{},"classes/CreateRidersTable1678182352019.html":{}}}],["varying(250",{"_index":418,"title":{},"body":{"classes/CreateDriversTable1678187115666.html":{},"classes/CreateRidersTable1678182352019.html":{}}}],["varying(50",{"_index":404,"title":{},"body":{"classes/CreateCarsTable1678187456870.html":{},"classes/CreateDriversTable1678187115666.html":{}}}],["version",{"_index":1276,"title":{},"body":{"properties.html":{}}}],["visa",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["waiting",{"_index":463,"title":{},"body":{"classes/CreateRequestsTable1678216032691.html":{},"miscellaneous/enumerations.html":{}}}],["watch",{"_index":1235,"title":{},"body":{"index.html":{}}}],["website",{"_index":1264,"title":{},"body":{"index.html":{}}}],["went",{"_index":798,"title":{},"body":{"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["wrong",{"_index":799,"title":{},"body":{"classes/PaymentGateway.html":{},"controllers/RequestController.html":{},"injectables/RequestService.html":{}}}],["year",{"_index":273,"title":{},"body":{"entities/Car.html":{},"classes/CreateCarsTable1678187456870.html":{}}}],["you'd",{"_index":1255,"title":{},"body":{"index.html":{}}}],["zip",{"_index":675,"title":{},"body":{"entities/Location.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["zip_code",{"_index":435,"title":{},"body":{"classes/CreateLocationsTable1678182431069.html":{},"entities/Location.html":{}}}],["zipcode",{"_index":663,"title":{},"body":{"entities/Location.html":{},"classes/LocationDto.html":{},"classes/RequestRideDto.html":{}}}],["zone",{"_index":197,"title":{},"body":{"classes/AlterTripsTableToHandlePayments1678221796470.html":{},"classes/CreateTripsTable1678218041445.html":{}}}],["zoom",{"_index":207,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/RequestModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddRelationBetweenDriversAndCars1678187764454.html":{"url":"classes/AddRelationBetweenDriversAndCars1678187764454.html","title":"class - AddRelationBetweenDriversAndCars1678187764454","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRelationBetweenDriversAndCars1678187764454\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddRelationBetweenDriversAndCars1678187764454'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddRelationBetweenDriversAndCars1678187764454 implements MigrationInterface {\n  name = 'AddRelationBetweenDriversAndCars1678187764454';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"cars\" ADD \"driver_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"cars\" ADD CONSTRAINT \"FK_1403195e3b80cf083352758adb0\" FOREIGN KEY (\"driver_id\") REFERENCES \"drivers\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"cars\" DROP CONSTRAINT \"FK_1403195e3b80cf083352758adb0\"`);\n    await queryRunner.query(`ALTER TABLE \"cars\" DROP COLUMN \"driver_id\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html":{"url":"classes/AddRelationBetweenRidersAndPaymentMethods1678185298028.html","title":"class - AddRelationBetweenRidersAndPaymentMethods1678185298028","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRelationBetweenRidersAndPaymentMethods1678185298028\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddRelationBetweenRidersAndPaymentMethods1678185298028'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddRelationBetweenRidersAndPaymentMethods1678185298028 implements MigrationInterface {\n  name = 'AddRelationBetweenRidersAndPaymentMethods1678185298028';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payment_methods\" ADD \"rider_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"payment_methods\" ADD CONSTRAINT \"FK_cc669ad722640e54bb5c56972c6\" FOREIGN KEY (\"rider_id\") REFERENCES \"riders\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payment_methods\" DROP CONSTRAINT \"FK_cc669ad722640e54bb5c56972c6\"`);\n    await queryRunner.query(`ALTER TABLE \"payment_methods\" DROP COLUMN \"rider_id\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html":{"url":"classes/AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312.html","title":"class - AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312 implements MigrationInterface {\n  name = 'AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"payments_payment_method_type_enum\" AS ENUM('CASH', 'CREDIT_CARD', 'PSE')`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD \"payment_method_type\" \"public\".\"payments_payment_method_type_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"payments_status_enum\" RENAME TO \"payments_status_enum_old\"`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"payments_status_enum\" AS ENUM('PENDING', 'APPROVED', 'DECLINED', 'ERROR')`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE \"public\".\"payments_status_enum\" USING \"status\"::\"text\"::\"public\".\"payments_status_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payments_status_enum_old\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"payments_status_enum_old\" AS ENUM('APPROVED', 'DECLINED', 'ERROR')`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE \"public\".\"payments_status_enum_old\" USING \"status\"::\"text\"::\"public\".\"payments_status_enum_old\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payments_status_enum\"`);\n    await queryRunner.query(`ALTER TYPE \"public\".\"payments_status_enum_old\" RENAME TO \"payments_status_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP COLUMN \"payment_method_type\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payments_payment_method_type_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterPaymentsTableToAddTransactionId1678308519422.html":{"url":"classes/AlterPaymentsTableToAddTransactionId1678308519422.html","title":"class - AlterPaymentsTableToAddTransactionId1678308519422","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterPaymentsTableToAddTransactionId1678308519422\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterPaymentsTableToAddTransactionId1678308519422'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterPaymentsTableToAddTransactionId1678308519422 implements MigrationInterface {\n  name = 'AlterPaymentsTableToAddTransactionId1678308519422';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD \"transaction_id\" character varying NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP COLUMN \"transaction_id\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html":{"url":"classes/AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061.html","title":"class - AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061 implements MigrationInterface {\n  name = 'AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_6c5633e5a6d5635831cbc96bef6\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_a796178a3fa8c222d6bb8b65c54\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_213969006cff7948380b9595044\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"final_location\" TO \"final_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"REL_6c5633e5a6d5635831cbc96bef\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"pickup_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"REL_a796178a3fa8c222d6bb8b65c5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"dropoff_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"pickup_location_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"UQ_04caa31b8581b77d274c1180c0c\" UNIQUE (\"pickup_location_id\")`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"dropoff_location_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"UQ_9610d35d5d21db627101427b7e5\" UNIQUE (\"dropoff_location_id\")`);\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_04caa31b8581b77d274c1180c0c\" FOREIGN KEY (\"pickup_location_id\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_9610d35d5d21db627101427b7e5\" FOREIGN KEY (\"dropoff_location_id\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_839c2a9fd7fb004440b548b59f1\" FOREIGN KEY (\"final_location_id\") REFERENCES \"location\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_839c2a9fd7fb004440b548b59f1\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_9610d35d5d21db627101427b7e5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_04caa31b8581b77d274c1180c0c\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"UQ_9610d35d5d21db627101427b7e5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"dropoff_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"UQ_04caa31b8581b77d274c1180c0c\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"pickup_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"dropoff_location\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"REL_a796178a3fa8c222d6bb8b65c5\" UNIQUE (\"dropoff_location\")`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"pickup_location\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"REL_6c5633e5a6d5635831cbc96bef\" UNIQUE (\"pickup_location\")`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"final_location_id\" TO \"final_location\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_213969006cff7948380b9595044\" FOREIGN KEY (\"final_location\") REFERENCES \"location\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_a796178a3fa8c222d6bb8b65c54\" FOREIGN KEY (\"dropoff_location\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_6c5633e5a6d5635831cbc96bef6\" FOREIGN KEY (\"pickup_location\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterRequestTableToHandleGeometryFields1678285496704.html":{"url":"classes/AlterRequestTableToHandleGeometryFields1678285496704.html","title":"class - AlterRequestTableToHandleGeometryFields1678285496704","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterRequestTableToHandleGeometryFields1678285496704\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterRequestTableToHandleGeometryFields1678285496704'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterRequestTableToHandleGeometryFields1678285496704 implements MigrationInterface {\n  name = 'AlterRequestTableToHandleGeometryFields1678285496704';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html":{"url":"classes/AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338.html","title":"class - AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338 implements MigrationInterface {\n  name = 'AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_9610d35d5d21db627101427b7e5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_04caa31b8581b77d274c1180c0c\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"UQ_9610d35d5d21db627101427b7e5\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"dropoff_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"UQ_04caa31b8581b77d274c1180c0c\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"pickup_location_id\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"pickup_location\" geometry NOT NULL`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"dropoff_location\" geometry NOT NULL`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"dropoff_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"pickup_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"pickup_location_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"UQ_04caa31b8581b77d274c1180c0c\" UNIQUE (\"pickup_location_id\")`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"dropoff_location_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD CONSTRAINT \"UQ_9610d35d5d21db627101427b7e5\" UNIQUE (\"dropoff_location_id\")`);\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_04caa31b8581b77d274c1180c0c\" FOREIGN KEY (\"pickup_location_id\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_9610d35d5d21db627101427b7e5\" FOREIGN KEY (\"dropoff_location_id\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterRequestTableToRemoveSurge1678280557690.html":{"url":"classes/AlterRequestTableToRemoveSurge1678280557690.html","title":"class - AlterRequestTableToRemoveSurge1678280557690","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterRequestTableToRemoveSurge1678280557690\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterRequestTableToRemoveSurge1678280557690'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterRequestTableToRemoveSurge1678280557690 implements MigrationInterface {\n  name = 'AlterRequestTableToRemoveSurge1678280557690';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP COLUMN \"surge\"`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ADD \"surge\" numeric(10,2) NOT NULL`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterTripsTableToFixRelationIssues1678223295357.html":{"url":"classes/AlterTripsTableToFixRelationIssues1678223295357.html","title":"class - AlterTripsTableToFixRelationIssues1678223295357","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterTripsTableToFixRelationIssues1678223295357\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterTripsTableToFixRelationIssues1678223295357'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterTripsTableToFixRelationIssues1678223295357 implements MigrationInterface {\n  name = 'AlterTripsTableToFixRelationIssues1678223295357';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"FK_bd02a6beaa5c282445abc4b3507\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"REL_bd02a6beaa5c282445abc4b350\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP COLUMN \"trip_id\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"payment_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD CONSTRAINT \"UQ_79746ad153ee98938ff06104438\" UNIQUE (\"payment_id\")`);\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_79746ad153ee98938ff06104438\" FOREIGN KEY (\"payment_id\") REFERENCES \"payments\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_79746ad153ee98938ff06104438\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"UQ_79746ad153ee98938ff06104438\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"payment_id\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD \"trip_id\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD CONSTRAINT \"REL_bd02a6beaa5c282445abc4b350\" UNIQUE (\"trip_id\")`);\n    await queryRunner.query(\n      `ALTER TABLE \"payments\" ADD CONSTRAINT \"FK_bd02a6beaa5c282445abc4b3507\" FOREIGN KEY (\"trip_id\") REFERENCES \"trips\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html":{"url":"classes/AlterTripsTableToHandleGeolocationFields1678290428231.html","title":"class - AlterTripsTableToHandleGeolocationFields1678290428231","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterTripsTableToHandleGeolocationFields1678290428231\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterTripsTableToHandleGeolocationFields1678290428231'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterTripsTableToHandleGeolocationFields1678290428231 implements MigrationInterface {\n  name = 'AlterTripsTableToHandleGeolocationFields1678290428231';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_839c2a9fd7fb004440b548b59f1\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"final_location_id\" TO \"final_location\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"final_location\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"final_location\" geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"final_location\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"final_location\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"final_location\" TO \"final_location_id\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_839c2a9fd7fb004440b548b59f1\" FOREIGN KEY (\"final_location_id\") REFERENCES \"location\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlterTripsTableToHandlePayments1678221796470.html":{"url":"classes/AlterTripsTableToHandlePayments1678221796470.html","title":"class - AlterTripsTableToHandlePayments1678221796470","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlterTripsTableToHandlePayments1678221796470\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlterTripsTableToHandlePayments1678221796470'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AlterTripsTableToHandlePayments1678221796470 implements MigrationInterface {\n  name = 'AlterTripsTableToHandlePayments1678221796470';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"payments_status_enum\" AS ENUM('APPROVED', 'DECLINED', 'ERROR')`);\n    await queryRunner.query(\n      `CREATE TABLE \"payments\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"fare\" numeric(10,2) NOT NULL, \"tip\" numeric(10,2), \"status\" \"public\".\"payments_status_enum\" NOT NULL, \"trip_id\" uuid, \"payment_method_id\" uuid, CONSTRAINT \"REL_bd02a6beaa5c282445abc4b350\" UNIQUE (\"trip_id\"), CONSTRAINT \"PK_197ab7af18c93fbb0c9b28b4a59\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"fare\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"end_time\" TIMESTAMP WITH TIME ZONE`);\n    await queryRunner.query(\n      `ALTER TABLE \"payments\" ADD CONSTRAINT \"FK_bd02a6beaa5c282445abc4b3507\" FOREIGN KEY (\"trip_id\") REFERENCES \"trips\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"payments\" ADD CONSTRAINT \"FK_12fd861c33c885f01b9a7da7d93\" FOREIGN KEY (\"payment_method_id\") REFERENCES \"payment_methods\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"FK_12fd861c33c885f01b9a7da7d93\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"FK_bd02a6beaa5c282445abc4b3507\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP COLUMN \"end_time\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ADD \"end_time\" numeric(10,2) NOT NULL`);\n    await queryRunner.query(`DROP TABLE \"payments\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payments_status_enum\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" RENAME COLUMN \"end_time\" TO \"fare\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nRequestModule->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RequestModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RequestModule } from './request/request.module';\n\n@Module({\n  imports: [RequestModule],\n})\nexport class ApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/app-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            http\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            rateLimiting\n                                        \n                                \n                                \n                                        \n                                            tokenizeCard\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:         DatabaseConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        http\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        http:         Http\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Http\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rateLimiting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rateLimiting:         RateLimiting\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RateLimiting\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenizeCard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenizeCard:         TokenizeCard\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TokenizeCard\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DatabaseConfig, RateLimiting, Http } from './';\nimport { TokenizeCard } from './../../api/libs/interfaces';\n\nexport interface AppConfig {\n  port: number;\n  database: DatabaseConfig;\n  rateLimiting: RateLimiting;\n  http: Http;\n  tokenizeCard: TokenizeCard;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ApiModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            HealthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n// App Modules\nimport { ApiModule } from './api';\nimport { ConfigModule } from './config';\nimport { DatabaseModule } from './database';\nimport { HealthModule } from './health';\n\n@Module({\n  imports: [ConfigModule, DatabaseModule, HealthModule, ApiModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updateAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/base.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/base.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/base.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/base.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, DeleteDateColumn } from 'typeorm';\nimport { IsOptional } from 'class-validator';\n\nexport class Base {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn({\n    name: 'created_at',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({\n    name: 'updated_at',\n    nullable: true,\n  })\n  updateAt?: Date;\n\n  @DeleteDateColumn({\n    name: 'deleted_at',\n  })\n  @IsOptional()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Car.html":{"url":"entities/Car.html","title":"entity - Car","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Car\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/car.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                capacity\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                driver\n                            \n                            \n                                licensePlate\n                            \n                            \n                                model\n                            \n                            \n                                trips\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Capacity', type: Number, required: false})@Column({type: 'smallint', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color', type: String, required: false})@Column({type: 'varchar', length: 50, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        driver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Driver\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, driver => driver.cars, {onDelete: 'CASCADE'})@JoinColumn({name: 'driver_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        licensePlate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'License Plate', type: String})@Column({type: 'varchar', length: 100, name: 'license_plate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Model', type: String})@Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, trip => trip.car, {onDelete: 'CASCADE', eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Year', type: Number, required: false})@Column({type: 'integer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/car.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, ManyToOne, JoinColumn, OneToMany } from 'typeorm';\n\nimport { Base } from './base.entity';\nimport { Driver } from './driver.entity';\nimport { Trip } from './trip.entity';\n\n@Entity('cars')\nexport class Car extends Base {\n  @ApiProperty({\n    description: 'License Plate',\n    type: String,\n  })\n  @Column({\n    type: 'varchar',\n    length: 100,\n    name: 'license_plate',\n  })\n  licensePlate: string;\n\n  @ApiProperty({\n    description: 'Model',\n    type: String,\n  })\n  @Column({\n    type: 'varchar',\n    length: 100,\n  })\n  model: string;\n\n  @ApiProperty({\n    description: 'Year',\n    type: Number,\n    required: false,\n  })\n  @Column({\n    type: 'integer',\n    nullable: true,\n  })\n  year?: number;\n\n  @ApiProperty({\n    description: 'Capacity',\n    type: Number,\n    required: false,\n  })\n  @Column({\n    type: 'smallint',\n    nullable: true,\n  })\n  capacity?: number;\n\n  @ApiProperty({\n    description: 'Color',\n    type: String,\n    required: false,\n  })\n  @Column({\n    type: 'varchar',\n    length: 50,\n    nullable: true,\n  })\n  color?: string;\n\n  @ManyToOne(() => Driver, driver => driver.cars, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'driver_id' })\n  driver: Driver;\n\n  @OneToMany(() => Trip, trip => trip.car, { onDelete: 'CASCADE', eager: true })\n  trips: Trip[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigModule \n\nConfigModule \n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule  -->\n\nConfigModule->ConfigModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_GUARD } from '@nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigService, ConfigModule as CoreConfigModule } from '@nestjs/config';\nimport { HttpModule } from '@nestjs/axios';\nimport { ThrottlerModule, ThrottlerGuard } from '@nestjs/throttler';\nimport { LoggerModule } from 'nestjs-pino';\nimport { join } from 'path';\nimport * as Joi from 'joi';\n\nimport appConfig from './app.config';\nimport { Http, RateLimiting } from './interfaces';\n\n@Module({\n  imports: [\n    CoreConfigModule.forRoot({\n      isGlobal: true,\n      cache: true,\n      load: [appConfig],\n      envFilePath: join(__dirname, '../..', '.env'),\n      validationSchema: Joi.object({\n        NODE_ENV: Joi.string().valid('development', 'production', 'testing').default('development'),\n        PORT: Joi.number().default(3000),\n        DATABASE_NAME: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_PORT: Joi.number().default(5432),\n        DATABASE_SSL: Joi.boolean().default(false),\n        DATABASE_USERNAME: Joi.string().required(),\n        MAP_BOX_BASE_URL: Joi.string().required(),\n        MAP_BOX_ACCESS_TOKEN: Joi.string().required(),\n        PGADMIN_DEFAULT_EMAIL: Joi.string().required(),\n        PGADMIN_DEFAULT_PASSWORD: Joi.string().required(),\n        GATEWAY_BASE_URL: Joi.string().required(),\n        GATEWAY_SECRET_KEY: Joi.string().required(),\n        GATEWAY_PUBLIC_KEY: Joi.string().required(),\n        GATEWAY_ACCEPTANCE_TOKEN: Joi.string().required(),\n        TOKENIZE_CARD_NUMBER: Joi.number().required(),\n        TOKENIZE_CARD_CVC: Joi.number().required(),\n        TOKENIZE_CARD_EXP_MONTH: Joi.number().required(),\n        TOKENIZE_CARD_EXP_YEAR: Joi.number().required(),\n        TOKENIZE_CARD_HOLDER: Joi.string().required(),\n      }),\n    }),\n    LoggerModule.forRoot({\n      pinoHttp: {\n        customProps: (_req, _res) => ({\n          context: 'HTTP',\n        }),\n        transport: {\n          target: 'pino-pretty',\n          options: {\n            singleLine: true,\n          },\n        },\n      },\n    }),\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        const { timeout, maxRedirects } = configService.get('http') as Http;\n\n        return {\n          timeout,\n          maxRedirects,\n        };\n      },\n      inject: [ConfigService],\n    }),\n    ThrottlerModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        const { ttl, limit } = configService.get('rateLimiting') as RateLimiting;\n\n        return {\n          ttl,\n          limit,\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n  exports: [ConfigModule],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCarsTable1678187456870.html":{"url":"classes/CreateCarsTable1678187456870.html","title":"class - CreateCarsTable1678187456870","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCarsTable1678187456870\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678187456870-CreateCarsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateCarsTable1678187456870'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678187456870-CreateCarsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187456870-CreateCarsTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187456870-CreateCarsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateCarsTable1678187456870 implements MigrationInterface {\n  name = 'CreateCarsTable1678187456870';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"cars\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"license_plate\" character varying(100) NOT NULL, \"model\" character varying(100) NOT NULL, \"year\" integer, \"capacity\" smallint, \"color\" character varying(50), CONSTRAINT \"PK_fc218aa84e79b477d55322271b6\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"cars\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDriversTable1678187115666.html":{"url":"classes/CreateDriversTable1678187115666.html","title":"class - CreateDriversTable1678187115666","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDriversTable1678187115666\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678187115666-CreateDriversTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateDriversTable1678187115666'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678187115666-CreateDriversTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187115666-CreateDriversTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678187115666-CreateDriversTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateDriversTable1678187115666 implements MigrationInterface {\n  name = 'CreateDriversTable1678187115666';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"drivers\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"first_name\" character varying(150) NOT NULL, \"last_name\" character varying(150), \"email\" character varying NOT NULL, \"phone_number\" character varying(250), \"rating\" smallint, \"joined_date\" TIMESTAMP, \"dni\" character varying(50), \"is_banned\" boolean NOT NULL DEFAULT false, CONSTRAINT \"UQ_d4cfc1aafe3a14622aee390edb2\" UNIQUE (\"email\"), CONSTRAINT \"PK_92ab3fb69e566d3eb0cae896047\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"drivers\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocationsTable1678182431069.html":{"url":"classes/CreateLocationsTable1678182431069.html","title":"class - CreateLocationsTable1678182431069","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocationsTable1678182431069\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678182431069-CreateLocationsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateLocationsTable1678182431069'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678182431069-CreateLocationsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678182431069-CreateLocationsTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678182431069-CreateLocationsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateLocationsTable1678182431069 implements MigrationInterface {\n  name = 'CreateLocationsTable1678182431069';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"location\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"latitude\" character varying NOT NULL, \"longitude\" character varying NOT NULL, \"zip_code\" character varying(150), CONSTRAINT \"PK_876d7bdba03c72251ec4c2dc827\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"location\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentMethodsTable1678185095471.html":{"url":"classes/CreatePaymentMethodsTable1678185095471.html","title":"class - CreatePaymentMethodsTable1678185095471","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentMethodsTable1678185095471\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreatePaymentMethodsTable1678185095471'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreatePaymentMethodsTable1678185095471 implements MigrationInterface {\n  name = 'CreatePaymentMethodsTable1678185095471';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"payment_methods_method_enum\" AS ENUM('CASH', 'CREDIT_CARD', 'PSE')`);\n    await queryRunner.query(`CREATE TYPE \"public\".\"payment_methods_card_type_enum\" AS ENUM('VISA', 'MASTERCARD', 'AMERICAN_EXPRESS')`);\n    await queryRunner.query(\n      `CREATE TABLE \"payment_methods\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"method\" \"public\".\"payment_methods_method_enum\" NOT NULL, \"card_holder_name\" character varying, \"card_type\" \"public\".\"payment_methods_card_type_enum\", \"card_expiration_date\" date, CONSTRAINT \"PK_34f9b8c6dfb4ac3559f7e2820d1\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"payment_methods\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payment_methods_card_type_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"payment_methods_method_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRequestsTable1678216032691.html":{"url":"classes/CreateRequestsTable1678216032691.html","title":"class - CreateRequestsTable1678216032691","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRequestsTable1678216032691\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678216032691-CreateRequestsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateRequestsTable1678216032691'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678216032691-CreateRequestsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678216032691-CreateRequestsTable.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678216032691-CreateRequestsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateRequestsTable1678216032691 implements MigrationInterface {\n  name = 'CreateRequestsTable1678216032691';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"requests_status_enum\" AS ENUM('WAITING', 'ACCEPTED')`);\n    await queryRunner.query(\n      `CREATE TABLE \"requests\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"estimated_fare\" numeric(10,2) NOT NULL, \"surge\" numeric(10,2) NOT NULL, \"status\" \"public\".\"requests_status_enum\" NOT NULL DEFAULT 'WAITING', \"pickup_location\" uuid, \"dropoff_location\" uuid, \"rider_id\" uuid, CONSTRAINT \"REL_6c5633e5a6d5635831cbc96bef\" UNIQUE (\"pickup_location\"), CONSTRAINT \"REL_a796178a3fa8c222d6bb8b65c5\" UNIQUE (\"dropoff_location\"), CONSTRAINT \"PK_0428f484e96f9e6a55955f29b5f\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_6c5633e5a6d5635831cbc96bef6\" FOREIGN KEY (\"pickup_location\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_a796178a3fa8c222d6bb8b65c54\" FOREIGN KEY (\"dropoff_location\") REFERENCES \"location\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"requests\" ADD CONSTRAINT \"FK_db5f71a072c7bfefc58670b358e\" FOREIGN KEY (\"rider_id\") REFERENCES \"riders\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_db5f71a072c7bfefc58670b358e\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_a796178a3fa8c222d6bb8b65c54\"`);\n    await queryRunner.query(`ALTER TABLE \"requests\" DROP CONSTRAINT \"FK_6c5633e5a6d5635831cbc96bef6\"`);\n    await queryRunner.query(`DROP TABLE \"requests\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"requests_status_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRidersTable1678182352019.html":{"url":"classes/CreateRidersTable1678182352019.html","title":"class - CreateRidersTable1678182352019","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRidersTable1678182352019\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678182352019-CreateRidersTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateRidersTable1678182352019'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678182352019-CreateRidersTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678182352019-CreateRidersTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678182352019-CreateRidersTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateRidersTable1678182352019 implements MigrationInterface {\n  name = 'CreateRidersTable1678182352019';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"riders\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"name\" character varying(150) NOT NULL, \"last_name\" character varying(150), \"email\" character varying NOT NULL, \"phone_number\" character varying(250), \"rating\" smallint, CONSTRAINT \"UQ_ed6e8eb2542a3c7c1742f9c2b54\" UNIQUE (\"email\"), CONSTRAINT \"PK_6c17e67f760677500c29d68e689\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"riders\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTripsTable1678218041445.html":{"url":"classes/CreateTripsTable1678218041445.html","title":"class - CreateTripsTable1678218041445","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTripsTable1678218041445\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678218041445-CreateTripsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateTripsTable1678218041445'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678218041445-CreateTripsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678218041445-CreateTripsTable.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678218041445-CreateTripsTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateTripsTable1678218041445 implements MigrationInterface {\n  name = 'CreateTripsTable1678218041445';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TYPE \"public\".\"trips_status_enum\" AS ENUM('COMPLETED', 'IN_PROGRESS', 'PAYMENT_PENDING')`);\n    await queryRunner.query(\n      `CREATE TABLE \"trips\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, \"start_time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"fare\" numeric(10,2) NOT NULL, \"rider_rating\" smallint, \"driver_rating\" smallint, \"status\" \"public\".\"trips_status_enum\" NOT NULL DEFAULT 'IN_PROGRESS', \"request_id\" uuid, \"final_location\" uuid, \"driver_id\" uuid, \"car_id\" uuid, CONSTRAINT \"REL_f8ab7c11057c69afa8746f7924\" UNIQUE (\"request_id\"), CONSTRAINT \"REL_213969006cff7948380b959504\" UNIQUE (\"final_location\"), CONSTRAINT \"PK_f71c231dee9c05a9522f9e840f5\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_f8ab7c11057c69afa8746f79245\" FOREIGN KEY (\"request_id\") REFERENCES \"requests\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_213969006cff7948380b9595044\" FOREIGN KEY (\"final_location\") REFERENCES \"location\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_44d36110fb38f45c2f15c946ddb\" FOREIGN KEY (\"driver_id\") REFERENCES \"drivers\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"trips\" ADD CONSTRAINT \"FK_dfea9f5c01666a915e9eb1aca5b\" FOREIGN KEY (\"car_id\") REFERENCES \"cars\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_dfea9f5c01666a915e9eb1aca5b\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_44d36110fb38f45c2f15c946ddb\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_213969006cff7948380b9595044\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" DROP CONSTRAINT \"FK_f8ab7c11057c69afa8746f79245\"`);\n    await queryRunner.query(`DROP TABLE \"trips\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"trips_status_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseConfig.html":{"url":"interfaces/DatabaseConfig.html","title":"interface - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/database-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            ssl\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ssl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ssl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DatabaseConfig {\n  database: string;\n  host: string;\n  password: string;\n  port: number;\n  ssl: boolean;\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nDatabaseModule \n\nDatabaseModule \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseModule  -->\n\nDatabaseModule->DatabaseModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { CONNECTION_OPTIONS } from './config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      useFactory: () => ({ ...CONNECTION_OPTIONS }),\n    }),\n  ],\n  exports: [DatabaseModule],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DistanceToKilometers.html":{"url":"interfaces/DistanceToKilometers.html","title":"interface - DistanceToKilometers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DistanceToKilometers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/commons/interfaces/trip-helper.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            distance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DistanceToKilometers {\n  distance: number;\n}\n\nexport interface DurationToMinutes {\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Driver.html":{"url":"entities/Driver.html","title":"entity - Driver","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Driver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/driver.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cars\n                            \n                            \n                                    Optional\n                                dni\n                            \n                            \n                                    Optional\n                                isBanned\n                            \n                            \n                                    Optional\n                                joinedDate\n                            \n                            \n                                trips\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Car[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, car => car.driver, {nullable: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dni\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Driver DNI', type: String, required: false})@Column({type: 'varchar', length: 50, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isBanned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Driver Has Been Banned', type: Boolean, required: false})@Column({type: 'boolean', default: false, name: 'is_banned'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Driver Joined Date', type: Date, required: false})@Column({name: 'joined_date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, trip => trip.driver, {nullable: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/driver.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, OneToMany } from 'typeorm';\n\nimport { Car } from './car.entity';\nimport { Rider } from './rider.entity';\nimport { Trip } from './trip.entity';\n\n@Entity('drivers')\nexport class Driver extends Rider {\n  @ApiProperty({\n    description: 'Driver Joined Date',\n    type: Date,\n    required: false,\n  })\n  @Column({\n    name: 'joined_date',\n    nullable: true,\n  })\n  joinedDate?: Date;\n\n  @ApiProperty({\n    description: 'Driver DNI',\n    type: String,\n    required: false,\n  })\n  @Column({\n    type: 'varchar',\n    length: 50,\n    nullable: true,\n  })\n  dni?: string;\n\n  @ApiProperty({\n    description: 'Driver Has Been Banned',\n    type: Boolean,\n    required: false,\n  })\n  @Column({\n    type: 'boolean',\n    default: false,\n    name: 'is_banned',\n  })\n  isBanned?: boolean;\n\n  @OneToMany(() => Car, car => car.driver, { nullable: true, eager: true })\n  cars: Car[];\n\n  @OneToMany(() => Trip, trip => trip.driver, { nullable: true, eager: true })\n  trips: Trip[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DriverService.html":{"url":"injectables/DriverService.html","title":"injectable - DriverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DriverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/driver.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFirstDriver\n                            \n                            \n                                    Async\n                                getOneByIdOrFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(driverRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/driver.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        driverRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFirstDriver\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstDriver()\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/driver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOneByIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneByIdOrFail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/driver.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Driver } from '../../../database/entities';\n\n@Injectable()\nexport class DriverService {\n  constructor(\n    @InjectRepository(Driver)\n    private readonly driverRepository: Repository,\n  ) {}\n\n  async getFirstDriver(): Promise {\n    const drivers = await this.driverRepository.find();\n\n    if (!drivers.length) {\n      throw new NotFoundException('There are no drivers available, please try creating new ones!');\n    }\n\n    return drivers[0];\n  }\n\n  async getOneByIdOrFail(id: string): Promise {\n    const driver = await this.driverRepository.findOne({\n      where: {\n        id,\n      },\n    });\n\n    if (!driver) {\n      throw new NotFoundException('The driver you are looking for does not exists!');\n    }\n\n    return driver;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DropPaymentMethodTableAndRelations1678294718551.html":{"url":"classes/DropPaymentMethodTableAndRelations1678294718551.html","title":"class - DropPaymentMethodTableAndRelations1678294718551","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropPaymentMethodTableAndRelations1678294718551\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DropPaymentMethodTableAndRelations1678294718551'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class DropPaymentMethodTableAndRelations1678294718551 implements MigrationInterface {\n  name = 'DropPaymentMethodTableAndRelations1678294718551';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP CONSTRAINT \"FK_12fd861c33c885f01b9a7da7d93\"`);\n    await queryRunner.query(`ALTER TABLE \"payments\" DROP COLUMN \"payment_method_id\"`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"dropoff_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"requests\" ALTER COLUMN \"pickup_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"trips\" ALTER COLUMN \"final_location\" TYPE geometry(GEOMETRY,0)`);\n    await queryRunner.query(`ALTER TABLE \"payments\" ADD \"payment_method_id\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"payments\" ADD CONSTRAINT \"FK_12fd861c33c885f01b9a7da7d93\" FOREIGN KEY (\"payment_method_id\") REFERENCES \"payment_methods\"(\"id\") ON DELETE CASCADE ON UPDATE NO ACTION`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DurationToMinutes.html":{"url":"interfaces/DurationToMinutes.html","title":"interface - DurationToMinutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DurationToMinutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/commons/interfaces/trip-helper.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            duration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DistanceToKilometers {\n  distance: number;\n}\n\nexport interface DurationToMinutes {\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FinishRideDto.html":{"url":"classes/FinishRideDto.html","title":"class - FinishRideDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FinishRideDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/dto/finish-ride.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                finalLocation\n                            \n                            \n                                    Readonly\n                                    Optional\n                                riderRating\n                            \n                            \n                                    Readonly\n                                    Optional\n                                tip\n                            \n                            \n                                    Readonly\n                                tripId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        finalLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Pickup Location', required: true})@ValidateNested()@Type(undefined)@IsDefined()@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/finish-ride.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        riderRating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Rating', type: 'number', example: '5', required: false})@IsNumber({}, {message: 'Rider Rating should be a number'})@IsOptional()@Min(0, {message: 'Rider Rating should be greater than or equal to 0'})@Max(10, {message: 'Rider Rating should be less than or equal to 10'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/finish-ride.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        tip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tip', type: 'number', example: '5', required: false})@IsNumber({}, {message: 'Tip should be a number'})@IsOptional()@Min(0, {message: 'Tip should be greater than or equal to 0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/finish-ride.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tripId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip ID', example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F', type: 'string', required: true})@IsUUID('4', {message: 'Trip ID must be a valid UUID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/finish-ride.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmptyObject, IsNumber, IsOptional, IsUUID, Max, Min, ValidateNested } from 'class-validator';\nimport { LocationDto } from './request-ride.dto';\nimport { Type } from 'class-transformer';\n\nexport class FinishRideDto {\n  @ApiProperty({\n    description: 'Trip ID',\n    example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F',\n    type: 'string',\n    required: true,\n  })\n  @IsUUID('4', { message: 'Trip ID must be a valid UUID' })\n  readonly tripId: string;\n\n  @ApiProperty({\n    description: 'Rider Pickup Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly finalLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider Rating',\n    type: 'number',\n    example: '5',\n    required: false,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Rider Rating should be a number',\n    },\n  )\n  @IsOptional()\n  @Min(0, {\n    message: 'Rider Rating should be greater than or equal to 0',\n  })\n  @Max(10, {\n    message: 'Rider Rating should be less than or equal to 10',\n  })\n  readonly riderRating?: number;\n\n  @ApiProperty({\n    description: 'Tip',\n    type: 'number',\n    example: '5',\n    required: false,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Tip should be a number',\n    },\n  )\n  @IsOptional()\n  @Min(0, {\n    message: 'Tip should be greater than or equal to 0',\n  })\n  readonly tip?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeneratePaymentReference.html":{"url":"interfaces/GeneratePaymentReference.html","title":"interface - GeneratePaymentReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GeneratePaymentReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/interfaces/generate-payment-reference.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fare\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            persist\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transactionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fare\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fare:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        persist:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GeneratePaymentReference {\n  fare: number;\n  id?: string;\n  persist?: boolean;\n  tip?: number;\n  transactionId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenerateTransaction.html":{"url":"interfaces/GenerateTransaction.html","title":"interface - GenerateTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GenerateTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/interfaces/generate-transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amountInCents\n                                        \n                                \n                                \n                                        \n                                            customerEmail\n                                        \n                                \n                                \n                                        \n                                            paymentMethod\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            redirectUrl\n                                        \n                                \n                                \n                                        \n                                            reference\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amountInCents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amountInCents:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customerEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customerEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymentMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymentMethod:         PaymentMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface PaymentMethod {\n  type: 'CARD' | 'NEQUI';\n  installments: number;\n  token: string;\n}\n\nexport interface GenerateTransaction {\n  amountInCents: number;\n  customerEmail: string;\n  paymentMethod: PaymentMethod;\n  redirectUrl?: string;\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetDirection.html":{"url":"interfaces/GetDirection.html","title":"interface - GetDirection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetDirection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/interfaces/map-box.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            distance\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetDirection {\n  distance: number;\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/controllers/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/controllers/health.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\nimport { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, TypeOrmHealthIndicator, HealthCheck } from '@nestjs/terminus';\n\n@ApiTags('health')\n@Controller('health')\nexport class HealthController {\n  constructor(private health: HealthCheckService, private db: TypeOrmHealthIndicator) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\n\nimport { HealthController } from './controllers';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Http.html":{"url":"interfaces/Http.html","title":"interface - Http","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Http\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/http.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            maxRedirects\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxRedirects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRedirects:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Http {\n  timeout: number;\n  maxRedirects: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Location.html":{"url":"entities/Location.html","title":"entity - Location","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/location.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                finalLocation\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                requestDropOffLocation\n                            \n                            \n                                requestPickUpLocation\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        finalLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, trip => trip.finalLocation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location Latitude'})@Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location Longitude'})@Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestDropOffLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, request => request.dropOffLocation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestPickUpLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, request => request.pickUpLocation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location Zip Code'})@Column({length: 150, name: 'zip_code', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/location.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, OneToOne } from 'typeorm';\n\nimport { Base } from './base.entity';\nimport { Trip } from './trip.entity';\nimport { Request } from '../../api/request/entities';\n\n@Entity()\nexport class Location extends Base {\n  @ApiProperty({\n    description: 'Location Latitude',\n  })\n  @Column({\n    type: 'varchar',\n  })\n  latitude: string;\n\n  @ApiProperty({\n    description: 'Location Longitude',\n  })\n  @Column({\n    type: 'varchar',\n  })\n  longitude: string;\n\n  @ApiProperty({\n    description: 'Location Zip Code',\n  })\n  @Column({\n    length: 150,\n    name: 'zip_code',\n    nullable: true,\n    type: 'varchar',\n  })\n  zipCode?: string;\n\n  @OneToOne(() => Request, request => request.pickUpLocation)\n  requestPickUpLocation: Request;\n\n  @OneToOne(() => Request, request => request.dropOffLocation)\n  requestDropOffLocation: Request;\n\n  @OneToOne(() => Trip, trip => trip.finalLocation)\n  finalLocation: Trip;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocationDto.html":{"url":"classes/LocationDto.html","title":"class - LocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/dto/request-ride.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                latitude\n                            \n                            \n                                    Readonly\n                                longitude\n                            \n                            \n                                    Readonly\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Latitude', type: 'number', example: '23.6573', required: true})@IsNumber({}, {message: 'Latitude should be a number'})@IsNotEmpty({message: 'Latitude is required'})@Min(undefined, {message: 'Latitude should be greater than or equal to -90'})@Max(90, {message: 'Latitude should be less than or equal to 90'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Longitude', type: 'number', example: '77.6573', required: true})@IsNumber({}, {message: 'Longitude should be a number'})@IsNotEmpty({message: 'Longitude is required'})@Min(undefined, {message: 'Longitude should be greater than or equal to -180'})@Max(180, {message: 'Longitude should be less than or equal to 180'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location Zip Code', example: '401821', type: 'string', required: false})@IsOptional()@Length(2, 6, {message: 'Zip Code should be less than or equal to 6'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmpty, IsNotEmptyObject, IsNumber, IsUUID, Max, Min, ValidateNested, IsOptional, Length } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class LocationDto {\n  @ApiProperty({\n    description: 'Latitude',\n    type: 'number',\n    example: '23.6573',\n    required: true,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Latitude should be a number',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Latitude is required',\n  })\n  @Min(-90, {\n    message: 'Latitude should be greater than or equal to -90',\n  })\n  @Max(90, {\n    message: 'Latitude should be less than or equal to 90',\n  })\n  readonly latitude: number;\n\n  @ApiProperty({\n    description: 'Longitude',\n    type: 'number',\n    example: '77.6573',\n    required: true,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Longitude should be a number',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Longitude is required',\n  })\n  @Min(-180, {\n    message: 'Longitude should be greater than or equal to -180',\n  })\n  @Max(180, {\n    message: 'Longitude should be less than or equal to 180',\n  })\n  readonly longitude: number;\n\n  @ApiProperty({\n    description: 'Location Zip Code',\n    example: '401821',\n    type: 'string',\n    required: false,\n  })\n  @IsOptional()\n  @Length(2, 6, {\n    message: 'Zip Code should be less than or equal to 6',\n  })\n  readonly zipCode: string;\n}\n\nexport class RequestRideDto {\n  @ApiProperty({\n    description: 'Rider Pickup Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly pickupLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider Dropoff Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly dropoffLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider ID',\n    example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F',\n    type: 'string',\n    required: true,\n  })\n  @IsUUID('4', { message: 'Rider ID must be a valid UUID' })\n  readonly riderId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapBox.html":{"url":"classes/MapBox.html","title":"class - MapBox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapBox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/map-box.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                getDirection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getDirection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDirection(pickupLocation: string, dropoffLocation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/libs/map-box.lib.ts:16\n                \n            \n\n\n            \n                \n                    Return the distance and duration between two points\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pickupLocation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Latitude and Longitude separated by comma\n\n                                    \n                                \n                                \n                                    dropoffLocation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Latitude and Longitude separated by comma\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        {Promise}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { HttpStatusCode } from 'axios';\n\nimport { distanceToKilometers, durationToMinutes } from '../commons';\nimport { GetDirection } from './interfaces';\n\nexport class MapBox {\n  /**\n   * Return the distance and duration between two points\n   *\n   * @static\n   * @param {string} pickupLocation Latitude and Longitude separated by comma\n   * @param {string} dropoffLocation Latitude and Longitude separated by comma\n   * @return {*}  {Promise}\n   * @memberof MapBox\n   */\n  static async getDirection(pickupLocation: string, dropoffLocation: string): Promise {\n    try {\n      const axiosInstance = axios.create({\n        baseURL: process.env.MAP_BOX_BASE_URL,\n        params: {\n          access_token: process.env.MAP_BOX_ACCESS_TOKEN,\n        },\n      });\n\n      const response = await axiosInstance.get(`${pickupLocation};${dropoffLocation}`);\n      const { distance = 0, duration = 0 } = response?.data?.routes?.[0] ?? {};\n\n      return { distance: distanceToKilometers(Number(distance)), duration: durationToMinutes(Number(duration)) };\n    } catch (error) {\n      throw HttpStatusCode.Unauthorized;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Payment.html":{"url":"entities/Payment.html","title":"entity - Payment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/payment.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fare\n                            \n                            \n                                    Optional\n                                paymentMethodType\n                            \n                            \n                                status\n                            \n                            \n                                    Optional\n                                tip\n                            \n                            \n                                transactionId\n                            \n                            \n                                trip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fare\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Fare'})@Column({type: 'numeric', precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        paymentMethodType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Payment Method Type', required: false, example: undefined, enum: PaymentMethod})@Column({type: 'enum', name: 'payment_method_type', enum: PaymentMethod, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Status', enum: PaymentStatus, example: undefined})@Column({type: 'enum', enum: PaymentStatus})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Tip', required: false})@Column({type: 'numeric', precision: 10, scale: 2, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The external id generated by the transaction gateway', required: true})@Column({name: 'transaction_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, trip => trip.payment)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/payment.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, OneToOne } from 'typeorm';\n\n// Entities\nimport { Base } from './base.entity';\nimport { Trip } from './trip.entity';\n\n// Enums\nimport { PaymentMethod, PaymentStatus } from './../../api/commons';\n\n@Entity('payments')\nexport class Payment extends Base {\n  @OneToOne(() => Trip, trip => trip.payment)\n  trip: Trip;\n\n  @ApiProperty({\n    description: 'Trip Fare',\n  })\n  @Column({\n    type: 'numeric',\n    precision: 10,\n    scale: 2,\n  })\n  fare: number;\n\n  @ApiProperty({\n    description: 'Trip Tip',\n    required: false,\n  })\n  @Column({\n    type: 'numeric',\n    precision: 10,\n    scale: 2,\n    nullable: true,\n  })\n  tip?: number;\n\n  @ApiProperty({\n    description: 'Trip Status',\n    enum: PaymentStatus,\n    example: Object.values(PaymentStatus),\n  })\n  @Column({\n    type: 'enum',\n    enum: PaymentStatus,\n  })\n  status: PaymentStatus;\n\n  @ApiProperty({\n    description: 'Payment Method Type',\n    required: false,\n    example: Object.values(PaymentMethod),\n    enum: PaymentMethod,\n  })\n  @Column({\n    type: 'enum',\n    name: 'payment_method_type',\n    enum: PaymentMethod,\n    nullable: true,\n  })\n  paymentMethodType?: PaymentMethod;\n\n  @ApiProperty({\n    description: 'The external id generated by the transaction gateway',\n    required: true,\n  })\n  @Column({\n    name: 'transaction_id',\n  })\n  transactionId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentGateway.html":{"url":"classes/PaymentGateway.html","title":"class - PaymentGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/payment-gateway.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                axios\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewTransaction\n                            \n                            \n                                    Async\n                                generateAcceptanceToken\n                            \n                            \n                                    Async\n                                tokenizeCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/api/libs/payment-gateway.lib.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        axios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxiosInstance\n\n                    \n                \n                    \n                        \n                                Defined in src/api/libs/payment-gateway.lib.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PaymentGateway.name)\n                    \n                \n                    \n                        \n                                Defined in src/api/libs/payment-gateway.lib.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createNewTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewTransaction(payload: GenerateTransaction)\n                \n            \n\n\n            \n                \n                    Defined in src/api/libs/payment-gateway.lib.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                GenerateTransaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateAcceptanceToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateAcceptanceToken()\n                \n            \n\n\n            \n                \n                    Defined in src/api/libs/payment-gateway.lib.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        tokenizeCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    tokenizeCard()\n                \n            \n\n\n            \n                \n                    Defined in src/api/libs/payment-gateway.lib.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosInstance } from 'axios';\n\nimport { GenerateTransaction } from './interfaces';\nimport { InternalServerErrorException, Logger } from '@nestjs/common';\n\nenum GatewayEndpoints {\n  CARDS = 'tokens/cards',\n  MERCHANTS = 'merchants',\n  TRANSACTIONS = 'transactions',\n}\n\nexport class PaymentGateway {\n  private logger = new Logger(PaymentGateway.name);\n  private axios: AxiosInstance;\n\n  constructor() {\n    this.axios = axios.create({\n      baseURL: process.env.GATEWAY_BASE_URL,\n      headers: {\n        Authorization: `Bearer ${process.env.GATEWAY_PUBLIC_KEY}`,\n        'Content-Type': 'application/json',\n      },\n    });\n  }\n\n  async generateAcceptanceToken(): Promise {\n    try {\n      const response = await this.axios.get(`${GatewayEndpoints.MERCHANTS}/${process.env.GATEWAY_PUBLIC_KEY}`);\n\n      return response?.data?.data?.presigned_acceptance?.acceptance_token ?? 'no_token';\n    } catch (error) {\n      this.logger.error(`Something went wrong generation the acceptance token. Details: ${error?.response?.data?.message ?? error}`);\n\n      throw new InternalServerErrorException('Something went wrong generating the acceptance token for the merchant');\n    }\n  }\n\n  async tokenizeCard(): Promise {\n    try {\n      const response = await this.axios.post(GatewayEndpoints.CARDS, {\n        number: process.env.TOKENIZE_CARD_NUMBER,\n        cvc: process.env.TOKENIZE_CARD_CVC,\n        exp_month: process.env.TOKENIZE_CARD_EXP_MONTH,\n        exp_year: process.env.TOKENIZE_CARD_EXP_YEAR,\n        card_holder: process.env.TOKENIZE_CARD_HOLDER,\n      });\n\n      return response?.data?.data?.id ?? 'cannot_create_token';\n    } catch (error) {\n      this.logger.error(`Something went wrong tokenizing the card. Details: ${error?.response?.data?.message ?? error}`);\n\n      throw new InternalServerErrorException('Something went wrong tokenizing the card');\n    }\n  }\n\n  async createNewTransaction(payload: GenerateTransaction): Promise {\n    try {\n      const acceptanceToken = await this.generateAcceptanceToken();\n      const response = await this.axios.post(GatewayEndpoints.TRANSACTIONS, {\n        acceptance_token: acceptanceToken,\n        amount_in_cents: payload.amountInCents * 100,\n        currency: 'COP',\n        customer_email: payload.customerEmail,\n        reference: payload.reference,\n        payment_method: payload.paymentMethod,\n      });\n\n      return response?.data?.data?.id ?? 'invalid_transaction_id';\n    } catch (error) {\n      this.logger.error(`Something went wrong tokenizing the card. Details: ${error?.response?.data?.message ?? error}`);\n\n      throw new InternalServerErrorException('Something went wrong creating your payment, please try again!');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaymentMethod.html":{"url":"interfaces/PaymentMethod.html","title":"interface - PaymentMethod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaymentMethod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/interfaces/generate-transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            installments\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        installments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        installments:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"CARD\" | \"NEQUI\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"CARD\" | \"NEQUI\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface PaymentMethod {\n  type: 'CARD' | 'NEQUI';\n  installments: number;\n  token: string;\n}\n\nexport interface GenerateTransaction {\n  amountInCents: number;\n  customerEmail: string;\n  paymentMethod: PaymentMethod;\n  redirectUrl?: string;\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generatePayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/payment.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generatePayment\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePayment(payload: GeneratePaymentReference)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/payment.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                GeneratePaymentReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Payment } from '../../../database/entities';\nimport { PaymentMethod, PaymentStatus } from './../../commons/enums';\nimport { generateUuid } from './../../commons/helpers';\nimport { GeneratePaymentReference } from './../interfaces';\n\n@Injectable()\nexport class PaymentService {\n  constructor(\n    @InjectRepository(Payment)\n    private readonly paymentRepository: Repository,\n  ) {}\n\n  async generatePayment(payload: GeneratePaymentReference): Promise {\n    const payment = new Payment();\n    const { fare, id = generateUuid(), tip = 0, persist = false, transactionId = id } = payload;\n\n    payment.id = id;\n    payment.fare = fare;\n    payment.tip = tip;\n    payment.status = PaymentStatus.PENDING;\n    payment.paymentMethodType = PaymentMethod.CREDIT_CARD;\n    payment.transactionId = transactionId;\n\n    if (persist) {\n      await this.paymentRepository.save(payment);\n    }\n\n    return payment;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RateLimiting.html":{"url":"interfaces/RateLimiting.html","title":"interface - RateLimiting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RateLimiting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/rate-limiting.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            limit\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RateLimiting {\n  ttl: number;\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenameNameColumnInRidersTable1678186681233.html":{"url":"classes/RenameNameColumnInRidersTable1678186681233.html","title":"class - RenameNameColumnInRidersTable1678186681233","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenameNameColumnInRidersTable1678186681233\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RenameNameColumnInRidersTable1678186681233'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RenameNameColumnInRidersTable1678186681233 implements MigrationInterface {\n  name = 'RenameNameColumnInRidersTable1678186681233';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"riders\" RENAME COLUMN \"name\" TO \"first_name\"`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"riders\" RENAME COLUMN \"first_name\" TO \"name\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Request.html":{"url":"entities/Request.html","title":"entity - Request","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/entities/request.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dropOffLocation\n                            \n                            \n                                estimatedFare\n                            \n                            \n                                pickUpLocation\n                            \n                            \n                                rider\n                            \n                            \n                                status\n                            \n                            \n                                trip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dropOffLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pickup location'})@Column('geometry', {name: 'dropoff_location'})@Transform( => value.coordinates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        estimatedFare\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Request Estimated Fare', type: Number})@Column({type: 'numeric', name: 'estimated_fare', precision: 10, scale: 2})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickUpLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pickup location'})@Column('geometry', {name: 'pickup_location'})@Transform( => value.coordinates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Details', type: Rider})@ManyToOne(undefined, rider => rider.requests, {onDelete: 'CASCADE', eager: true})@JoinColumn({name: 'rider_id'})@Transform( => value.fullName)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RequestStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Request Status', enum: RequestStatus, example: undefined})@Column({type: 'enum', enum: RequestStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Details', type: Trip})@OneToOne(undefined, trip => trip.request)@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/entities/request.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, ManyToOne, OneToOne, JoinColumn, Point } from 'typeorm';\nimport { Transform } from 'class-transformer';\n\n// Entities\nimport { Base, Rider, Trip } from '../../../database/entities';\n\n// Enums\nimport { RequestStatus, transformFareToCurrency } from './../../commons';\n\n@Entity('requests')\nexport class Request extends Base {\n  @ApiProperty({\n    description: 'Pickup location',\n  })\n  @Column('geometry', {\n    name: 'pickup_location',\n  })\n  @Transform(({ value }) => value.coordinates)\n  pickUpLocation: Point;\n\n  @ApiProperty({\n    description: 'Pickup location',\n  })\n  @Column('geometry', {\n    name: 'dropoff_location',\n  })\n  @Transform(({ value }) => value.coordinates)\n  dropOffLocation: Point;\n\n  @ApiProperty({\n    description: 'Trip Details',\n    type: Trip,\n  })\n  @OneToOne(() => Trip, trip => trip.request)\n  @Transform(({ value }) => ({\n    startTime: value?.startTime,\n    endTime: value?.startTime,\n    finalLocation: value?.finalLocation?.coordinates,\n  }))\n  trip: Trip;\n\n  @ApiProperty({\n    description: 'Rider Details',\n    type: Rider,\n  })\n  @ManyToOne(() => Rider, rider => rider.requests, { onDelete: 'CASCADE', eager: true })\n  @JoinColumn({ name: 'rider_id' })\n  @Transform(({ value }) => value.fullName)\n  rider: Rider;\n\n  @ApiProperty({\n    description: 'Request Estimated Fare',\n    type: Number,\n  })\n  @Column({\n    type: 'numeric',\n    name: 'estimated_fare',\n    precision: 10,\n    scale: 2,\n  })\n  @Transform(({ value }) => transformFareToCurrency(value))\n  estimatedFare: number;\n\n  @ApiProperty({\n    description: 'Request Status',\n    enum: RequestStatus,\n    example: Object.values(RequestStatus),\n  })\n  @Column({\n    type: 'enum',\n    enum: RequestStatus,\n    default: RequestStatus.WAITING,\n  })\n  status: RequestStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RequestController.html":{"url":"controllers/RequestController.html","title":"controller - RequestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RequestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/controllers/request.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                request\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                finishRide\n                            \n                            \n                                    Async\n                                ride\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        finishRide\n                        \n                    \n                \n            \n            \n                \n                    \n                    finishRide(payload: FinishRideDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('finish-ride')@ApiOperation({summary: 'Driver request to finish a ride'})@ApiCreatedResponse({description: 'Ride has been finished and you have a new charge.', schema: undefined})@ApiBadRequestResponse({description: 'Something went wrong with your input!', schema: undefined})@ApiNotFoundResponse({description: 'The resource you are looking for does not exists!', schema: undefined})@ApiInternalServerErrorResponse({description: 'Something went wrong with your request, please try again!', schema: undefined})@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/api/request/controllers/request.controller.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                FinishRideDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ride\n                        \n                    \n                \n            \n            \n                \n                    \n                    ride(payload: RequestRideDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('ride')@ApiOperation({summary: 'Request a ride to generate a trip'})@ApiCreatedResponse({description: 'Ride has been created successfully.', schema: undefined})@ApiBadRequestResponse({description: 'Something went wrong with your input!', schema: undefined})@ApiNotFoundResponse({description: 'The resource you are looking for does not exists!', schema: undefined})@ApiInternalServerErrorResponse({description: 'Something went wrong with your request, please try again!', schema: undefined})@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/api/request/controllers/request.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RequestRideDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Post, UseInterceptors } from '@nestjs/common';\nimport { ApiOperation, ApiCreatedResponse, ApiTags, ApiBadRequestResponse, ApiNotFoundResponse, ApiInternalServerErrorResponse } from '@nestjs/swagger';\n\nimport { Request } from '../entities';\nimport { FinishRideDto, RequestRideDto } from '../dto';\nimport { RequestService } from './../services';\nimport { RequestStatus } from './../../commons/enums';\nimport { Trip } from './../../../database/entities/trip.entity';\n\n@ApiTags('request')\n@Controller('request')\nexport class RequestController {\n  constructor(private readonly requestService: RequestService) {}\n\n  @Post('ride')\n  @ApiOperation({\n    summary: 'Request a ride to generate a trip',\n  })\n  @ApiCreatedResponse({\n    description: 'Ride has been created successfully.',\n    schema: {\n      example: {\n        pickUpLocation: [-75.604705, 6.158212],\n        dropOffLocation: [-75.590211, 6.2567865],\n        rider: 'John Doe',\n        estimatedFare: '$ 23.540,00',\n        updateAt: '2023-03-08T19:35:32.441Z',\n        deletedAt: null,\n        id: 'fdef43a2-aea4-4d05-b584-31a46e86ee63',\n        createdAt: '2023-03-08T19:35:32.441Z',\n        status: RequestStatus,\n      },\n    },\n  })\n  @ApiBadRequestResponse({\n    description: 'Something went wrong with your input!',\n    schema: {\n      example: {\n        statusCode: 400,\n        message: ['The specific validation message'],\n        error: 'Bad Request',\n      },\n    },\n  })\n  @ApiNotFoundResponse({\n    description: 'The resource you are looking for does not exists!',\n    schema: {\n      example: {\n        statusCode: 404,\n        message: 'The entity you are looking for does not exists!',\n        error: 'Not Found',\n      },\n    },\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong with your request, please try again!',\n    schema: {\n      example: {\n        statusCode: 500,\n        message: 'Something went wrong with your request, please try again!',\n        error: 'Server error',\n      },\n    },\n  })\n  @UseInterceptors(ClassSerializerInterceptor)\n  async ride(@Body() payload: RequestRideDto): Promise {\n    const newRide = await this.requestService.startRide(payload);\n\n    return newRide;\n  }\n\n  @Post('finish-ride')\n  @ApiOperation({\n    summary: 'Driver request to finish a ride',\n  })\n  @ApiCreatedResponse({\n    description: 'Ride has been finished and you have a new charge.',\n    schema: {\n      example: {\n        pickUpLocation: [-75.604705, 6.158212],\n        dropOffLocation: [-75.590211, 6.2567865],\n        rider: 'John Doe',\n        estimatedFare: '$ 23.540,00',\n        updateAt: '2023-03-08T19:35:32.441Z',\n        deletedAt: null,\n        id: 'fdef43a2-aea4-4d05-b584-31a46e86ee63',\n        createdAt: '2023-03-08T19:35:32.441Z',\n        status: RequestStatus,\n      },\n    },\n  })\n  @ApiBadRequestResponse({\n    description: 'Something went wrong with your input!',\n    schema: {\n      example: {\n        statusCode: 400,\n        message: ['The specific validation message'],\n        error: 'Bad Request',\n      },\n    },\n  })\n  @ApiNotFoundResponse({\n    description: 'The resource you are looking for does not exists!',\n    schema: {\n      example: {\n        statusCode: 404,\n        message: 'The entity you are looking for does not exists!',\n        error: 'Not Found',\n      },\n    },\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong with your request, please try again!',\n    schema: {\n      example: {\n        statusCode: 500,\n        message: 'Something went wrong with your request, please try again!',\n        error: 'Server error',\n      },\n    },\n  })\n  @UseInterceptors(ClassSerializerInterceptor)\n  async finishRide(@Body() payload: FinishRideDto): Promise {\n    const finishRide = await this.requestService.finishRide(payload);\n\n    return finishRide;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RequestModule.html":{"url":"modules/RequestModule.html","title":"module - RequestModule","body":"\n                   \n\n\n\n\n    Modules\n    RequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_providers\n\n\n\n\nDriverService\n\nDriverService\n\n\n\nRequestModule\n\nRequestModule\n\nRequestModule -->\n\nDriverService->RequestModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nRequestModule -->\n\nPaymentService->RequestModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\n\n\nRiderService\n\nRiderService\n\nRequestModule -->\n\nRiderService->RequestModule\n\n\n\n\n\nTripService\n\nTripService\n\nRequestModule -->\n\nTripService->RequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/request/request.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DriverService\n                        \n                        \n                            PaymentService\n                        \n                        \n                            RequestService\n                        \n                        \n                            RiderService\n                        \n                        \n                            TripService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RequestController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Request } from './entities';\nimport { Driver, Payment, Rider, Trip } from './../../database/entities';\n\nimport { RequestController } from './controllers';\n\nimport { DriverService, PaymentService, RequestService, RiderService, TripService } from './services';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Driver, Payment, Request, Rider, Trip])],\n  controllers: [RequestController],\n  providers: [DriverService, PaymentService, RequestService, RiderService, TripService],\n})\nexport class RequestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestRideDto.html":{"url":"classes/RequestRideDto.html","title":"class - RequestRideDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestRideDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/dto/request-ride.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dropoffLocation\n                            \n                            \n                                    Readonly\n                                pickupLocation\n                            \n                            \n                                    Readonly\n                                riderId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dropoffLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Dropoff Location', required: true})@ValidateNested()@Type(undefined)@IsDefined()@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pickupLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Pickup Location', required: true})@ValidateNested()@Type(undefined)@IsDefined()@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        riderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider ID', example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F', type: 'string', required: true})@IsUUID('4', {message: 'Rider ID must be a valid UUID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/request/dto/request-ride.dto.ts:93\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNotEmpty, IsNotEmptyObject, IsNumber, IsUUID, Max, Min, ValidateNested, IsOptional, Length } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class LocationDto {\n  @ApiProperty({\n    description: 'Latitude',\n    type: 'number',\n    example: '23.6573',\n    required: true,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Latitude should be a number',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Latitude is required',\n  })\n  @Min(-90, {\n    message: 'Latitude should be greater than or equal to -90',\n  })\n  @Max(90, {\n    message: 'Latitude should be less than or equal to 90',\n  })\n  readonly latitude: number;\n\n  @ApiProperty({\n    description: 'Longitude',\n    type: 'number',\n    example: '77.6573',\n    required: true,\n  })\n  @IsNumber(\n    {},\n    {\n      message: 'Longitude should be a number',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Longitude is required',\n  })\n  @Min(-180, {\n    message: 'Longitude should be greater than or equal to -180',\n  })\n  @Max(180, {\n    message: 'Longitude should be less than or equal to 180',\n  })\n  readonly longitude: number;\n\n  @ApiProperty({\n    description: 'Location Zip Code',\n    example: '401821',\n    type: 'string',\n    required: false,\n  })\n  @IsOptional()\n  @Length(2, 6, {\n    message: 'Zip Code should be less than or equal to 6',\n  })\n  readonly zipCode: string;\n}\n\nexport class RequestRideDto {\n  @ApiProperty({\n    description: 'Rider Pickup Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly pickupLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider Dropoff Location',\n    required: true,\n  })\n  @ValidateNested()\n  @Type(() => LocationDto)\n  @IsDefined()\n  @IsNotEmptyObject()\n  readonly dropoffLocation: LocationDto;\n\n  @ApiProperty({\n    description: 'Rider ID',\n    example: 'A378F7E1-94AD-432E-9DB1-41BADDBDAE8F',\n    type: 'string',\n    required: true,\n  })\n  @IsUUID('4', { message: 'Rider ID must be a valid UUID' })\n  readonly riderId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                finishRide\n                            \n                            \n                                    Async\n                                startRide\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource, riderService: RiderService, tripService: TripService, paymentService: PaymentService)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/request.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        riderService\n                                                  \n                                                        \n                                                                        RiderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        finishRide\n                        \n                    \n                \n            \n            \n                \n                    \n                    finishRide(payload: FinishRideDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/request.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                FinishRideDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        startRide\n                        \n                    \n                \n            \n            \n                \n                    \n                    startRide(payload: RequestRideDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/request.service.ts:35\n                \n            \n\n\n            \n                \n                    Create a new ride using the given payload and a new trip that'll be related to the request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RequestRideDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        {Promise}\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(RequestService.name)\n                    \n                \n                    \n                        \n                                Defined in src/api/request/services/request.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException, Logger, NotFoundException } from '@nestjs/common';\nimport { DataSource } from 'typeorm';\n\nimport { Request } from '../entities';\nimport { FinishRideDto, RequestRideDto } from '../dto';\nimport { calculateFare } from '../../commons';\n\nimport { RiderService } from './rider.service';\nimport { TripService } from './trip.service';\nimport { PaymentService } from './payment.service';\n\nimport { RequestStatus, TripStatus } from './../../commons/enums';\nimport { Payment, Trip } from './../../../database/entities';\nimport { MapBox, PaymentGateway } from './../../libs';\nimport { generateUuid } from './../../commons/helpers';\n\n@Injectable()\nexport class RequestService {\n  private logger = new Logger(RequestService.name);\n\n  constructor(\n    private readonly dataSource: DataSource,\n    private readonly riderService: RiderService,\n    private readonly tripService: TripService,\n    private readonly paymentService: PaymentService,\n  ) {}\n\n  /**\n   * Create a new ride using the given payload and a new trip that'll be related to the request\n   *\n   * @param {RequestRideDto} payload\n   * @return {*}  {Promise}\n   * @memberof RequestService\n   */\n  async startRide(payload: RequestRideDto): Promise {\n    try {\n      const { riderId, pickupLocation, dropoffLocation } = payload;\n      const request = new Request();\n\n      request.pickUpLocation = {\n        type: 'Point',\n        coordinates: [pickupLocation.latitude, pickupLocation.longitude],\n      };\n      request.dropOffLocation = {\n        type: 'Point',\n        coordinates: [dropoffLocation.latitude, dropoffLocation.longitude],\n      };\n      const { distance, duration } = await MapBox.getDirection(\n        `${pickupLocation.longitude},${pickupLocation.latitude}`,\n        `${dropoffLocation.longitude},${dropoffLocation.latitude}`,\n      );\n      request.rider = await this.riderService.getOneByIdOrFail(riderId);\n      request.estimatedFare = calculateFare(distance, duration);\n\n      let incomingRequest: Request = new Request();\n\n      await this.dataSource.transaction(async manager => {\n        // Create the incoming request with the given payload\n        incomingRequest = await manager.save(request);\n\n        // Creating the related trip with it's driver\n        const relatedTrip = await this.tripService.generateBaseTrip(incomingRequest);\n        await manager.save(relatedTrip);\n\n        // As the request was accepted automatically we must change it's status\n        await manager.update(Request, { id: incomingRequest.id }, { status: RequestStatus.ACCEPTED });\n      });\n\n      return incomingRequest;\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw error;\n      }\n\n      this.logger.error(error);\n\n      throw new InternalServerErrorException('Something went wrong creating your request, please try again.');\n    }\n  }\n\n  async finishRide(payload: FinishRideDto): Promise {\n    try {\n      const { tripId, finalLocation, riderRating, tip } = payload;\n      const currentTrip = await this.tripService.getOneByIdOrFail(tripId);\n      const paymentGateway = new PaymentGateway();\n      const {\n        rider: { email },\n        pickUpLocation: { coordinates },\n      } = currentTrip.request;\n\n      const { distance, duration } = await MapBox.getDirection(`${coordinates[1]},${coordinates[0]}`, `${finalLocation.longitude},${finalLocation.latitude}`);\n      const tripFinalFare = calculateFare(distance, duration);\n      let ridePropertiesToUpdate: Partial = {};\n\n      await this.dataSource.transaction(async manager => {\n        const referenceId = generateUuid();\n\n        // Create the transaction in the gateway\n        const tokenizedCard = await paymentGateway.tokenizeCard();\n        const transactionId = await paymentGateway.createNewTransaction({\n          amountInCents: tripFinalFare,\n          customerEmail: email,\n          reference: referenceId,\n          paymentMethod: {\n            installments: 1,\n            token: tokenizedCard,\n            type: 'CARD',\n          },\n        });\n\n        // Save the payment created for this trip\n        const paymentReference = await manager.save(\n          await this.paymentService.generatePayment({\n            id: referenceId,\n            fare: tripFinalFare,\n            transactionId,\n          }),\n        );\n\n        // Update the existing trip entity\n        ridePropertiesToUpdate = {\n          status: TripStatus.COMPLETED,\n          finalLocation: {\n            type: 'Point',\n            coordinates: [finalLocation.latitude, finalLocation.longitude],\n          },\n          payment: paymentReference,\n          endTime: new Date(),\n          riderRating,\n        };\n        await manager.update(Trip, { id: currentTrip.id }, ridePropertiesToUpdate);\n      });\n\n      return {\n        ...currentTrip,\n        ...ridePropertiesToUpdate,\n      };\n    } catch (error) {\n      if (error instanceof NotFoundException || error instanceof InternalServerErrorException) {\n        throw error;\n      }\n\n      this.logger.error(error);\n\n      throw new InternalServerErrorException('Something went wrong creating your request, please try again.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Rider.html":{"url":"entities/Rider.html","title":"entity - Rider","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Rider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/rider.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                rating\n                            \n                            \n                                requests\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email', type: String})@Column({type: 'varchar', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First Name', type: String})@Column({type: 'varchar', length: 150, name: 'first_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last Name', type: String, required: false})@Column({type: 'varchar', length: 150, nullable: true, name: 'last_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Phone Number', type: String, required: false})@Column({length: 250, name: 'phone_number', nullable: true, type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rating', type: Number, required: false})@Column({nullable: true, type: 'smallint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, request => request.rider, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/rider.entity.ts:69\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, OneToMany } from 'typeorm';\nimport { Expose } from 'class-transformer';\n\nimport { Base } from './base.entity';\nimport { Request } from '../../api/request/entities';\n\n@Entity('riders')\nexport class Rider extends Base {\n  @ApiProperty({\n    description: 'First Name',\n    type: String,\n  })\n  @Column({\n    type: 'varchar',\n    length: 150,\n    name: 'first_name',\n  })\n  firstName: string;\n\n  @ApiProperty({\n    description: 'Last Name',\n    type: String,\n    required: false,\n  })\n  @Column({\n    type: 'varchar',\n    length: 150,\n    nullable: true,\n    name: 'last_name',\n  })\n  lastName?: string;\n\n  @ApiProperty({\n    description: 'Email',\n    type: String,\n  })\n  @Column({\n    type: 'varchar',\n    unique: true,\n  })\n  email: string;\n\n  @ApiProperty({\n    description: 'Phone Number',\n    type: String,\n    required: false,\n  })\n  @Column({\n    length: 250,\n    name: 'phone_number',\n    nullable: true,\n    type: 'varchar',\n  })\n  phoneNumber?: string;\n\n  @ApiProperty({\n    description: 'Rating',\n    type: Number,\n    required: false,\n  })\n  @Column({\n    nullable: true,\n    type: 'smallint',\n  })\n  rating?: number;\n\n  @OneToMany(() => Request, request => request.rider, { nullable: true })\n  requests: Request[];\n\n  @Expose()\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RiderService.html":{"url":"injectables/RiderService.html","title":"injectable - RiderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RiderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/rider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOneByIdOrFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(riderRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/rider.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOneByIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneByIdOrFail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/rider.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Rider } from '../../../database/entities';\n\n@Injectable()\nexport class RiderService {\n  constructor(\n    @InjectRepository(Rider)\n    private readonly riderRepository: Repository,\n  ) {}\n\n  async getOneByIdOrFail(id: string): Promise {\n    const rider = await this.riderRepository.findOne({\n      where: {\n        id,\n      },\n    });\n\n    if (!rider) {\n      throw new NotFoundException('The rider you are looking for does not exists!');\n    }\n\n    return rider;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenizeCard.html":{"url":"interfaces/TokenizeCard.html","title":"interface - TokenizeCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenizeCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/libs/interfaces/tokenize-card.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardHolder\n                                        \n                                \n                                \n                                        \n                                            cvc\n                                        \n                                \n                                \n                                        \n                                            expMonth\n                                        \n                                \n                                \n                                        \n                                            expYear\n                                        \n                                \n                                \n                                        \n                                            number\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardHolder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardHolder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cvc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cvc:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expMonth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expMonth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expYear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenizeCard {\n  number: number;\n  cvc: number;\n  expMonth: number;\n  expYear: number;\n  cardHolder: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Trip.html":{"url":"entities/Trip.html","title":"entity - Trip","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Trip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/entities/trip.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                car\n                            \n                            \n                                driver\n                            \n                            \n                                    Optional\n                                driverRating\n                            \n                            \n                                    Optional\n                                endTime\n                            \n                            \n                                    Optional\n                                finalLocation\n                            \n                            \n                                payment\n                            \n                            \n                                request\n                            \n                            \n                                    Optional\n                                riderRating\n                            \n                            \n                                startTime\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        car\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Car\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Car Used to Complete the Trip', type: () => Car})@ManyToOne(undefined, car => car.trips)@JoinColumn({name: 'car_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        driver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Driver\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Driver', type: () => Driver})@ManyToOne(undefined, driver => driver.trips)@JoinColumn({name: 'driver_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        driverRating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Rating per Trip', required: false, type: Number})@Column({nullable: true, type: 'smallint', name: 'driver_rating'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Ended At', type: Date, required: false})@Column({type: 'timestamptz', name: 'end_time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        finalLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Final Location', required: false})@Column('geometry', {name: 'final_location', nullable: true})@Transform( => value.coordinates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Payment', type: () => Payment})@OneToOne(undefined, payment => payment.trip, {eager: true, onDelete: 'CASCADE'})@JoinColumn({name: 'payment_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, request => request.trip, {eager: true, onDelete: 'CASCADE'})@JoinColumn({name: 'request_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        riderRating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Rider Rating per Trip', required: false, type: Number})@Column({nullable: true, type: 'smallint', name: 'rider_rating'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Started At', type: Date})@Column({type: 'timestamptz', name: 'start_time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TripStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Trip Status', enum: TripStatus, example: undefined})@Column({type: 'enum', enum: TripStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/entities/trip.entity.ts:110\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, ManyToOne, OneToOne, JoinColumn, Point } from 'typeorm';\nimport { Transform } from 'class-transformer';\n\n// Entities\nimport { Base } from './base.entity';\nimport { Car } from './car.entity';\nimport { Driver } from './driver.entity';\nimport { Payment } from './payment.entity';\nimport { Request } from '../../api/request/entities';\n\n// Enums\nimport { TripStatus } from './../../api/commons';\n\n@Entity('trips')\nexport class Trip extends Base {\n  @OneToOne(() => Request, request => request.trip, { eager: true, onDelete: 'CASCADE' })\n  @JoinColumn({\n    name: 'request_id',\n  })\n  request: Request;\n\n  @ApiProperty({\n    description: 'Trip Started At',\n    type: Date,\n  })\n  @Column({\n    type: 'timestamptz',\n    name: 'start_time',\n  })\n  startTime: Date;\n\n  @ApiProperty({\n    description: 'Trip Ended At',\n    type: Date,\n    required: false,\n  })\n  @Column({\n    type: 'timestamptz',\n    name: 'end_time',\n    nullable: true,\n  })\n  endTime?: Date;\n\n  @ApiProperty({\n    description: 'Trip Final Location',\n    required: false,\n  })\n  @Column('geometry', {\n    name: 'final_location',\n    nullable: true,\n  })\n  @Transform(({ value }) => value.coordinates)\n  finalLocation?: Point;\n\n  @ApiProperty({\n    description: 'Trip Driver',\n    type: () => Driver,\n  })\n  @ManyToOne(() => Driver, driver => driver.trips)\n  @JoinColumn({\n    name: 'driver_id',\n  })\n  driver: Driver;\n\n  @ApiProperty({\n    description: 'Car Used to Complete the Trip',\n    type: () => Car,\n  })\n  @ManyToOne(() => Car, car => car.trips)\n  @JoinColumn({\n    name: 'car_id',\n  })\n  car: Car;\n\n  @ApiProperty({\n    description: 'Rider Rating per Trip',\n    required: false,\n    type: Number,\n  })\n  @Column({\n    nullable: true,\n    type: 'smallint',\n    name: 'rider_rating',\n  })\n  riderRating?: number;\n\n  @ApiProperty({\n    description: 'Rider Rating per Trip',\n    required: false,\n    type: Number,\n  })\n  @Column({\n    nullable: true,\n    type: 'smallint',\n    name: 'driver_rating',\n  })\n  driverRating?: number;\n\n  @ApiProperty({\n    description: 'Trip Status',\n    enum: TripStatus,\n    example: Object.keys(TripStatus),\n  })\n  @Column({\n    type: 'enum',\n    enum: TripStatus,\n    default: TripStatus.IN_PROGRESS,\n  })\n  status: TripStatus;\n\n  @ApiProperty({\n    description: 'Trip Payment',\n    type: () => Payment,\n  })\n  @OneToOne(() => Payment, payment => payment.trip, { eager: true, onDelete: 'CASCADE' })\n  @JoinColumn({\n    name: 'payment_id',\n  })\n  payment: Payment;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TripService.html":{"url":"injectables/TripService.html","title":"injectable - TripService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TripService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/request/services/trip.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateBaseTrip\n                            \n                            \n                                    Async\n                                getOneByIdOrFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tripRepository: Repository, driverService: DriverService)\n                    \n                \n                        \n                            \n                                Defined in src/api/request/services/trip.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tripRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        driverService\n                                                  \n                                                        \n                                                                        DriverService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateBaseTrip\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateBaseTrip(incomingRequest: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/trip.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    incomingRequest\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOneByIdOrFail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneByIdOrFail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/request/services/trip.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Trip } from '../../../database/entities';\nimport { DriverService } from './driver.service';\nimport { Request } from '../entities';\n\n@Injectable()\nexport class TripService {\n  constructor(\n    @InjectRepository(Trip)\n    private readonly tripRepository: Repository,\n    private readonly driverService: DriverService,\n  ) {}\n\n  async generateBaseTrip(incomingRequest: Request): Promise {\n    const trip = new Trip();\n    const driver = await this.driverService.getFirstDriver();\n\n    trip.driver = driver;\n    trip.car = driver.cars?.[0] ?? null;\n    trip.request = incomingRequest;\n    trip.startTime = new Date();\n\n    return trip;\n  }\n\n  async getOneByIdOrFail(id: string): Promise {\n    const trip = await this.tripRepository.findOne({\n      where: {\n        id,\n      },\n      relations: ['request', 'request.trip'],\n      // relations: {\n      //   request: {\n      //     rider: true,\n      //   },\n      // },\n    });\n\n    if (!trip) {\n      throw new NotFoundException('The trip you are looking for does not exists!');\n    }\n\n    return trip;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/commons/helpers/generate-uuid.helper.ts\n            \n            variable\n            generateUuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/helpers/trip.helper.ts\n            \n            variable\n            calculateFare\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/helpers/trip.helper.ts\n            \n            variable\n            distanceToKilometers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/helpers/trip.helper.ts\n            \n            variable\n            durationToMinutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/helpers/trip.helper.ts\n            \n            variable\n            transformFareToCurrency\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/commons/interfaces/trip-helper.interface.ts\n            \n            interface\n            DistanceToKilometers\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/commons/interfaces/trip-helper.interface.ts\n            \n            interface\n            DurationToMinutes\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/libs/interfaces/generate-transaction.interface.ts\n            \n            interface\n            GenerateTransaction\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/libs/interfaces/generate-transaction.interface.ts\n            \n            interface\n            PaymentMethod\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/libs/interfaces/map-box.interface.ts\n            \n            interface\n            GetDirection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/libs/interfaces/tokenize-card.interface.ts\n            \n            interface\n            TokenizeCard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/libs/map-box.lib.ts\n            \n            class\n            MapBox\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/api/libs/payment-gateway.lib.ts\n            \n            class\n            PaymentGateway\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/request/controllers/request.controller.ts\n            \n            controller\n            RequestController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/request/dto/finish-ride.dto.ts\n            \n            class\n            FinishRideDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/request/dto/request-ride.dto.ts\n            \n            class\n            LocationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/request/dto/request-ride.dto.ts\n            \n            class\n            RequestRideDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/request/entities/request.entity.ts\n            \n            entity\n            Request\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/request/interfaces/generate-payment-reference.interface.ts\n            \n            interface\n            GeneratePaymentReference\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/request/services/driver.service.ts\n            \n            injectable\n            DriverService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/request/services/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/request/services/request.service.ts\n            \n            injectable\n            RequestService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/api/request/services/rider.service.ts\n            \n            injectable\n            RiderService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/request/services/trip.service.ts\n            \n            injectable\n            TripService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/interfaces/app-config.interface.ts\n            \n            interface\n            AppConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/interfaces/database-config.interface.ts\n            \n            interface\n            DatabaseConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/config/interfaces/http.interface.ts\n            \n            interface\n            Http\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/interfaces/rate-limiting.interface.ts\n            \n            interface\n            RateLimiting\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/config/typeOrm.config.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/config/typeOrm.config.ts\n            \n            variable\n            CONNECTION_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/base.entity.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/entities/car.entity.ts\n            \n            entity\n            Car\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/driver.entity.ts\n            \n            entity\n            Driver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/location.entity.ts\n            \n            entity\n            Location\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/payment.entity.ts\n            \n            entity\n            Payment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/rider.entity.ts\n            \n            entity\n            Rider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/entities/trip.entity.ts\n            \n            entity\n            Trip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1678182352019-CreateRidersTable.ts\n            \n            class\n            CreateRidersTable1678182352019\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678182431069-CreateLocationsTable.ts\n            \n            class\n            CreateLocationsTable1678182431069\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678185095471-CreatePaymentMethodsTable.ts\n            \n            class\n            CreatePaymentMethodsTable1678185095471\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678185298028-AddRelationBetweenRidersAndPaymentMethods.ts\n            \n            class\n            AddRelationBetweenRidersAndPaymentMethods1678185298028\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678186681233-RenameNameColumnInRidersTable.ts\n            \n            class\n            RenameNameColumnInRidersTable1678186681233\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678187115666-CreateDriversTable.ts\n            \n            class\n            CreateDriversTable1678187115666\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678187456870-CreateCarsTable.ts\n            \n            class\n            CreateCarsTable1678187456870\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678187764454-AddRelationBetweenDriversAndCars.ts\n            \n            class\n            AddRelationBetweenDriversAndCars1678187764454\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678216032691-CreateRequestsTable.ts\n            \n            class\n            CreateRequestsTable1678216032691\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678218041445-CreateTripsTable.ts\n            \n            class\n            CreateTripsTable1678218041445\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678221796470-AlterTripsTableToHandlePayments.ts\n            \n            class\n            AlterTripsTableToHandlePayments1678221796470\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678223295357-AlterTripsTableToFixRelationIssues.ts\n            \n            class\n            AlterTripsTableToFixRelationIssues1678223295357\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678223649061-AlterRequestEntityToRenameFieldsWithAMoreSuitableName.ts\n            \n            class\n            AlterRequestEntityToRenameFieldsWithAMoreSuitableName1678223649061\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678276720338-AlterRequestTableToImplementSpatialColumnTypesForLocation.ts\n            \n            class\n            AlterRequestTableToImplementSpatialColumnTypesForLocation1678276720338\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678280557690-AlterRequestTableToRemoveSurge.ts\n            \n            class\n            AlterRequestTableToRemoveSurge1678280557690\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678285496704-AlterRequestTableToHandleGeometryFields.ts\n            \n            class\n            AlterRequestTableToHandleGeometryFields1678285496704\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678290428231-AlterTripsTableToHandleGeolocationFields.ts\n            \n            class\n            AlterTripsTableToHandleGeolocationFields1678290428231\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678294718551-DropPaymentMethodTableAndRelations.ts\n            \n            class\n            DropPaymentMethodTableAndRelations1678294718551\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678295934312-AlterPaymentsTableToAddFieldsFromGatewayResponse.ts\n            \n            class\n            AlterPaymentsTableToAddFieldsFromGatewayResponse1678295934312\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1678308519422-AlterPaymentsTableToAddTransactionId.ts\n            \n            class\n            AlterPaymentsTableToAddTransactionId1678308519422\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/controllers/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @fastify/compress : ^6.2.0\n        \n            @fastify/helmet : ^10.1.0\n        \n            @fastify/static : ^6.9.0\n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.3.9\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/throttler : ^4.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            axios : ^1.3.4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            joi : ^17.8.3\n        \n            nestjs-pino : ^3.1.2\n        \n            pg : ^8.9.0\n        \n            pino-http : ^8.3.3\n        \n            pino-pretty : ^9.4.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.12\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CardType   (src/.../card-type.enum.ts)\n                        \n                        \n                            Fees   (src/.../trip.helper.ts)\n                        \n                        \n                            GatewayEndpoints   (src/.../payment-gateway.lib.ts)\n                        \n                        \n                            PaymentMethod   (src/.../payment-method.enum.ts)\n                        \n                        \n                            PaymentStatus   (src/.../payment-status.enum.ts)\n                        \n                        \n                            RequestStatus   (src/.../request-status.enum.ts)\n                        \n                        \n                            TripStatus   (src/.../trip-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/commons/enums/card-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n                        \n                            \n                                 VISA\n                            \n                        \n                        \n                            \n                                Value : VISA\n                            \n                        \n                        \n                            \n                                 MASTERCARD\n                            \n                        \n                        \n                            \n                                Value : MASTERCARD\n                            \n                        \n                        \n                            \n                                 AMERICAN_EXPRESS\n                            \n                        \n                        \n                            \n                                Value : AMERICAN_EXPRESS\n                            \n                        \n            \n        \n\n    src/api/commons/helpers/trip.helper.ts\n    \n        \n            \n                \n                    \n                        \n                        Fees\n                    \n                \n                        \n                            \n                                 BASE\n                            \n                        \n                        \n                            \n                                Value : 3500\n                            \n                        \n                        \n                            \n                                 DISTANCE\n                            \n                        \n                        \n                            \n                                Value : 1000\n                            \n                        \n                        \n                            \n                                 DURATION\n                            \n                        \n                        \n                            \n                                Value : 200\n                            \n                        \n            \n        \n\n    src/api/libs/payment-gateway.lib.ts\n    \n        \n            \n                \n                    \n                        \n                        GatewayEndpoints\n                    \n                \n                        \n                            \n                                 CARDS\n                            \n                        \n                        \n                            \n                                Value : tokens/cards\n                            \n                        \n                        \n                            \n                                 MERCHANTS\n                            \n                        \n                        \n                            \n                                Value : merchants\n                            \n                        \n                        \n                            \n                                 TRANSACTIONS\n                            \n                        \n                        \n                            \n                                Value : transactions\n                            \n                        \n            \n        \n\n    src/api/commons/enums/payment-method.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentMethod\n                    \n                \n                        \n                            \n                                 CASH\n                            \n                        \n                        \n                            \n                                Value : CASH\n                            \n                        \n                        \n                            \n                                 CREDIT_CARD\n                            \n                        \n                        \n                            \n                                Value : CREDIT_CARD\n                            \n                        \n                        \n                            \n                                 PSE\n                            \n                        \n                        \n                            \n                                Value : PSE\n                            \n                        \n            \n        \n\n    src/api/commons/enums/payment-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : APPROVED\n                            \n                        \n                        \n                            \n                                 DECLINED\n                            \n                        \n                        \n                            \n                                Value : DECLINED\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n            \n        \n\n    src/api/commons/enums/request-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestStatus\n                    \n                \n                        \n                            \n                                 WAITING\n                            \n                        \n                        \n                            \n                                Value : WAITING\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : ACCEPTED\n                            \n                        \n            \n        \n\n    src/api/commons/enums/trip-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TripStatus\n                    \n                \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 PAYMENT_PENDING\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_PENDING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_providers\n\n\n\n\nRequestModule\n\nRequestModule\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nRequestModule->ApiModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigModule \n\nConfigModule \n\nConfigModule  -->\n\nConfigModule->ConfigModule \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDatabaseModule \n\nDatabaseModule \n\nDatabaseModule  -->\n\nDatabaseModule->DatabaseModule \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nDriverService\n\nDriverService\n\nRequestModule -->\n\nDriverService->RequestModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nRequestModule -->\n\nPaymentService->RequestModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nRequestModule -->\n\nRequestService->RequestModule\n\n\n\n\n\nRiderService\n\nRiderService\n\nRequestModule -->\n\nRiderService->RequestModule\n\n\n\n\n\nTripService\n\nTripService\n\nRequestModule -->\n\nTripService->RequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Small ride-hailing service for monetary transactions\n        \n            Keywords : NestJS, Ride Hailing, TypeORM, Postgres, ESLint, Husky, Commit Lint, Health Check, Rate Limiting\n        \n            Homepage : https://github.com/jacksonr20/ride-hailing-service-test/#readme\n        \n            Bugs : https://github.com/jacksonr20/ride-hailing-service-test/issues\n        \n            License : UNLICENSED\n        \n            Author : Jackson Rodriguez\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            calculateFare   (src/.../trip.helper.ts)\n                        \n                        \n                            configService   (src/.../typeOrm.config.ts)\n                        \n                        \n                            CONNECTION_OPTIONS   (src/.../typeOrm.config.ts)\n                        \n                        \n                            distanceToKilometers   (src/.../trip.helper.ts)\n                        \n                        \n                            durationToMinutes   (src/.../trip.helper.ts)\n                        \n                        \n                            generateUuid   (src/.../generate-uuid.helper.ts)\n                        \n                        \n                            transformFareToCurrency   (src/.../trip.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/commons/helpers/trip.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        calculateFare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (distance: number, duration: number): number => {\n  const distanceFare = distance * Fees.DISTANCE;\n  const durationFare = duration * Fees.DURATION;\n\n  return distanceFare + durationFare + Fees.BASE;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distanceToKilometers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (distanceInMeters: number): number => Number((distanceInMeters / 1000).toFixed(1))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        durationToMinutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (durationInSeconds: number): number => Number((durationInSeconds / 60).toFixed(1))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformFareToCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fare: number): string =>\n  new Intl.NumberFormat('es-CO', {\n    style: 'currency',\n    currency: 'COP',\n    minimumFractionDigits: 2,\n  }).format(fare)\n                    \n                \n\n\n        \n    \n\n    src/database/config/typeOrm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONNECTION_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: configService.get('DATABASE_HOST'),\n  port: configService.get('DATABASE_PORT'),\n  username: configService.get('DATABASE_USERNAME'),\n  password: configService.get('DATABASE_PASSWORD'),\n  database: configService.get('DATABASE_NAME'),\n  entities: [join(__dirname, '../entities', '*.entity.{js,ts}'), join(__dirname, '../..', 'api/**/entities/**', '*.entity.{js,ts}')],\n  migrations: [join(__dirname, '../migrations', '*.{js,ts}')],\n  synchronize: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/api/commons/helpers/generate-uuid.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateUuid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => uuid()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
